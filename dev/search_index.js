var documenterSearchIndex = {"docs":
[{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html#Working-With-Genie-Apps:-Intermediate-Topics","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"HEADS UP","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"This guide is still work in progress and some things might not work as expected. We're working on it though and it should be ready in a couple of weeks. You can star and follow Genie on Github to be notified when updates are added.","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html#Handling-forms","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Handling forms","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"Now, the problem is that Bill Gates reads – a lot! It would be much easier if we would allow our users to add a few books themselves, to give us a hand. But since, obviously, we're not going to give them access to our Julia REPL, we should setup a web page with a form. Let's do it.","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"We'll start by adding the new routes:","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"# routes.jl\nroute(\"/bgbooks/new\", BooksController.new)\nroute(\"/bgbooks/create\", BooksController.create, method = POST, named = :create_book)","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"The first route will be used to display the page with the new book form. The second will be the target page for submitting our form - this page will accept the form's payload. Please note that it's configured to match POST requests and that we gave it a name. We'll use the name in our form so that Genie will dynamically generate the correct links to the corresponding URL (to avoid hard coding URLs). This way we'll make sure that our form will always submit to the right URL, even if we change the route (as long as we don't change the name).","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"Now, to add the methods in BooksController. Add these definition under the billgatesbooks function (make sure you add them in BooksController, not in BooksController.API):","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"# BooksController.jl\nfunction new()\n  html(:books, :new)\nend\n\nfunction create()\n  # code here\nend","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"The new method should be clear: we'll just render a view file called new. As for create, for now it's just a placeholder.","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"Next, to add our view. Add a blank file called new.jl.html in app/resources/books/views. Using Julia:","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"julia> touch(\"app/resources/books/views/new.jl.html\")","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"Make sure that it has this content:","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"<!-- app/resources/books/views/new.jl.html -->\n<h2>Add a new book recommended by Bill Gates</h2>\n<p>\n  For inspiration you can visit <a href=\"https://www.gatesnotes.com/Books\" target=\"_blank\">Bill Gates' website</a>\n</p>\n<form action=\"$(Genie.Router.linkto(:create_book))\" method=\"POST\">\n  <input type=\"text\" name=\"book_title\" placeholder=\"Book title\" /><br />\n  <input type=\"text\" name=\"book_author\" placeholder=\"Book author\" /><br />\n  <input type=\"submit\" value=\"Add book\" />\n</form>","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"Notice that the form's action calls the linkto method, passing in the name of the route to generate the URL, resulting in the following HTML: <form method=\"POST\" action=\"/bgbooks/create\">.","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"We should also update the BooksController.create method to do something useful with the form data. Let's make it create a new book, persist it to the database and redirect to the list of books. Here is the code:","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"# BooksController.jl\nusing Genie.Router, Genie.Renderer\n\nfunction create()\n  Book(title = @params(:book_title), author = @params(:book_author)) |> save && redirect(:get_bgbooks)\nend","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"A few things are worth pointing out in this snippet:","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"again, we're accessing the @params collection to extract the request data, in this case passing in the names of our form's inputs as parameters.","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"We need to bring Genie.Router into scope in order to access @params;","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"we're using the redirect method to perform a HTTP redirect. As the argument we're passing in the name of the route, just like we did with the form's action.","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"However, we didn't set any route to use this name. It turns out that Genie gives default names to all the routes. We can use these – but a word of notice: these names are generated using the properties of the route, so if the route changes it's possible that the name will change too. So either make sure your route stays unchanged – or explicitly name your routes. The autogenerated name, get_bgbooks corresponds to the method (GET) and the route (bgbooks).","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"In order to get info about the defined routes you can use the Router.named_routes function:","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"julia> Router.named_routes()\njulia> Dict{Symbol,Genie.Router.Route} with 6 entries:\n  :get_bgbooks        => Route(\"GET\", \"/bgbooks\", billgatesbooks, Dict{Symbol,Any}(), Function[], Function[])\n  :get_bgbooks_new    => Route(\"GET\", \"/bgbooks/new\", new, Dict{Symbol,Any}(), Function[], Function[])\n  :get                => Route(\"GET\", \"/\", (), Dict{Symbol,Any}(), Function[], Function[])\n  :get_api_v1_bgbooks => Route(\"GET\", \"/api/v1/bgbooks\", billgatesbooks, Dict{Symbol,Any}(), Function[], Function[])\n  :create_book        => Route(\"POST\", \"/bgbooks/create\", create, Dict{Symbol,Any}(), Function[], Function[])\n  :get_friday         => Route(\"GET\", \"/friday\", (), Dict{Symbol,Any}(), Function[], Function[])","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"Let's try it out. Input something and submit the form. If everything goes well a new book will be persisted to the database – and it will be added at the bottom of the list of books.","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html#Uploading-files","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Uploading files","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"Our app looks great – but the list of books would be so much better if we'd display the covers as well. Let's do it!","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html#Modify-the-database","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Modify the database","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"The first thing we need to do is to modify our table to add a new column, for storing a reference to the name of the cover image. Obviously, we'll use migrations:","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"julia> SearchLight.Generator.newmigration(\"add cover column\")\n[debug] New table migration created at db/migrations/2019030813344258_add_cover_column.jl","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"Now we need to edit the migration file - please make it look like this:","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"# db/migrations/*_add_cover_column.jl\nmodule AddCoverColumn\n\nimport SearchLight.Migrations: add_column, add_index\n\n# SQLite does not support column removal so the `remove_column` method is not implemented in the SearchLightSQLite adapter\n# If using SQLite do not add the following import\nimport SearchLight.Migrations: remove_column\n\nfunction up()\n  add_column(:books, :cover, :string)\nend\n\nfunction down()\n  # if using the SQLite backend, do not add the next line, it is not supported\n  remove_column(:books, :cover)\nend\n\nend","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"Looking good - lets ask SearchLight to run it:","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"julia> SearchLight.Migration.last_up()\n[debug] Executed migration AddCoverColumn up","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"If you want to double check, ask SearchLight for the migrations status:","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"julia> SearchLight.Migration.status()\n\n|   |                  Module name & status  |\n|   |                             File name  |\n|---|----------------------------------------|\n|   |                   CreateTableBooks: UP |\n| 1 | 2018100120160530_create_table_books.jl |\n|   |                     AddCoverColumn: UP |\n| 2 |   2019030813344258_add_cover_column.jl |","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"Perfect! Now we need to add the new column as a field to the Books.Book model:","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"module Books\n\nusing SearchLight, SearchLight.Validation, BooksValidator\n\nexport Book\n\nBase.@kwdef mutable struct Book <: AbstractModel\n  id::DbId = DbId()\n  title::String = \"\"\n  author::String = \"\"\n  cover::String = \"\"\nend\n\nend","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"As a quick test we can extend our JSON view and see that all goes well - make it look like this:","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"# app/resources/books/views/billgatesbooks.json.jl\n\"Bill's Gates list of recommended books\" => [Dict(\"author\" => b.author,\n                                                  \"title\" => b.title,\n                                                  \"cover\" => b.cover) for b in @vars(:books)]","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"If we navigate http://localhost:8000/api/v1/bgbooks you should see the newly added \"cover\" property (empty, but present).","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html#Heads-up!","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Heads up!","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"Sometimes Julia/Genie/Revise fails to update structs on changes. If you get an error saying that Book does not have a cover field, please restart the Genie app.","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html#File-uploading","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"File uploading","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"Next step, extending our form to upload images (book covers). Please edit the new.jl.html view file as follows:","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"<h3>Add a new book recommended by Bill Gates</h3>\n<p>\n  For inspiration you can visit <a href=\"https://www.gatesnotes.com/Books\" target=\"_blank\">Bill Gates' website</a>\n</p>\n<form action=\"$(Genie.Router.linkto(:create_book))\" method=\"POST\" enctype=\"multipart/form-data\">\n  <input type=\"text\" name=\"book_title\" placeholder=\"Book title\" /><br />\n  <input type=\"text\" name=\"book_author\" placeholder=\"Book author\" /><br />\n  <input type=\"file\" name=\"book_cover\" /><br />\n  <input type=\"submit\" value=\"Add book\" />\n</form>","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"The new bits are:","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"we added a new attribute to our <form> tag: enctype=\"multipart/form-data\". This is required in order to support files payloads.\nthere's a new input of type file: <input type=\"file\" name=\"book_cover\" />","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"You can see the updated form by visiting http://localhost:8000/bgbooks/new","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"Now, time to add a new book, with the cover! How about \"Identity\" by Francis Fukuyama? Sounds good. You can use whatever image you want for the cover, or maybe borrow the one from Bill Gates, I hope he won't mind https://www.gatesnotes.com/-/media/Images/GoodReadsBookCovers/Identity.png. Just download the file to your computer so you can upload it through our form.","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"Almost there - now to add the logic for handling the uploaded file server side. Please update the BooksController.create method to look like this:","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"# BooksController\nfunction create()\n  cover_path = if haskey(filespayload(), \"book_cover\")\n      path = joinpath(\"img\", \"covers\", filespayload(\"book_cover\").name)\n      write(joinpath(\"public\", path), IOBuffer(filespayload(\"book_cover\").data))\n\n      path\n    else\n      \"\"\n  end\n\n  Book( title = @params(:book_title),\n        author = @params(:book_author),\n        cover = cover_path) |> save && redirect(:get_bgbooks)\nend","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"Also, very important, you need to make sure that BooksController is using Genie.Requests.","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"Regarding the code, there's nothing very fancy about it. First we check if the files payload contains an entry for our book_cover input. If yes, we compute the path where we want to store the file, write the file, and store the path in the database.","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"Please make sure that you create the folder covers/ within public/img/.","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"Great, now let's display the images. Let's start with the HTML view - please edit app/resources/books/views/billgatesbooks.jl.html and make sure it has the following content:","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"<!-- app/resources/books/views/billgatesbooks.jl.html -->\n<h1>Bill's Gates top $( length(@vars(:books)) ) recommended books</h1>\n<ul>\n<%\n@foreach(@vars(:books)) do book\n%>\n  <li><img src='$( isempty(book.cover) ? \"img/docs.png\" : book.cover )' width=\"100px\" /> $(book.title) by $(book.author)\n<%\nend\n%>\n</ul>","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"Basically here we check if the cover property is not empty, and display the actual cover. Otherwise we show a placeholder image. You can check the result at http://localhost:8000/bgbooks","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"As for the JSON view, it already does what we want - you can check that the cover property is now outputted, as stored in the database: http://localhost:8000/api/v1/bgbooks","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"Success, we're done here!","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html#Heads-up!-2","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Heads up!","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"In production you will have to make the upload code more robust - the big problem here is that we store the cover file as it comes from the user which can lead to name clashes and files being overwritten - not to mention security vulnerabilities. A more robust way would be to compute a hash based on author and title and rename the cover to that.","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html#One-more-thing...","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"One more thing...","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"So far so good, but what if we want to update the books we have already uploaded? It would be nice to add those missing covers. We need to add a bit of functionality to include editing features.","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"First things first - let's add the routes. Please add these two new route definitions to the routes.jl file:","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"route(\"/bgbooks/:id::Int/edit\", BooksController.edit)\nroute(\"/bgbooks/:id::Int/update\", BooksController.update, method = POST, named = :update_book)","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"We defined two new routes. The first will display the book object in the form, for editing. While the second will take care of actually updating the database, server side. For both routes we need to pass the id of the book that we want to edit - and we want to constrain it to an Int. We express this as the /:id::Int/ part of the route.","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"We also want to:","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"reuse the form which we have defined in app/resources/books/views/new.jl.html\nmake the form aware of whether it's used to create a new book, or for editing an existing one respond accordingly by setting the correct action\npre-fill the inputs with the book's info when editing a book.","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"OK, that's quite a list and this is where things become interesting. This is an important design pattern for CRUD web apps. So, are you ready, cause here is the trick: in order to simplify the rendering of the form, we will always pass a book object into it. When editing a book it will be the book corresponding to the id passed into the route. And when creating a new book, it will be just an empty book object we'll create and then dispose of.","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html#Using-view-partials","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Using view partials","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"First, let's set up the views. In app/resources/books/views/ please create a new file called form.jl.html. Then, from app/resources/books/views/new.jl.html cut the <form> code. That is, everything between the opening and closing <form>...</form> tags. Paste it into the newly created form.jl.html file. Now, back to new.jl.html, instead of the previous <form>...</form> code add:","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"<% partial(\"app/resources/books/views/form.jl.html\", context = @__MODULE__) %>","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"This line, as the partial function suggests, includes a view partial, which is a part of a view file, effectively including a view within another view. Notice that we're explicitly passing the context so Genie can set the correct variable scope when including the partial.","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"You can reload the new page to make sure that everything still works: http://localhost:8000/bgbooks/new","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"Now, let's add an Edit option to our list of books. Please go back to our list view file, billgatesbooks.jl.html. Here, for each iteration, within the @foreach block we'll want to dynamically link to the edit page for the corresponding book.","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html#@foreach-with-view-partials","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"@foreach with view partials","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"However, this @foreach which renders a Julia string is very ugly - and we now know how to refactor it, by using a view partial. Let's do it. First, replace the body of the @foreach block:","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"<!-- app/resources/books/views/billgatesbooks.jl.html -->\n\"\"\"<li><img src='$( isempty(book.cover) ? \"img/docs.png\" : book.cover )' width=\"100px\" /> $(book.title) by $(book.author)\"\"\"","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"with:","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"partial(\"app/resources/books/views/book.jl.html\", book = book, context = @__MODULE__)","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"Notice that we are using the partial function and we pass the book object into our view, under the name book (will be accessible in @vars(:book) inside the view partial). Again, we're passing the scope's context (our controller object).","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"Next, create the book.jl.html in app/resources/books/views/, for example with","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"julia> touch(\"app/resources/books/views/book.jl.html\")","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Working With Genie Apps: Intermediate Topics [WIP]","text":"Add this content to it: TO BE CONTINUED","category":"page"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html#View-helpers","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"View helpers","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps_Intermediary_Topics.html#Using-Flax-elements","page":"Working With Genie Apps: Intermediate Topics [WIP]","title":"Using Flax elements","text":"","category":"section"},{"location":"guides/Interactive_environment.html#対話型環境でのGenieの利用(Jupyter/IJulia、REPLなど)","page":"対話型環境でのGenieの利用","title":"対話型環境でのGenieの利用(Jupyter/IJulia、REPLなど)","text":"","category":"section"},{"location":"guides/Interactive_environment.html","page":"対話型環境でのGenieの利用","title":"対話型環境でのGenieの利用","text":"Genieはアドホックな探索的プログラミングに利用することで、Webサーバを迅速に立ち上げたり、自作のJulia関数を公開することができます。","category":"page"},{"location":"guides/Interactive_environment.html","page":"対話型環境でのGenieの利用","title":"対話型環境でのGenieの利用","text":"一度Genieをスコープに入れると、新たなrouteを定義できます。routeはURLを関数に関連付けます。","category":"page"},{"location":"guides/Interactive_environment.html","page":"対話型環境でのGenieの利用","title":"対話型環境でのGenieの利用","text":"julia> import Genie.Router: route\njulia> route(\"/\") do\n         \"Hi there!\"\n       end","category":"page"},{"location":"guides/Interactive_environment.html","page":"対話型環境でのGenieの利用","title":"対話型環境でのGenieの利用","text":"ここで使用するWebサーバを起動します。","category":"page"},{"location":"guides/Interactive_environment.html","page":"対話型環境でのGenieの利用","title":"対話型環境でのGenieの利用","text":"julia> Genie.startup()","category":"page"},{"location":"guides/Interactive_environment.html","page":"対話型環境でのGenieの利用","title":"対話型環境でのGenieの利用","text":"http://localhost:8000にアクセスすると、「Hi there！」というメッセージが確認できます。","category":"page"},{"location":"guides/Interactive_environment.html","page":"対話型環境でのGenieの利用","title":"対話型環境でのGenieの利用","text":"より複雑なURIを定義でき、前に定義した関数に関連付けることができます。","category":"page"},{"location":"guides/Interactive_environment.html","page":"対話型環境でのGenieの利用","title":"対話型環境でのGenieの利用","text":"julia> function hello_world()\n         \"Hello World!\"\n       end\njulia> route(\"/hello/world\", hello_world)","category":"page"},{"location":"guides/Interactive_environment.html","page":"対話型環境でのGenieの利用","title":"対話型環境でのGenieの利用","text":"(上記で)明らかなように、関数は現在のスコープでアクセス可能である限り、どこにでも(他のモジュール内でも)定義できます。","category":"page"},{"location":"guides/Interactive_environment.html","page":"対話型環境でのGenieの利用","title":"対話型環境でのGenieの利用","text":"現状、ブラウザでhttp://localhost:8000/hello/worldにアクセスできるようになっています。","category":"page"},{"location":"guides/Interactive_environment.html","page":"対話型環境でのGenieの利用","title":"対話型環境でのGenieの利用","text":"もちろん、GETパラメータにもアクセスできます。","category":"page"},{"location":"guides/Interactive_environment.html","page":"対話型環境でのGenieの利用","title":"対話型環境でのGenieの利用","text":"julia> import Genie.Router: @params\njulia> route(\"/echo/:message\") do\n         @params(:message)\n       end","category":"page"},{"location":"guides/Interactive_environment.html","page":"対話型環境でのGenieの利用","title":"対話型環境でのGenieの利用","text":"http://localhost:8000/echo/ciaoにアクセスすると、ciaoと出力されます。","category":"page"},{"location":"guides/Interactive_environment.html","page":"対話型環境でのGenieの利用","title":"対話型環境でのGenieの利用","text":"また型で一致させることもできます。","category":"page"},{"location":"guides/Interactive_environment.html","page":"対話型環境でのGenieの利用","title":"対話型環境でのGenieの利用","text":"julia> route(\"/sum/:x::Int/:y::Int\") do\n         @params(:x) + @params(:y)\n       end","category":"page"},{"location":"guides/Interactive_environment.html","page":"対話型環境でのGenieの利用","title":"対話型環境でのGenieの利用","text":"デフォルトでは、GETパラメータはSubString(より正確にはSubString{String})型として抽出されます。型の制約が追加されると、GenieはSubStringを指定された型への変換を試みます。","category":"page"},{"location":"guides/Interactive_environment.html","page":"対話型環境でのGenieの利用","title":"対話型環境でのGenieの利用","text":"上記が機能するためには、Genieに変換の実行方法を伝えることも必要です。","category":"page"},{"location":"guides/Interactive_environment.html","page":"対話型環境でのGenieの利用","title":"対話型環境でのGenieの利用","text":"julia> import Base.convert\njulia> convert(::Type{Int}, s::SubString{String}) = parse(Int, s)","category":"page"},{"location":"guides/Interactive_environment.html","page":"対話型環境でのGenieの利用","title":"対話型環境でのGenieの利用","text":"ここで、http://localhost:8000/sum/2/3にアクセスすると、5と表示されます。","category":"page"},{"location":"guides/Interactive_environment.html#クエリ文字列パラメータの処理","page":"対話型環境でのGenieの利用","title":"クエリ文字列パラメータの処理","text":"","category":"section"},{"location":"guides/Interactive_environment.html","page":"対話型環境でのGenieの利用","title":"対話型環境でのGenieの利用","text":"...?foo=bar&baz=2のようなクエリ文字列パラメータは、Genieによって自動的に解凍され、@paramsコレクションに配置されます。例は以下の通りです。","category":"page"},{"location":"guides/Interactive_environment.html","page":"対話型環境でのGenieの利用","title":"対話型環境でのGenieの利用","text":"julia> route(\"/sum/:x::Int/:y::Int\") do\n         @params(:x) + @params(:y) + parse(Int, get(@params, :initial_value, \"0\"))\n       end","category":"page"},{"location":"guides/Interactive_environment.html","page":"対話型環境でのGenieの利用","title":"対話型環境でのGenieの利用","text":"ここで、http://localhost:8000/sum/2/3?initial_value=10にアクセスすると、15と出力されます。","category":"page"},{"location":"tutorials/14--The_Secrets_File.html#シークレットファイル(config/secrets.jl)","page":"シークレットファイル","title":"シークレットファイル(config/secrets.jl)","text":"","category":"section"},{"location":"tutorials/14--The_Secrets_File.html","page":"シークレットファイル","title":"シークレットファイル","text":"秘密の設定データ(APIキーやユーザ名、パスワードなど)は、config/secrets.jlファイルに追加すべきです。このファイルはアプリ生成時にデフォルトで.gitigonreファイルに追加されるため、ソース管理に追加されることはありません。誤って公開することは避けてください。","category":"page"},{"location":"tutorials/14--The_Secrets_File.html#スコープ","page":"シークレットファイル","title":"スコープ","text":"","category":"section"},{"location":"tutorials/14--The_Secrets_File.html","page":"シークレットファイル","title":"シークレットファイル","text":"secrets.jlファイルに追加されたすべての定義(変数、定数、関数、モジュールなど)はアプリのモジュールにロードされます。そのため、アプリ名がMyGenieAppの場合、定義はMyGenieAppモジュールの下で利用できます。","category":"page"},{"location":"tutorials/14--The_Secrets_File.html","page":"シークレットファイル","title":"シークレットファイル","text":"","category":"page"},{"location":"tutorials/14--The_Secrets_File.html","page":"シークレットファイル","title":"シークレットファイル","text":"注意喚起","category":"page"},{"location":"tutorials/14--The_Secrets_File.html","page":"シークレットファイル","title":"シークレットファイル","text":"アプリの名前が変更可能である場合、UserApp定数を介してアプリのモジュールにアクセスすることもできます。つまり、secrets.jlに追加されたすべての定義は、UserAppモジュールからもアクセスできるということです。(UserApp === MyGenieAppということです)","category":"page"},{"location":"tutorials/14--The_Secrets_File.html","page":"シークレットファイル","title":"シークレットファイル","text":"","category":"page"},{"location":"API/flash.html","page":"Flash","title":"Flash","text":"CurrentModule = Flash","category":"page"},{"location":"API/flash.html","page":"Flash","title":"Flash","text":"flash\nflash_has_message","category":"page"},{"location":"API/flash.html#Genie.Flash.flash","page":"Flash","title":"Genie.Flash.flash","text":"flash()\n\nReturns the flash dict object associated with the current HTTP request.\n\n\n\n\n\nflash(value::Any) :: Nothing\n\nStores value onto the flash.\n\n\n\n\n\n","category":"function"},{"location":"API/flash.html#Genie.Flash.flash_has_message","page":"Flash","title":"Genie.Flash.flash_has_message","text":"flash_has_message() :: Bool\n\nChecks if there's any value on the flash storage\n\n\n\n\n\n","category":"function"},{"location":"API/deploy_heroku.html","page":"Heroku","title":"Heroku","text":"CurrentModule = Deploy.Heroku","category":"page"},{"location":"API/deploy_heroku.html","page":"Heroku","title":"Heroku","text":"createapp\npush\nrelease\nopen\nlogin\nlogs","category":"page"},{"location":"API/deploy_heroku.html#Genie.Deploy.Heroku.createapp","page":"Heroku","title":"Genie.Deploy.Heroku.createapp","text":"createapp(appname::String; region::String = \"us\")\n\nRuns the heroku create command to create a new app in the indicated region. See https://devcenter.heroku.com/articles/heroku-cli-commands#heroku-apps-create-app\n\n\n\n\n\n","category":"function"},{"location":"API/deploy_heroku.html#Genie.Deploy.Heroku.push","page":"Heroku","title":"Genie.Deploy.Heroku.push","text":"push(appname::String; apptype::String = \"web\")\n\nInvokes the heroku container:push which builds, then pushes Docker images to deploy your Heroku app. See https://devcenter.heroku.com/articles/heroku-cli-commands#heroku-container-push\n\n\n\n\n\n","category":"function"},{"location":"API/deploy_heroku.html#Genie.Deploy.Heroku.release","page":"Heroku","title":"Genie.Deploy.Heroku.release","text":"release(appname::String; apptype::String = \"web\")\n\nInvokes the keroku container:release which releases previously pushed Docker images to your Heroku app. See https://devcenter.heroku.com/articles/heroku-cli-commands#heroku-container-push\n\n\n\n\n\n","category":"function"},{"location":"API/deploy_heroku.html#Genie.Deploy.Heroku.open","page":"Heroku","title":"Genie.Deploy.Heroku.open","text":"open(appname::String)\n\nInvokes the heroku open command which open the app in a web browser. See https://devcenter.heroku.com/articles/heroku-cli-commands#heroku-apps-open-path\n\n\n\n\n\n","category":"function"},{"location":"API/deploy_heroku.html#Genie.Deploy.Heroku.login","page":"Heroku","title":"Genie.Deploy.Heroku.login","text":"login()\n\nInvokes the heroku container:login to log in to Heroku Container Registry, See https://devcenter.heroku.com/articles/heroku-cli-commands#heroku-container-login\n\n\n\n\n\n","category":"function"},{"location":"API/deploy_heroku.html#Genie.Deploy.Heroku.logs","page":"Heroku","title":"Genie.Deploy.Heroku.logs","text":"logs(appname::String; lines::Int = 1_000)\n\nDisplay recent heroku log output. https://devcenter.heroku.com/articles/heroku-cli-commands#heroku-logs\n\n\n\n\n\n","category":"function"},{"location":"API/app.html","page":"App","title":"App","text":"CurrentModule = App","category":"page"},{"location":"API/app.html","page":"App","title":"App","text":"bootstrap","category":"page"},{"location":"API/app.html#Genie.App.bootstrap","page":"App","title":"Genie.App.bootstrap","text":"bootstrap(context::Union{Module,Nothing} = nothing) :: Nothing\n\nKickstarts the loading of a Genie app by loading the environment settings.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_js.html","page":"JS Renderer","title":"JS Renderer","text":"CurrentModule = Renderer.Js","category":"page"},{"location":"API/renderer_js.html","page":"JS Renderer","title":"JS Renderer","text":"get_template\nto_js\nrender\njs\nGenie.Router.error","category":"page"},{"location":"API/inflector.html","page":"Inflector","title":"Inflector","text":"CurrentModule = Inflector","category":"page"},{"location":"API/inflector.html","page":"Inflector","title":"Inflector","text":"to_singular\nto_singular_irregular\nto_plural\nto_plural_irregular\nfrom_underscores\nis_singular\nis_plural\nirregulars\nirregular\nis_irregular\nIRREGULAR_NOUNS","category":"page"},{"location":"API/inflector.html#Genie.Inflector.to_singular","page":"Inflector","title":"Genie.Inflector.to_singular","text":"to_singular(word::String; is_irregular::Bool = false) :: Union{Nothing,String}\n\nReturns the singural form of word.\n\n\n\n\n\n","category":"function"},{"location":"API/inflector.html#Genie.Inflector.to_singular_irregular","page":"Inflector","title":"Genie.Inflector.to_singular_irregular","text":"to_singular_irregular(word::String) :: Union{Nothing,String}\n\nReturns the singular form of the irregular word word.\n\n\n\n\n\n","category":"function"},{"location":"API/inflector.html#Genie.Inflector.to_plural","page":"Inflector","title":"Genie.Inflector.to_plural","text":"to_plural(word::String; is_irregular::Bool = false) :: Union{Nothing,String}\n\nReturns the plural form of word.\n\n\n\n\n\n","category":"function"},{"location":"API/inflector.html#Genie.Inflector.to_plural_irregular","page":"Inflector","title":"Genie.Inflector.to_plural_irregular","text":"to_plural_irregular(word::String) :: Union{Nothing,String}\n\nReturns the plural form of the irregular word word.\n\n\n\n\n\n","category":"function"},{"location":"API/inflector.html#Genie.Inflector.from_underscores","page":"Inflector","title":"Genie.Inflector.from_underscores","text":"from_underscores(word::String) :: String\n\nGenerates SnakeCase form of word from underscore_case.\n\n\n\n\n\n","category":"function"},{"location":"API/inflector.html#Genie.Inflector.is_singular","page":"Inflector","title":"Genie.Inflector.is_singular","text":"is_singular(word::String) :: Bool\n\nReturns wether or not word is a singular.\n\n\n\n\n\n","category":"function"},{"location":"API/inflector.html#Genie.Inflector.is_plural","page":"Inflector","title":"Genie.Inflector.is_plural","text":"is_plural(word::String) :: Bool\n\nReturns wether or not word is a plural.\n\n\n\n\n\n","category":"function"},{"location":"API/inflector.html#Genie.Inflector.irregulars","page":"Inflector","title":"Genie.Inflector.irregulars","text":"irregulars() :: Vector{Tuple{String,String}}\n\nReturns a vector of words with irregular singular or plural forms.\n\n\n\n\n\n","category":"function"},{"location":"API/inflector.html#Genie.Inflector.irregular","page":"Inflector","title":"Genie.Inflector.irregular","text":"irregular(word::String) :: Union{Nothing,Tuple{String,String}}\n\nWether or not word has an irregular singular or plural form.\n\n\n\n\n\n","category":"function"},{"location":"API/inflector.html#Genie.Inflector.is_irregular","page":"Inflector","title":"Genie.Inflector.is_irregular","text":"function is_irregular(word::String) :: Bool\n\nWhether or not word has a singular or plural irregular form.\n\n\n\n\n\n","category":"function"},{"location":"API/inflector.html#Genie.Inflector.IRREGULAR_NOUNS","page":"Inflector","title":"Genie.Inflector.IRREGULAR_NOUNS","text":"Vector of nouns with irregular forms of singular and/or plural. Each tuple contains pairs of singular and plural forms.\n\n\n\n\n\n","category":"constant"},{"location":"tutorials/4--Developing_Web_Services.html#Genie-Webサービスの開発","page":"Webサービスの作成","title":"Genie Webサービスの開発","text":"","category":"section"},{"location":"tutorials/4--Developing_Web_Services.html","page":"Webサービスの作成","title":"Webサービスの作成","text":"REPLでアドホック(その場限りな)Webサービスを起動し、マイクロサービスをラップする小さなスクリプトを作成することは非常に効率的ではありますが、製品版アプリは非常に早く複雑になる傾向があります。また、それらにはより厳しい要件があり、例えば依存関係の管理、アセットの圧縮、コードのリロード、ロギング、環境、またはチームで作業する際の効率的なワークフローを促進する方法としてのコードベースの構造化のようなものが挙げられます。","category":"page"},{"location":"tutorials/4--Developing_Web_Services.html","page":"Webサービスの作成","title":"Webサービスの作成","text":"Genieアプリは、依存関係の管理とバージョン管理(GenieアプリがJuliaアプリであることから、JuliaのPkgを利用)から、強力なアセットパイプライン(YarnやWebpackのような業界で検証済みのツールを利用)、開発中の自動コードリロード(Revise.jlが提供)、明確なリソース指向であるMVCレイアウトまで、これらすべての機能を提供します。","category":"page"},{"location":"tutorials/4--Developing_Web_Services.html","page":"Webサービスの作成","title":"Webサービスの作成","text":"Genieはアプリの構築に向けてモジュール式アプローチを可能とし、必要に応じてコンポーネントを追加することができます。Webサービステンプレート(依存関係の管理、ロギング、環境、ルーティングを含む)で構築を開始することができ、データベースの永続性(SearchLight ORMを利用)、Juilaに組み込まれた高パフォーマンスのHTMLビューテンプレート(Flaxを利用)、アセットパイプラインやコンパイルなどを順次追加することによってアプリを成長させることができます。","category":"page"},{"location":"tutorials/4--Developing_Web_Services.html#Genie-Web-Serviceプロジェクトのセットアップ","page":"Webサービスの作成","title":"Genie Web Serviceプロジェクトのセットアップ","text":"","category":"section"},{"location":"tutorials/4--Developing_Web_Services.html","page":"Webサービスの作成","title":"Webサービスの作成","text":"Genieは、アプリケーションの様々な部分のブートストラップやセットアップに役立つ便利なジェネレータ機能とテンプレートを収録しています。新しいアプリをブートストラップするには、newapp群内の関数の1つを呼び出す必要があります。","category":"page"},{"location":"tutorials/4--Developing_Web_Services.html","page":"Webサービスの作成","title":"Webサービスの作成","text":"julia> using Genie\n\njulia> Genie.newapp_webservice(\"MyGenieApp\")","category":"page"},{"location":"tutorials/4--Developing_Web_Services.html","page":"Webサービスの作成","title":"Webサービスの作成","text":"REPLのログメッセージを参照すると、コマンドが新しいプロジェクトをセットアップするために一度にたくさんのアクションのトリガーになっています。","category":"page"},{"location":"tutorials/4--Developing_Web_Services.html","page":"Webサービスの作成","title":"Webサービスの作成","text":"MyGenieApp/という新しいフォルダを作成します。このフォルダはアプリのファイル置き場を提供しており、フォルダの名前はアプリの名前に対応します。\nMyGenieApp/フォルダ内で、アプリに必要なファイルやフォルダーを作成します。\nアクティブディレクトリをMyGenieApp/に変更し、その中で新しいJuliaプロジェクトを作成します。(Project.tomlファイルを追加)\n新しいGenieアプリに必要な依存関係をすべてインストールします。(Pkgと標準のManifest.tomlファイルを利用)\n最後にWebサーバを起動します。","category":"page"},{"location":"tutorials/4--Developing_Web_Services.html","page":"Webサービスの作成","title":"Webサービスの作成","text":"","category":"page"},{"location":"tutorials/4--Developing_Web_Services.html","page":"Webサービスの作成","title":"Webサービスの作成","text":"ヒント","category":"page"},{"location":"tutorials/4--Developing_Web_Services.html","page":"Webサービスの作成","title":"Webサービスの作成","text":"Genie.newapp、Genie.newapp_webservice、 Genie.newapp_mvc、Genie.newapp_fullstackのインラインヘルプで、アプリケーションのブートストラップに使用できるオプションを確認してください。 さまざまな構成については、今後のセクションで説明します。","category":"page"},{"location":"tutorials/4--Developing_Web_Services.html","page":"Webサービスの作成","title":"Webサービスの作成","text":"","category":"page"},{"location":"tutorials/4--Developing_Web_Services.html#ファイル構成","page":"Webサービスの作成","title":"ファイル構成","text":"","category":"section"},{"location":"tutorials/4--Developing_Web_Services.html","page":"Webサービスの作成","title":"Webサービスの作成","text":"新規作成したWebサービスのファイル構成は以下のとおりです。","category":"page"},{"location":"tutorials/4--Developing_Web_Services.html","page":"Webサービスの作成","title":"Webサービスの作成","text":"├── Manifest.toml\n├── Project.toml\n├── bin\n├── bootstrap.jl\n├── config\n├── genie.jl\n├── log\n├── public\n├── routes.jl\n└── src","category":"page"},{"location":"tutorials/4--Developing_Web_Services.html","page":"Webサービスの作成","title":"Webサービスの作成","text":"ファイルやフォルダにそれぞれ役割があります。","category":"page"},{"location":"tutorials/4--Developing_Web_Services.html","page":"Webサービスの作成","title":"Webサービスの作成","text":"Manifest.tomlとProject.tomlはアプリの依存関係を管理するためにJuliaとPkgに利用されます。\nbin/フォルダにはGenie REPLまたはGenieサーバを起動するためのスクリプトが含まれています。\nbootstrap.jl、genie.jl、およびsrc/フォルダ内のファイルはすべてのファイルはアプリケーションをロードするためにGenieによって利用されています。(ユーザは編集しないでください)\nconfig/フォルダには環境ごとの設定ファイルが含まれています。\nlog/フォルダは環境ごとのログファイルを保管するためにGenieによって利用されます。\npublic/フォルダはドキュメントルートで、ネットワーク/インターネット上のアプリによって公開される静的ファイルを含んでいます。\nroutes.jlはGenieのルートを登録するための専用ファイルです。","category":"page"},{"location":"tutorials/4--Developing_Web_Services.html","page":"Webサービスの作成","title":"Webサービスの作成","text":"","category":"page"},{"location":"tutorials/4--Developing_Web_Services.html","page":"Webサービスの作成","title":"Webサービスの作成","text":"注意喚起","category":"page"},{"location":"tutorials/4--Developing_Web_Services.html","page":"Webサービスの作成","title":"Webサービスの作成","text":"アプリを新規作成した後、routes.jlのようなファイルの編集/保存を許可するために、ファイルのアクセス権を変更する必要があります。","category":"page"},{"location":"tutorials/4--Developing_Web_Services.html","page":"Webサービスの作成","title":"Webサービスの作成","text":"","category":"page"},{"location":"tutorials/4--Developing_Web_Services.html#ロジックの追加","page":"Webサービスの作成","title":"ロジックの追加","text":"","category":"section"},{"location":"tutorials/4--Developing_Web_Services.html","page":"Webサービスの作成","title":"Webサービスの作成","text":"routes.jlファイルを編集し、ファイルの下部にいくつかロジックを追加してみましょう。","category":"page"},{"location":"tutorials/4--Developing_Web_Services.html","page":"Webサービスの作成","title":"Webサービスの作成","text":"route(\"/hello\") do\n  \"Welcome to Genie!\"\nend","category":"page"},{"location":"tutorials/4--Developing_Web_Services.html","page":"Webサービスの作成","title":"Webサービスの作成","text":"http://127.0.0.1:8000/helloに接続すると、温かい挨拶を受けるでしょう。","category":"page"},{"location":"tutorials/4--Developing_Web_Services.html#アプリの成長","page":"Webサービスの作成","title":"アプリの成長","text":"","category":"section"},{"location":"tutorials/4--Developing_Web_Services.html","page":"Webサービスの作成","title":"Webサービスの作成","text":"GenieアプリはJuilaプロジェクトでしかありません。つまり、routes.jlは他のJuilaスクリプトと同様に動作するということです。例えば、追加パッケージを参照したり、pkg>モードに切り替えてプロジェクトごとの依存関係を管理したり、他のファイルを含めたりするなど色々なことができます。","category":"page"},{"location":"tutorials/4--Developing_Web_Services.html","page":"Webサービスの作成","title":"Webサービスの作成","text":"GenieアプリにすぐにロードしたいJuliaコードがある場合、アプリのルートに lib/フォルダを追加し、Juliaファイルを配置することができます。利用可能な場合、lib/フォルダとそのすべてのサブフォルダはGenieによって再帰的にLOAD_PATHに自動追加されます。","category":"page"},{"location":"tutorials/4--Developing_Web_Services.html","page":"Webサービスの作成","title":"Webサービスの作成","text":"データベースの対応を追加する必要がある場合は、アプリのREPLで julia> Genie.Generator.db_support()を実行し、専用のジェネレーターを利用することでSearchLight ORMをいつでも追加できます。","category":"page"},{"location":"tutorials/4--Developing_Web_Services.html","page":"Webサービスの作成","title":"Webサービスの作成","text":"しかしながら、アプリの複雑さが増し、ゼロから開発する場合は、Genieのリソース指向であるMVC構造を活用する方が効率的です。","category":"page"},{"location":"tutorials/15--The_Lib_Folder.html#lib/フォルダ","page":"ユーザーライブラリの自動読み込み","title":"lib/フォルダ","text":"","category":"section"},{"location":"tutorials/15--The_Lib_Folder.html","page":"ユーザーライブラリの自動読み込み","title":"ユーザーライブラリの自動読み込み","text":"Genieでは、アプリの中で既存のJuliaコード(モジュールやファイルなど)を非常に簡単に自動的にロードできます。(標準のGenie MVC構造の場合は除く)ファイルとフォルダをlib/フォルダに追加するだけです。","category":"page"},{"location":"tutorials/15--The_Lib_Folder.html","page":"ユーザーライブラリの自動読み込み","title":"ユーザーライブラリの自動読み込み","text":"","category":"page"},{"location":"tutorials/15--The_Lib_Folder.html","page":"ユーザーライブラリの自動読み込み","title":"ユーザーライブラリの自動読み込み","text":"注意喚起","category":"page"},{"location":"tutorials/15--The_Lib_Folder.html","page":"ユーザーライブラリの自動読み込み","title":"ユーザーライブラリの自動読み込み","text":"lib/フォルダが存在しない場合、自身で作成してください。(コマンド：julia> mkdir(\"lib\"))\nGenieはlib/フォルダの中に配置したファイルをincludeしないが、LOAD_PATHにすべてのフォルダを再帰的に追加します。そのため必要に応じて、自分でファイルをincludeすることはできます。Ginie/JuliaはLOAD_PATHでそれらを見つけるための場所がわかっています。\nlib/フォルダの中のファイルは、Reviseキューに追加されないため、変更があったとしてもGenieによって自動で再ロードされることはありません。lib/フォルダ内のファイルを変更/追加/削除する場合、アプリを再起動するか、手動で追加してReviseで監視および再ロードする必要があります。その理由は、lib/フォルダがレガシーコード用であるからです。コードを積極的に開発する場合、GenieのMVC構造を利用し、必要に応じてモデル、コントローラ、ビューを追加することをお勧めします。","category":"page"},{"location":"tutorials/15--The_Lib_Folder.html","page":"ユーザーライブラリの自動読み込み","title":"ユーザーライブラリの自動読み込み","text":"","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html#高度なルーティング技術","page":"高度なルーティング","title":"高度なルーティング技術","text":"","category":"section"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"Genieのルータは、アプリの頭脳とみなされます。それはWebリクエストを機能と照合し、リクエストの変数と実行環境を抽出、設定し、レスポンスメソッドを呼び出します。このような能力にはルートを定義するための強力な機能セットが必要となります。これらの機能を見ていきましょう。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html#静的ルーティング","page":"高度なルーティング","title":"静的ルーティング","text":"","category":"section"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"最もシンプルなケースから始めると、routeメソッドを利用することで「プレーン」なルートを登録することができます。そのメソッドは、URIパターンとレスポンスを返すために必要な関数を必須引数として扱います。ルータは、ルートを登録する2つの方法をサポートしており、route(pattern::String, f::Function)またはroute(f::Function, pattern::String)が挙げられます。一番目の構文は関数参照を渡すためのもので、二番目はインライン関数を定義するためのものです。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html#例","page":"高度なルーティング","title":"例","text":"","category":"section"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"以下のスニペットは「Genieへようこそ！」という文字列を返すgreet関数を定義しています。routeメソッドへ第二引数としてその関数を渡すことで、ルートハンドラとして関数を利用します。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"using Genie, Genie.Router\n\ngreet() = \"Welcome to Genie!\"\n\nroute(\"/greet\", greet)          # [GET] /greet => greet\n\nup() # start the server","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"ブラウザでhttp://127.0.0.1:8000/greetへ移動すると、コードの動きを確認できます。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"しかし、このようなシンプルなケースでは、専用のハンドラ関数を用意するのはやりすぎかもしれません。そのため、Genieではインラインハンドラを登録できます。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"route(\"/bye\") do\n  \"Good bye!\"\nend                 # [GET] /bye => getfield(Main, Symbol(\"##3#4\"))()","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"http://127.0.0.1:8000/byeに移動すると、すぐにアプリでルート(route)を利用することができます。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"注意喚起","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"ルートは定義された順に追加されますが、最新のものから最古のものまで一致させます。つまり、以前に定義したルートを上書くための新しいルートを定義できるということです。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"Juliaの複数のディスパッチとは異なり、Genieのルータは具体的なルートではなく、最初に一致したルートに一致します。したがって、例えば/*に一致するようにルートを登録すると、以前により具体的なルートを定義していたとしても、すべてのリクエストを処理します。補足としてですが、この手法を利用して、一時的にすべてのユーザをメンテナンスページに誘導することができます。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html#動的ルーティング(ルートパラメータの利用)","page":"高度なルーティング","title":"動的ルーティング(ルートパラメータの利用)","text":"","category":"section"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"静的ルーティングは固定URLに最適です。しかし、コンポーネントがバックエンドの情報(データベースのIDなど)に対応づいており、各リクエストで異なる動的URLである場合はどうでしょうか？例えば、/customers/57943/orders/458230(顧客ID:57943、注文ID:458230)のようなURLをどのように処理するかです。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"このような場合、動的ルーティングまたはルートパラメータによって処理されます。以前の例/customers/57943/orders/458230では、動的ルートを/customers/:customer_id/orders/:order_idとして定義できます。リクエストに一致すると、ルータは値を展開し、それらを@paramsコレクションに公開します。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html#例-2","page":"高度なルーティング","title":"例","text":"","category":"section"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"using Genie, Genie.Router, Genie.Requests\n\nroute(\"/customers/:customer_id/orders/:order_id\") do\n  \"You asked for the order $(payload(:order_id)) for customer $(payload(:customer_id))\"\nend\n\nup()","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html#ルーティングモジュール(GET、POST、PUT、PATCH、DELETE、OPTIONS)","page":"高度なルーティング","title":"ルーティングモジュール(GET、POST、PUT、PATCH、DELETE、OPTIONS)","text":"","category":"section"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"最も一般的なリクエストであるということから、デフォルトでルート(route)はGETリクエストを処理します。他の種類のリクエストメソッドを処理するためのルートを定義するために、HTTPメソッドを示すmethodキーワード引数を渡す必要があります。GenieのルータはGET、POST、PUT、PATCH、DELETE、OPTIONSメソッドをサポートしています。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"ルータはRouter.GET、Router.POST、Router.PUT、Router.PATCH、Router.DELETE、Router.OPTIONSのように各メソッドに対して定数を定義しエクスポートします。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html#例-3","page":"高度なルーティング","title":"例","text":"","category":"section"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"以下、PATCHルートを設定します。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"using Genie, Genie.Router, Genie.Requests\n\nroute(\"/patch_stuff\", method = PATCH) do\n  \"Stuff to patch\"\nend\n\nup()","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"そしてHTTPパッケージを利用してテストします。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"using HTTP\n\nHTTP.request(\"PATCH\", \"http://127.0.0.1:8000/patch_stuff\").body |> String\n2019-08-19 14:23:46:INFO:Main: /patch_stuff 200\n\n\"Stuff to patch\"","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"PATCHメソッドでリクエストを送信することにより、ルートがトリガーされます。その結果、レスポンスボディにアクセスし、レスポンスに対応する「Stuff to patch」という文字列に変換します。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html#名前付きルート","page":"高度なルーティング","title":"名前付きルート","text":"","category":"section"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"Genieでは名前でルートにタグ付けをすることができます。これは、ルートに対する動的URLのために、Router.tolinkメソッドと組み合わせて利用される非常に強力な機能です。この手法の利点は、名前によってルートを参照しtolinkを使用して動的リンクを生成する場合、ルートの名前が一致している限り、ルートパターンを変えたとしてもすべてのURLが新しいルート定義に自動的に一致することです。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"ルートに名前をつけるには、namedキーワード引数を利用する必要があり、これにはSymbolが必要です。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html#例-4","page":"高度なルーティング","title":"例","text":"","category":"section"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"using Genie, Genie.Router, Genie.Requests\n\nroute(\"/customers/:customer_id/orders/:order_id\", named = :get_customer_order) do\n  \"Looking up order $(payload(:order_id)) for customer  $(payload(:customer_id))\"\nend         #  [GET] /customers/:customer_id/orders/:order_id => getfield(Main, Symbol(\"##5#6\"))()","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"ルートの状態をチェックします。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"julia> @routes\nOrderedCollections.OrderedDict{Symbol,Genie.Router.Route} with 1 entry:\n  :get_customer_order => [GET] /customers/:customer_id/orders/:order_id => getfield(Main, Symbol(\"##5#6\"))()","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"注意喚起","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"一貫性のため、Genieはすべてのルートに名前をつけます。ただし、自動生成された名前は状態に依存します。そのため、ルートを変更した場合、名前も変更される可能性があります。したがって、アプリ全体で参照する場合はルートに明示的に名前をつけておくのが最善であると言えます。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"匿名ルートの追加によるルートの状態変化を確認します。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"route(\"/foo\") do\n  \"foo\"\nend  #  [GET] /foo => getfield(Main, Symbol(\"##7#8\"))()\n\njulia> @routes\nOrderedCollections.OrderedDict{Symbol,Genie.Router.Route} with 2 entries:\n  :get_customer_order => [GET] /customers/:customer_id/orders/:order_id => getfield(Main, Symbol(\"##5#6\"))()\n  :get_foo            => [GET] /foo => getfield(Main, Symbol(\"##7#8\"))()","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"新しいルートはメソッドとURIパターンに基づいて、自動的にget_fooと名づけられています。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html#ルート(routes)へのリンク","page":"高度なルーティング","title":"ルート(routes)へのリンク","text":"","category":"section"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"linktoメソッドを介して、ルートにリンクするためにルート名が使用できます。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html#例-5","page":"高度なルーティング","title":"例","text":"","category":"section"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"以前定義済みの2つのルートから始めてみましょう。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"julia> @routes\nOrderedCollections.OrderedDict{Symbol,Genie.Router.Route} with 2 entries:\n  :get_customer_order => [GET] /customers/:customer_id/orders/:order_id => getfield(Main, Symbol(\"##5#6\"))()\n  :get_foo            => [GET] /foo => getfield(Main, Symbol(\"##7#8\"))()","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"：get_fooのような静的ルートは簡単にリンクを向けることができます。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"julia> linkto(:get_foo)\n\"/foo\"","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"動的なルートの場合、キーワード引数として各パラメータの値を渡す必要があるため、少しだけ複雑です。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"julia> linkto(:get_customer_order, customer_id = 1234, order_id = 5678)\n\"/customers/1234/orders/5678\"","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"linktoはリンクを生成するためにHTMLコードと組み合わせて使用されます。すなわち、以下のようになります。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"<a href=\"$(linkto(:get_foo))\">Foo</a>","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html#ルートの一覧","page":"高度なルーティング","title":"ルートの一覧","text":"","category":"section"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"Router.routesで登録されているルートをいつでも確認できます。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"julia> routes()\n2-element Array{Genie.Router.Route,1}:\n [GET] /foo => getfield(Main, Symbol(\"##7#8\"))()\n [GET] /customers/:customer_id/orders/:order_id => getfield(Main, Symbol(\"##5#6\"))()","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"または、前述の@routesマクロも利用できます。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"julia> @routes\nOrderedCollections.OrderedDict{Symbol,Genie.Router.Route} with 2 entries:\n  :get_customer_order => [GET] /customers/:customer_id/orders/:order_id => getfield(Main, Symbol(\"##5#6\"))()\n  :get_foo            => [GET] /foo => getfield(Main, Symbol(\"##7#8\"))()","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html#Route型","page":"高度なルーティング","title":"Route型","text":"","category":"section"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"ルートは4つのフィールドをもつRoute型によって内部的に表現されています。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"method::String- ルートのメソッドを保持するため(GETやPOSTなど)\npath::String - 照合するURIパターンを表現\naction::Function - ルートが一致した際に実行されるルートハンドラ\nname::Union{Symbol,Nothing} - ルートの名前","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html#ルートの削除","page":"高度なルーティング","title":"ルートの削除","text":"","category":"section"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"delete!メソッドを呼び出し、ルートのコレクションと削除対象のルートの名前をわたすことで、スタックからルートを削除できます。そのメソッドは(残りの)ルートのコレクションを返します。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html#例-6","page":"高度なルーティング","title":"例","text":"","category":"section"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"julia> @routes\nOrderedCollections.OrderedDict{Symbol,Genie.Router.Route} with 2 entries:\n  :get_customer_order => [GET] /customers/:customer_id/orders/:order_id => getfield(Main, Symbol(\"##3#4\"))()\n  :get_foo            => [GET] /foo => getfield(Main, Symbol(\"##9#10\"))()\n\njulia> Router.delete!(@routes, :get_foo)\nOrderedCollections.OrderedDict{Symbol,Genie.Router.Route} with 1 entry:\n  :get_customer_order => [GET] /customers/:customer_id/orders/:order_id => getfield(Main, Symbol(\"##3#4\"))()\n\njulia> @routes\nOrderedCollections.OrderedDict{Symbol,Genie.Router.Route} with 1 entry:\n  :get_customer_order => [GET] /customers/:customer_id/orders/:order_id => getfield(Main, Symbol(\"##3#4\"))()","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html#引数の型によるルートの一致","page":"高度なルーティング","title":"引数の型によるルートの一致","text":"","category":"section"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"デフォルトでは、ルートパラメータはSubString {String}としてpayloadコレクションの中で解析されます。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"using Genie, Genie.Router, Genie.Requests\n\nroute(\"/customers/:customer_id/orders/:order_id\") do\n  \"Order ID has type $(payload(:order_id) |> typeof) // Customer ID has type $(payload(:customer_id) |> typeof)\"\nend","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"上記は、Order ID has type SubString{String} // Customer ID has type SubString{String}と出力されます。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"しかし、今回のような場合、明示的な変換(数字のみマッチなど)を回避するためにInt型のデータとして受け取ることが非常に好まれます。Genieは、ルートパラメータに型アノテーションの指定を許すことでこのようなワークフローをサポートします。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"route(\"/customers/:customer_id::Int/orders/:order_id::Int\", named = :get_customer_order) do\n  \"Order ID has type $(payload(:order_id) |> typeof) // Customer ID has type $(payload(:customer_id) |> typeof)\"\nend     #     [GET] /customers/:customer_id::Int/orders/:order_id::Int => getfield(Main, Symbol(\"##3#4\"))()","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":":customer_idと:order_idに、:customer_id::Intおよび:order_id::Intという形式で型アノテーションを追加していることに注意してください。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"ただし、http://127.0.0.1:8000/customers/10/orders/20にアクセスしようとすると失敗します。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"Failed to match URI params between Int64::DataType and 10::SubString{String}\nMethodError(convert, (Int64, \"10\"), 0x00000000000063fe)\n/customers/10/orders/20 404","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"見た通り、Genieは型をデフォルトのSubString{String}からIntに変換しようとしています。しかし、その方法がわかりません。そのため失敗し、他に一致するルートを見つけられず404 Not Foundを返しています。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html#ルートでの型変換","page":"高度なルーティング","title":"ルートでの型変換","text":"","category":"section"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"エラーは簡単に対処できます。SubString{String}からIntへの型変換器を提供する必要があります。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"Base.convert(::Type{Int}, v::SubString{String}) = parse(Int, v)","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"一度Base内で、その変換器を登録すれば、リクエストは正しく処理され、その結果Order ID has type Int64 // Customer ID has type Int64となります。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html#個々のURIセグメントの一致","page":"高度なルーティング","title":"個々のURIセグメントの一致","text":"","category":"section"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"完全一致のルートだけでなく、Genieは個々のURIセグメントでの一致をサポートしています。つまり、さまぁまなルートパラメータが特定のパターンに従うよう強制します。ルートパラメータの制約を導入するためには、ルートパラメータの末尾に#patternを追加します。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html#例-7","page":"高度なルーティング","title":"例","text":"","category":"section"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"例えば、mywebsite.com/en、mywebsite.com/es、mywebsite.com/deのようなURL構造を持つローカライズされたWebサイトを実装してみましょう。動的ルートを定義し、ロケール変数を抽出することで、ローカライズされたコンテンツを提供することができます。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"route(\":locale\", TranslationsController.index)","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"これは非常にうまく機能し、リクエストを照合し、payload(:locale)変数内のコードにロケール情報を渡します。しかし、それはとても貪欲で、静的ファイル(mywebsite.com/favicon.ico等)のようなものを含むすべてのリクエストにほとんどが一致します。以下のようにパターン(正規表現パターン)を追加することで、:locale変数が一致できるものを制限できます。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"route(\":locale#(en|es|de)\", TranslationsController.index)","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"リファクタリングされたルートは、:localeはen、es、deのどれか一文字列にのみ一致します。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"注意喚起","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"アプリケーションのロジックを重複させないように気を付けてください。サポート済みのロケールの配列があれば、そのパターンを動的に生成するのに利用できます。ルートを完全に動的生成することができます。","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"const LOCALE = \":locale#($(join(TranslationsController.AVAILABLE_LOCALES, '|')))\"\n\nroute(\"/$LOCALE\", TranslationsController.index, named = :get_index)","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"","category":"page"},{"location":"tutorials/12--Advanced_Routing_Techniques.html#@paramsコレクション","page":"高度なルーティング","title":"@paramsコレクション","text":"","category":"section"},{"location":"tutorials/12--Advanced_Routing_Techniques.html","page":"高度なルーティング","title":"高度なルーティング","text":"ルータが現在のリクエストのすべてのパラメータを@paramsコレクション(Dict{Symbol, Any}型)に入れていることは知っておくとよいです。これはルートパラメータ、クエリパラメータ、POSTペイロード、オリジナルHTTP,RequestとHTTP.Responseオブジェクトなどの貴重な情報が含まれています。一般的に、直接@paramsコレクションにアクセスするのではなく、Genie.RequestsとGenie.Responsesで定義されたユーティリティメソッドを介してアクセスすることを推奨します。ただし、@paramsについて知っていることは、上級ユーザにとって役に立つでしょう。","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#Working-with-Genie-apps-(projects)","page":"Working with Genie Apps","title":"Working with Genie apps (projects)","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Working with Genie in an interactive environment can be useful – but usually we want to persist the application and reuse it between sessions. One way to achieve this is to save it as an IJulia notebook and rerun the cells.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"However, you can get the best of Genie by working with Genie apps. A Genie app is a MVC (Model-View-Controller) web application which promotes the convention-over-configuration principle. By working with a few predefined files, within the Genie app structure, the framework can lift a lot of weight and massively improve development productivity. But following Genie's workflow, one instantly gets, out of the box, features like automatic module loading and reloading, dedicated configuration files, logging, support for environments, code generators, caching, support for Genie plugins, and more.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"In order to create a new Genie app, we need to run Genie.newapp($app_name):","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"julia> Genie.newapp(\"MyGenieApp\")","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Upon executing the command, Genie will:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"make a new dir called MyGenieApp and cd() into it,\ninstall all the app's dependencies,\ncreate a new Julia project (adding the Project.toml and Manifest.toml files),\nactivate the project,\nautomatically load the new app's environment into the REPL,\nstart the web server on the default Genie port (port 8000) and host (127.0.0.1).","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"At this point you can confirm that everything worked as expected by visiting http://127.0.0.1:8000 in your favourite web browser. You should see Genie's welcome page.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Next, let's add a new route. Routes are used to map request URLs to Julia functions. These functions provide the response that will be sent back to the client. Routes are meant to be defined in the dedicated routes.jl file. Open MyGenieApp/routes.jl in your editor or run the following command (making sure that you are in the app's directory):","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"julia> edit(\"routes.jl\")","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Append this at the bottom of the routes.jl file and save it:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"# routes.jl\nroute(\"/hello\") do\n  \"Welcome to Genie!\"\nend","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"We are using the route method, passing in the \"/hello\" URL and an anonymous function which returns the string \"Welcome to Genie!\". What this means is that for each request to the \"/hello\" URL, our app will invoke the route handler function and respond with the welcome message.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Visit http://127.0.0.1:8000/hello for a warm welcome!","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#Working-with-resources","page":"Working with Genie Apps","title":"Working with resources","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Adding our code to the routes.jl file works great for small projects, where you want to quickly publish features on the web. But for larger projects we're better off using Genie's MVC structure (MVC stands for Model-View-Controller). By employing the Model-View-Controller design pattern we can break our code into modules with clear responsibilities: the Model is used for data access, the View renders the response to the client, and the Controller orchestrates the interactions between Models and Views and handles requests. Modular code is easier to write, test and maintain.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"A Genie app can be architected around the concept of \"resources\". A resource represents a business entity (something like a user, or a product, or an account) and maps to a bundle of files (controller, model, views, etc). Resources live under the app/resources/ folder and each resource has its own dedicated folder, where all of its files are hosted. For example, if we have a web app about \"books\", a \"books\" folder would be found at app/resources/books and will contain all the files for publishing books on the web (usually called BooksController.jl for the controller, Books.jl for the model, BooksValidator.jl for the model validator – as well as a views folder for hosting all the view files necessary for rendering books data).","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"HEADS UP","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"When creating a default Genie app, the app/ folder might be missing. It will be automatically created the first time you add a resource via Genie's generators.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#Using-Controllers","page":"Working with Genie Apps","title":"Using Controllers","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Controllers are used to orchestrate interactions between client requests, Models (which handle data access), and Views (which are responsible for rendering the responses which will be sent to the clients' web browsers). In a standard workflow, a route points to a method in the controller – which is charged with building and sending the response over the network, back to the client.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Let's add a \"books\" controller. Genie comes with handy generators and one of them is for creating new controllers:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#Generate-the-Controller","page":"Working with Genie Apps","title":"Generate the Controller","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Let's generate our BooksController:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"julia> Genie.newcontroller(\"Books\")\n[info]: New controller created at ./app/resources/books/BooksController.jl","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Great! Let's edit BooksController.jl (julia> edit(\"./app/resources/books/BooksController.jl\")) and add something to it. For example, a function which returns some of Bill Gates' recommended books would be nice. Make sure that BooksController.jl looks like this:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"# app/resources/books/BooksController.jl\nmodule BooksController\n\nstruct Book\n  title::String\n  author::String\nend\n\nconst BillGatesBooks = Book[\n  Book(\"The Best We Could Do\", \"Thi Bui\"),\n  Book(\"Evicted: Poverty and Profit in the American City\", \"Matthew Desmond\"),\n  Book(\"Believe Me: A Memoir of Love, Death, and Jazz Chickens\", \"Eddie Izzard\"),\n  Book(\"The Sympathizer\", \"Viet Thanh Nguyen\"),\n  Book(\"Energy and Civilization, A History\", \"Vaclav Smil\")\n]\n\nfunction billgatesbooks()\n  \"\n  <h1>Bill Gates' list of recommended books</h1>\n  <ul>\n    $([\"<li>$(book.title) by $(book.author)</li>\" for book in BillGatesBooks]...)\n  </ul>\n  \"\nend\n\nend","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Our controller is just a plain Julia module where we define a Book type/struct and set up an array of book objects. We then defined a function, billgatesbooks, which returns an HTML string, with a H1 heading and an unordered list of all the books. We used an array comprehension to iterate over each book and render it in a <li> element. The elements of the array are then concatenated using the splat ... operator. The plan is to map this function to a route and expose it on the internet.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#Checkpoint","page":"Working with Genie Apps","title":"Checkpoint","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Before exposing it on the web, we can test the function in the REPL:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"julia> using BooksController\n\njulia> BooksController.billgatesbooks()","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"The output of the function call should be a HTML string which looks like this:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"\"\\n  <h1>Bill Gates' list of recommended books</h1>\\n  <ul>\\n    <li>The Best We Could Do by Thi Bui</li><li>Evicted: Poverty and Profit in the American City by Matthew Desmond</li><li>Believe Me: A Memoir of Love, Death, and Jazz Chickens by Eddie Izzard</li><li>The Sympathizer by Viet Thanh Nguyen</li><li>Energy and Civilization, A History by Vaclav Smil</li>\\n  </ul>\\n\"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Please make sure that it works as expected.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#Setup-the-route","page":"Working with Genie Apps","title":"Setup the route","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Now, let's expose our billgatesbooks method on the web. We need to add a new route which points to it. Add these to the routes.jl file:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"# routes.jl\nusing Genie.Router\nusing BooksController\n\nroute(\"/bgbooks\", BooksController.billgatesbooks)","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"In the snippet we declared that we're using BooksController (notice that Genie will know where to find it, no need to explicitly include the file) and then we defined a route between /bgbooks and the BooksController.billgatesbooks function (we say that the BooksController.billgatesbooks is the route handler for the /bgbooks URL or endpoint).","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"That's all! If you now visit http://localhost:8000/bgbooks you'll see Bill Gates' list of recommended books (well, at least some of them, the man reads a lot!).","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"PRO TIP","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"If you would rather work with Julia instead of wrangling HTML strings, you can use Genie's Html API. It provides functions which map every standard HTML element. For instance, the BooksController.billgatesbooks function can be written as follows, as an array of HTML elements:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"using Genie.Renderer.Html\n\nfunction billgatesbooks()\n  [\n    Html.h1() do\n      \"Bill Gates' list of recommended books\"\n    end\n    Html.ul() do\n      @foreach(BillGatesBooks) do book\n        Html.li() do\n          book.title * \" by \" * book.author\n        end\n      end\n    end\n  ]\nend","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"The @foreach macro iterates over a collection and concatenates the output of each loop into the result of the loop. We'll talk about it more soon.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#Adding-views","page":"Working with Genie Apps","title":"Adding views","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"However, putting HTML into the controllers is a bad idea: HTML should stay in the dedicated view files and contain as little logic as possible. Let's refactor our code to use views instead.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"The views used for rendering a resource should be placed inside the views/ folder, within that resource's own folder structure. So in our case, we will add an app/resources/books/views/ folder. Just go ahead and do it, Genie does not provide a generator for this task:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"julia> mkdir(joinpath(\"app\", \"resources\", \"books\", \"views\"))\n\"app/resources/books/views\"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"We created the views/ folder in app/resources/books/. We provided the full path as our REPL is running in the the root folder of the app. Also, we use the joinpath function so that Julia creates the path in a cross-platform way.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#Naming-views","page":"Working with Genie Apps","title":"Naming views","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Usually each controller method will have its own rendering logic – hence, its own view file. Thus, it's a good practice to name the view files just like the methods, so that we can keep track of where they're used.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"At the moment, Genie supports HTML and Markdown view files, as well as plain Julia. Their type is identified by file extension so that's an important part. The HTML views use a .jl.html extension while the Markdown files go with .jl.md and the Julia ones by .jl.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#HTML-views","page":"Working with Genie Apps","title":"HTML views","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"All right then, let's add our first view file for the BooksController.billgatesbooks method. Let's create an HTML view file. With Julia:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"julia> touch(joinpath(\"app\", \"resources\", \"books\", \"views\", \"billgatesbooks.jl.html\"))","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Genie supports a special type of dynamic HTML view, where we can embed Julia code. These are high performance compiled views. They are not parsed as strings: instead, the HTML is converted to native Julia rendering code which is cached to the file system and loaded like any other Julia file. Hence, the first time you load a view, or after you change one, you might notice a certain delay – it's the time needed to generate, compile and load the view. On next runs (especially in production) it's going to be blazing fast!","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Now all we need to do is to move the HTML code out of the controller and into the view, improving it a bit to also show a count of the number of books. Edit the view file as follows (julia> edit(\"app/resources/books/views/billgatesbooks.jl.html\")):","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"<!-- billgatesbooks.jl.html -->\n<h1>Bill Gates' top $(length(books)) recommended books</h1>\n<ul>\n  <% @foreach(books) do book %>\n    <li>$(book.title) by $(book.author)</li>\n  <% end %>\n</ul>","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"As you can see, it's just plain HTML with embedded Julia. We can add Julia code by using the <% ... %> code block tags – these should be used for more complex, multiline expressions. Or by using plain Julia string interpolation with $(...) – for simple values outputting.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"To make HTML generation more efficient, Genie provides a series of helpers, like the above @foreach macro which allows iterating over a collection, passing the current item into the processing function.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"HEADS UP","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"It is very important to keep in mind that Genie views work by rendering a HTML string. Thus, the Julia view code must return a string as its result, so that the output of the computation comes up on the page. Given that Julia automatically returns the result of the last computation, most of the times this just flows naturally. But if sometimes you notice that the templates don't output what is expected, do check that the code returns a string (or something which can be converted to a string).","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#Rendering-views","page":"Working with Genie Apps","title":"Rendering views","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"We now need to refactor our controller to use the view, passing in the expected variables. We will use the html method which renders and outputs the response as HTML. Update the definition of the billgatesbooks function to be as follows:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"# BooksController.jl\nusing Genie.Renderer.Html\n\nfunction billgatesbooks()\n  html(:books, :billgatesbooks, books = BillGatesBooks)\nend","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"First, notice that we needed to add Genie.Renderer.Html as a dependency, to get access to the html method. As for the html method itself, it takes as its arguments the name of the resource, the name of the view file, and a list of keyword arguments representing view variables:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":":books is the name of the resource (which effectively indicates in which views folder Genie should look for the view file – in our case app/resources/books/views);\n:billgatesbooks is the name of the view file. We don't need to pass the extension, Genie will figure it out since there's only one file with this name;\nand finally, we pass the values we want to expose in the view, as keyword arguments.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"That's it – our refactored app should be ready! You can try it out for yourself at http://localhost:8000/bgbooks","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#Markdown-views","page":"Working with Genie Apps","title":"Markdown views","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Markdown views work similar to HTML views – employing the same embedded Julia functionality. Here is how you can add a Markdown view for our billgatesbooks function.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"First, create the corresponding view file, using the .jl.md extension. Maybe with:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"julia> touch(joinpath(\"app\", \"resources\", \"books\", \"views\", \"billgatesbooks.jl.md\"))","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Now edit the file and make sure it looks like this:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"<!-- app/resources/books/views/billgatesbooks.jl.md -->\n# Bill Gates' $(length(@vars(:books))) recommended books\n\n$(\n  @foreach(@vars(:books)) do book\n    \"* $(book.title) by $(book.author) \\n\"\n  end\n)","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Notice that Markdown views do not support Genie's embedded Julia tags <% ... %>. Only string interpolation $(...) is accepted, but it works across multiple lines. Another notable difference is that at the moment, markdown views support access to variables only through the @vars collection (the @vars collection can be used in HTML views as well, but it's not necessary, as the variables can be accessed directly as well).","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"If you reload the page now, however, Genie will still load the HTML view. The reason is that, if we have only one view file, Genie will manage. But if there's more than one, the framework won't know which one to pick. It won't error out but will pick the preferred one, which is the HTML version.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"It's a simple change in the BookiesController: we have to explicitly tell Genie which file to load, extension and all:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"# BooksController.jl\nfunction billgatesbooks()\n  html(:books, \"billgatesbooks.jl.md\", books = BillGatesBooks)\nend","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#Taking-advantage-of-layouts","page":"Working with Genie Apps","title":"Taking advantage of layouts","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Genie's views are rendered within a layout file. Layouts are meant to render the theme of the website, or the \"frame\" around the view – the elements which are common on all the pages. The layout file can include visible elements, like the main menu or the footer. But also maybe the <head> tag or the assets tags (<link> and <script> tags for loading CSS and JavaScript files in all the pages).","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Every Genie app has a main layout file which is used by default – it can be found in app/layouts/ and is called app.jl.html. It looks like this:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"<!-- app/layouts/app.jl.html -->\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>Genie :: The highly productive Julia web framework</title>\n    <!-- link rel=\"stylesheet\" href=\"/css/application.css\" / -->\n  </head>\n  <body>\n    <%\n      @yield\n    %>\n    <!-- script src=\"/js/application.js\"></script -->\n  </body>\n</html>","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"We can edit it. For example, add this right under the opening <body> tag, just above the <% tag:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"<h1>Welcome to top books</h1>","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"If you reload the page at http://localhost:8000/bgbooks you will see the new heading.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"But we don't have to stick to the default; we can add additional layouts. Let's suppose that we have, for example, an admin area which should have a completely different theme. We can add a dedicated layout for that:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"julia> touch(joinpath(\"app\", \"layouts\", \"admin.jl.html\"))\n\"app/layouts/admin.jl.html\"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Now edit it (julia> edit(\"app/layouts/admin.jl.html\")) and make it look like this:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"<!-- app/layouts/admin.jl.html -->\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <title>Genie Admin</title>\n  </head>\n  <body>\n    <h1>Books admin</h1>\n    <%\n      @yield\n    %>\n  </body>\n</html>","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"If we want to apply it, we must instruct our BooksController to use it. The html function takes a keyword argument named layout, for the layout file. Update the billgatesbooks function to look like this:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"# BooksController.jl\nfunction billgatesbooks()\n  html(:books, :billgatesbooks, books = BillGatesBooks, layout = :admin)\nend","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Reload the page and you'll see the new heading.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#The-@yield-instruction","page":"Working with Genie Apps","title":"The @yield instruction","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"There is a special instruction in the layouts: @yield. It outputs the contents of the view as rendered through the controller. So where this macro is present, Genie will output the HTML resulting from rendering the view by executing the route handler function within the controller.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#Using-view-paths","page":"Working with Genie Apps","title":"Using view paths","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"For very simple applications the MVC and the resource-centric approaches might involve too much boilerplate. In such cases, we can simplify the code by referencing the view (and layout) by file path, ex:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"# BooksController.jl\nusing Genie.Renderer\n\nfunction billgatesbooks()\n  html(path\"app/resources/books/views/billgatesbooks.jl.html\", books = BillGatesBooks, layout = path\"app/layouts/app.jl.html\")\nend","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#Rendering-JSON-views","page":"Working with Genie Apps","title":"Rendering JSON views","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"A common use case for web apps is to serve as backends for RESTful APIs. For this cases, JSON is the preferred data format. You'll be happy to hear that Genie has built-in support for JSON responses. Let's add an endpoint for our API – which will render Bill Gates' books as JSON.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"We can start in the routes.jl file, by appending this","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"route(\"/api/v1/bgbooks\", BooksController.API.billgatesbooks)","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Next, in BooksController.jl, append the extra logic at the end of the file, before the closing end. The whole file should look like this:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"# BooksController.jl\nmodule BooksController\n\nusing Genie.Renderer.Html\n\nstruct Book\n  title::String\n  author::String\nend\n\nconst BillGatesBooks = Book[\n  Book(\"The Best We Could Do\", \"Thi Bui\"),\n  Book(\"Evicted: Poverty and Profit in the American City\", \"Matthew Desmond\"),\n  Book(\"Believe Me: A Memoir of Love, Death, and Jazz Chickens\", \"Eddie Izzard\"),\n  Book(\"The Sympathizer!\", \"Viet Thanh Nguyen\"),\n  Book(\"Energy and Civilization, A History\", \"Vaclav Smil\")\n]\n\nfunction billgatesbooks()\n  html(:books, :billgatesbooks, layout = :admin, books = BillGatesBooks)\nend\n\n\nmodule API\n\nusing ..BooksController\nusing Genie.Renderer.Json\n\nfunction billgatesbooks()\n  json(BooksController.BillGatesBooks)\nend\n\nend\n\nend","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"We nested an API module within the BooksController module, where we defined another billgatesbooks function which outputs a JSON.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"If you go to http://localhost:8000/api/v1/bgbooks it should already work as expected.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#JSON-views","page":"Working with Genie Apps","title":"JSON views","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"However, we have just committed one of the cardinal sins of API development. We have just forever coupled our internal data structure to its external representation. This will make future refactoring very complicated and error prone as any changes in the data will break the client's integrations. The solution is to, again, use views, to fully control how we render our data – and decouple the data structure from its rendering on the web.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Genie has support for JSON views – these are plain Julia files which have the \".json.jl\" extension. Let's add one in our views/ folder:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"julia> touch(joinpath(\"app\", \"resources\", \"books\", \"views\", \"billgatesbooks.json.jl\"))\n\"app/resources/books/views/billgatesbooks.json.jl\"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"We can now create a proper response. Put this in the view file:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"# app/resources/books/views/billgatesbooks.json.jl\n\"Bill Gates' list of recommended books\" => books","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Final step, instructing BooksController to render the view. Simply replace the existing billgatesbooks function within the API sub-module with the following:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"function billgatesbooks()\n  json(:books, :billgatesbooks, books = BooksController.BillGatesBooks)\nend","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"This should hold no surprises – the json function is similar to the html one we've seen before. So now we're rendering a custom JSON response. That's all – everything should work!","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"HEADS UP","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#Why-JSON-views-have-the-extension-ending-in-.jl-but-HTML-and-Markdown-views-do-not?","page":"Working with Genie Apps","title":"Why JSON views have the extension ending in .jl but HTML and Markdown views do not?","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Good question! The extension of the views is chosen in order to preserve correct syntax highlighting in the IDE/code editor.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Since practically HTML and Markdown views are HTML and Markdown files with some embedded Julia code, we want to use the HTML or Markdown syntax highlighting. For JSON views, we use pure Julia, so we want Julia syntax highlighting.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#Accessing-databases-with-SeachLight-models","page":"Working with Genie Apps","title":"Accessing databases with SeachLight models","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"You can get the most out of Genie by pairing it with its seamless ORM layer, SearchLight. SearchLight, a native Julia ORM, provides excellent support for working with relational databases. The Genie + SearchLight combo can be used to productively develop CRUD (Create-Read-Update-Delete) apps.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"HEADS UP","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"CRUD stands for Create-Read-Update-Delete and describes the data workflow in many web apps, where resources are created, read (listed), updated, and deleted.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"SearchLight represents the \"M\" part in Genie's MVC architecture (thus, the Model layer).","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Let's begin by adding SearchLight to our Genie app. All Genie apps manage their dependencies in their own Julia environment, through their Project.toml and Manifest.toml files.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"So we need to make sure that we're in pkg> shell mode first (which is entered by typing ] in julian mode, ie: julia>]). The cursor should change to (MyGenieApp) pkg>.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Next, we add SearchLight:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"(MyGenieApp) pkg> add SearchLight","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#Adding-a-database-adapter","page":"Working with Genie Apps","title":"Adding a database adapter","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"SearchLight provides a database agnostic API for working with various backends (at the moment, MySQL, SQLite, and Postgres). Thus, we also need to add the specific adapter. To keep things simple, let's use SQLite for our app. Hence, we'll need the SearchLightSQLite package:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"(MyGenieApp) pkg> add SearchLightSQLite","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#Setup-the-database-connection","page":"Working with Genie Apps","title":"Setup the database connection","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Genie is designed to seamlessly integrate with SearchLight and provides access to various database oriented generators. First we need to tell Genie/SearchLight how to connect to the database. Let's use them to set up our database support. Run this in the Genie/Julia REPL:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"julia> Genie.Generator.db_support()","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"The command will add a db/ folder within the root of the app. What we're looking for is the db/connection.yml file which tells SearchLight how to connect to the database. Let's edit it. Make the file look like this:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"env: ENV[\"GENIE_ENV\"]\n\ndev:\n  adapter: SQLite\n  database: db/books.sqlite\n  config:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"This instructs SearchLight to run in the environment of the current Genie app (by default dev), using SQLite for the adapter (backend) and a database stored at db/books.sqlite (the database will be created automatically if it does not exist). We could pass extra configuration options in the config object, but for now we don't need anything else.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"HEADS UP","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"If you are using a different adapter, make sure that the database configured already exists and that the configured user can successfully access it – SearchLight will not attempt to create the database.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Now we can ask SearchLight to load it up:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"julia> using SearchLight\n\njulia> SearchLight.Configuration.load()\nDict{String,Any} with 4 entries:\n  \"options\"  => Dict{String,String}()\n  \"config\"   => nothing\n  \"database\" => \"db/books.sqlite\"\n  \"adapter\"  => \"SQLite\"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Let's just go ahead and try it out by connecting to the DB:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"julia> using SearchLightSQLite\n\njulia> SearchLight.Configuration.load() |> SearchLight.connect\nSQLite.DB(\"db/books.sqlite\")","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"The connection succeeded and we got back a SQLite database handle.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"PRO TIP","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Each database adapter exposes a CONNECTIONS collection where we can access the connection:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"julia> SearchLightSQLite.CONNECTIONS\n1-element Array{SQLite.DB,1}:\n SQLite.DB(\"db/books.sqlite\")","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Awesome! If all went well you should have a books.sqlite database in the db/ folder.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"shell> tree db\ndb\n├── books.sqlite\n├── connection.yml\n├── migrations\n└── seeds","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#Managing-the-database-schema-with-SearchLight-migrations","page":"Working with Genie Apps","title":"Managing the database schema with SearchLight migrations","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Database migrations provide a way to reliably, consistently and repeatedly apply (and undo) schema transformations. They are specialised scripts for adding, removing and altering DB tables – these scripts are placed under version control and are managed by a dedicated system which knows which scripts have been run and which not, and is able to run them in the correct order.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"SearchLight needs its own DB table to keep track of the state of the migrations so let's set it up:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"julia> SearchLight.Migrations.create_migrations_table()\n[ Info: Created table schema_migrations","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"This command sets up our database with the needed table in order to manage migrations.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"PRO TIP","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"You can use the SearchLight API to execute random queries against the database backend. For example we can confirm that the table is really there:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"julia> SearchLight.query(\"SELECT name FROM sqlite_master WHERE type ='table' AND name NOT LIKE 'sqlite_%'\")\n┌ Info: SELECT name FROM sqlite_master WHERE type ='table' AND name NOT LIKE 'sqlite_%'\n└\n\n1×1 DataFrames.DataFrame\n│ Row │ name              │\n│     │ String⍰           │\n├─────┼───────────────────┤\n│ 1   │ schema_migrations │","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"The result is a familiar DataFrame object.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#Creating-our-Book-model","page":"Working with Genie Apps","title":"Creating our Book model","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"SearchLight, just like Genie, uses the convention-over-configuration design pattern. It prefers for things to be setup in a certain way and provides sensible defaults, versus having to define everything in extensive configuration files. And fortunately, we don't even have to remember what these conventions are, as SearchLight also comes with an extensive set of generators.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Lets ask SearchLight to create a new model:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"julia> SearchLight.Generator.newresource(\"Book\")\n\n[ Info: New model created at /Users/adrian/Dropbox/Projects/MyGenieApp/app/resources/books/Books.jl\n[ Info: New table migration created at /Users/adrian/Dropbox/Projects/MyGenieApp/db/migrations/2020020909574048_create_table_books.jl\n[ Info: New validator created at /Users/adrian/Dropbox/Projects/MyGenieApp/app/resources/books/BooksValidator.jl\n[ Info: New unit test created at /Users/adrian/Dropbox/Projects/MyGenieApp/test/books_test.jl","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"SearchLight has created the Books.jl model, the *_create_table_books.jl migration file, the BooksValidator.jl model validator and the books_test.jl test file.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"HEADS UP","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"The first part of the migration file will be different for you!","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"The *_create_table_books.jl file will be named differently as the first part of the name is the file creation timestamp. This timestamp part guarantees that names are unique and file name clashes are avoided (for example when working as a team a creating similar migration files).","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#Writing-the-table-migration","page":"Working with Genie Apps","title":"Writing the table migration","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Lets begin by writing the migration to create our books table. SearchLight provides a powerful DSL for writing migrations. Each migration file needs to define two methods: up which applies the changes – and down which undoes the effects of the up method. So in our up method we want to create the table – and in down we want to drop the table.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"The naming convention for tables in SearchLight is that the table name should be pluralized (books) – because a table contains multiple books (each row represents an object, a \"book\"). But don't worry, the migration file should already be pre-populated with the correct table name.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Edit the db/migrations/*_create_table_books.jl file and make it look like this:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"module CreateTableBooks\n\nimport SearchLight.Migrations: create_table, column, primary_key, add_index, drop_table\n\nfunction up()\n  create_table(:books) do\n    [\n      primary_key()\n      column(:title, :string, limit = 100)\n      column(:author, :string, limit = 100)\n    ]\n  end\n\n  add_index(:books, :title)\n  add_index(:books, :author)\nend\n\nfunction down()\n  drop_table(:books)\nend\n\nend","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"The DSL is pretty readable: in the up function we call create_table and pass an array of columns: a primary key, a title column and an author column (both strings have a max length of 100). We also add two indices (one on the title and the other on the author columns). As for the down method, it invokes the drop_table function to remove the table.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#Running-the-migration","page":"Working with Genie Apps","title":"Running the migration","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"We can see what SearchLight knows about our migrations with the SearchLight.Migrations.status command:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"julia> SearchLight.Migrations.status()\n|   | Module name & status                   |\n|   | File name                              |\n|---|----------------------------------------|\n|   |                 CreateTableBooks: DOWN |\n| 1 | 2020020909574048_create_table_books.jl |","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"So our migration is in the down state – meaning that its up method has not been run. We can easily fix this:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"julia> SearchLight.Migrations.last_up()\n[ Info: Executed migration CreateTableBooks up","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"If we recheck the status, the migration is up:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"julia> SearchLight.Migrations.status()\n|   | Module name & status                   |\n|   | File name                              |\n|---|----------------------------------------|\n|   |                   CreateTableBooks: UP |\n| 1 | 2020020909574048_create_table_books.jl |","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Our table is ready!","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#Defining-the-model","page":"Working with Genie Apps","title":"Defining the model","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Now it's time to edit our model file at app/resources/books/Books.jl. Another convention in SearchLight is that we're using the pluralized name (Books) for the module – because it's for managing multiple books. And within it we define a type (a mutable struct), called Book – which represents an item (a single book) which maps to a row in the underlying database.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Edit the Books.jl file to make it look like this:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"# Books.jl\nmodule Books\n\nimport SearchLight: AbstractModel, DbId, save!\nimport Base: @kwdef\n\nexport Book\n\n@kwdef mutable struct Book <: AbstractModel\n  id::DbId = DbId()\n  title::String = \"\"\n  author::String = \"\"\nend\n\nend","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"We defined a mutable struct which matches our previous Book type by using the @kwdef macro, in order to also define a keyword constructor, as SearchLight needs it.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#Using-our-model","page":"Working with Genie Apps","title":"Using our model","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"To make things more interesting, we should import our current books into the database. Add this function to the Books.jl module, under the Book() constructor definition (just above the module's closing end):","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"# Books.jl\nfunction seed()\n  BillGatesBooks = [\n    (\"The Best We Could Do\", \"Thi Bui\"),\n    (\"Evicted: Poverty and Profit in the American City\", \"Matthew Desmond\"),\n    (\"Believe Me: A Memoir of Love, Death, and Jazz Chickens\", \"Eddie Izzard\"),\n    (\"The Sympathizer!\", \"Viet Thanh Nguyen\"),\n    (\"Energy and Civilization, A History\", \"Vaclav Smil\")\n  ]\n\n  for b in BillGatesBooks\n    Book(title = b[1], author = b[2]) |> save!\n  end\nend","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#Auto-loading-the-DB-configuration","page":"Working with Genie Apps","title":"Auto-loading the DB configuration","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Now, to try things out. Genie takes care of loading all our resource files for us when we load the app. To do this, Genie comes with a special file called an initializer, which automatically loads the database configuration and sets up SearchLight. Check config/initializers/searchlight.jl. It should look like this:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"using SearchLight\n\ntry\n  SearchLight.Configuration.load()\n\n  if SearchLight.config.db_config_settings[\"adapter\"] !== nothing\n    eval(Meta.parse(\"using SearchLight$(SearchLight.config.db_config_settings[\"adapter\"])\"))\n    SearchLight.connect()\n  end\ncatch ex\n  @error ex\nend","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Heads up!","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"All the *.jl files placed into the config/initializers/ folder are automatically included by Genie upon starting the Genie app. They are included early (upon initialisation), before the controllers, models, views, are loaded.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#Trying-it-out","page":"Working with Genie Apps","title":"Trying it out","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Now it's time to restart our REPL session and test our app. Close the Julia REPL session to exit to the OS command line and run:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"$ bin/repl","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"In Windows go into the bin/ folder within the application's directory and run repl.bat in the terminal.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"The repl executable script placed within the app's bin/ folder starts a new Julia REPL session and loads the applications' environment. Everything should be automatically loaded now, DB configuration included - so we can invoke the previously defined seed function to insert the books:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"julia> using Books\n\njulia> Books.seed()","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"There should be a list of queries showing how the data is inserted in the DB:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"julia> Books.seed()\n[ Info: INSERT  INTO books (\"title\", \"author\") VALUES ('The Best We Could Do', 'Thi Bui')\n[ Info: INSERT  INTO books (\"title\", \"author\") VALUES ('Evicted: Poverty and Profit in the American City', 'Matthew Desmond')\n# output truncated","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"If you want to make sure all went right (although trust me, it did, otherwise SearchLight would've thrown an Exception!), just ask SearchLight to retrieve them:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"julia> using SearchLight\n\njulia> all(Book)\n[ Info: 2020-02-09 13:29:32 SELECT \"books\".\"id\" AS \"books_id\", \"books\".\"title\" AS \"books_title\", \"books\".\"author\" AS \"books_author\" FROM \"books\" ORDER BY books.id ASC\n\n5-element Array{Book,1}:\n Book\n| KEY            | VALUE                |\n|----------------|----------------------|\n| author::String | Thi Bui              |\n| id::DbId       | 1                    |\n| title::String  | The Best We Could Do |\n\n Book\n| KEY            | VALUE                                            |\n|----------------|--------------------------------------------------|\n| author::String | Matthew Desmond                                  |\n| id::DbId       | 2                                                |\n| title::String  | Evicted: Poverty and Profit in the American City |\n\n# output truncated","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"The SearchLight.all method returns all the Book items from the database.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"All good!","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"The next thing we need to do is to update our controller to use the model. Make sure that app/resources/books/BooksController.jl reads like this:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"# BooksController.jl\nmodule BooksController\n\nusing Genie.Renderer.Html, SearchLight, Books\n\nfunction billgatesbooks()\n  html(:books, :billgatesbooks, books = all(Book))\nend\n\nmodule API\n\nusing ..BooksController\nusing Genie.Renderer.Json, SearchLight, Books\n\nfunction billgatesbooks()\n  json(:books, :billgatesbooks, books = all(Book))\nend\n\nend\n\nend","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Our JSON view needs a bit of tweaking too:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"# app/resources/books/views/billgatesbooks.json.jl\n\"Bill's Gates list of recommended books\" => [Dict(\"author\" => b.author, \"title\" => b.title) for b in books]","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Now if we just start the server we'll be able to see the list of books served from the database:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"# Start the server\njulia> up()","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"The up method starts up the web server and takes us back to the interactive Julia REPL prompt.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Now, if, for example, we navigate to http://localhost:8000/api/v1/bgbooks, the output should match the following JSON document:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"{\n  \"Bill's Gates list of recommended books\": [\n    {\n      \"author\": \"Thi Bui\",\n      \"title\": \"The Best We Could Do\"\n    },\n    {\n      \"author\": \"Matthew Desmond\",\n      \"title\": \"Evicted: Poverty and Profit in the American City\"\n    },\n    {\n      \"author\": \"Eddie Izzard\",\n      \"title\": \"Believe Me: A Memoir of Love, Death, and Jazz Chickens\"\n    },\n    {\n      \"author\": \"Viet Thanh Nguyen\",\n      \"title\": \"The Sympathizer!\"\n    },\n    {\n      \"author\": \"Vaclav Smil\",\n      \"title\": \"Energy and Civilization, A History\"\n    }\n  ]\n}","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Let's add a new book to see how it works. We'll create a new Book item and persist it using the SearchLight.save! method:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"julia> newbook = Book(title = \"Leonardo da Vinci\", author = \"Walter Isaacson\")\n\nBook\n| KEY            | VALUE             |\n|----------------|-------------------|\n| author::String | Walter Isaacson   |\n| id::DbId       | NULL              |\n| title::String  | Leonardo da Vinci |\n\n\njulia> save!(newbook)\n\n[ Info: INSERT  INTO books (\"title\", \"author\") VALUES ('Leonardo da Vinci', 'Walter Isaacson')\n[ Info: ; SELECT CASE WHEN last_insert_rowid() = 0 THEN -1 ELSE last_insert_rowid() END AS id\n[ Info: SELECT \"books\".\"id\" AS \"books_id\", \"books\".\"title\" AS \"books_title\", \"books\".\"author\" AS \"books_author\" FROM \"books\" WHERE \"id\" = 6 ORDER BY books.id ASC\n\nBook\n| KEY            | VALUE             |\n|----------------|-------------------|\n| author::String | Walter Isaacson   |\n| id::DbId       | 6                 |\n| title::String  | Leonardo da Vinci |","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"Calling the save! method, SearchLight has persisted the object in the database and then retrieved it and returned it (notice the updated id::DbId field).","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"The same save! operation can be written as a one-liner:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"julia> Book(title = \"Leonardo da Vinci\", author = \"Walter Isaacson\") |> save!","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"HEADS UP","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"If you also run the one-liner save! example, it will add the same book again. No problem, but if you want to remove it, you can use the delete method:","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"julia> delete(ans)\n[ Info: DELETE FROM books WHERE id = '7'\n\nBook\n| KEY            | VALUE             |\n|----------------|-------------------|\n| author::String | Walter Isaacson   |\n| id::DbId       | NULL              |\n| title::String  | Leonardo da Vinci |","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"If you reload the page at http://localhost:8000/bgbooks the new book should show up.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"{\n  \"Bill's Gates list of recommended books\": [\n    {\n      \"author\": \"Thi Bui\",\n      \"title\": \"The Best We Could Do\"\n    },\n    {\n      \"author\": \"Matthew Desmond\",\n      \"title\": \"Evicted: Poverty and Profit in the American City\"\n    },\n    {\n      \"author\": \"Eddie Izzard\",\n      \"title\": \"Believe Me: A Memoir of Love, Death, and Jazz Chickens\"\n    },\n    {\n      \"author\": \"Viet Thanh Nguyen\",\n      \"title\": \"The Sympathizer!\"\n    },\n    {\n      \"author\": \"Vaclav Smil\",\n      \"title\": \"Energy and Civilization, A History\"\n    },\n    {\n      \"author\": \"Walter Isaacson\",\n      \"title\": \"Leonardo da Vinci\"\n    }\n  ]\n}","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"PRO TIP","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"SearchLight exposes two similar data persistence methods: save! and save. They both perform the same action (persisting the object to the database), but save will return a Bool true to indicate that the operation was successful or a Bool false to indicate that the operation has failed. While the save! variant will return the persisted object upon success or will throw an exception on failure.","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"","category":"page"},{"location":"guides/Working_With_Genie_Apps.html#Congratulations","page":"Working with Genie Apps","title":"Congratulations","text":"","category":"section"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"You have successfully finished the first part of the step by step walkthrough - you now master the Genie basics, allowing you to set up a new app, register routes, add resources (controllers, models, and views), add database support, version the database schema with migrations, and execute basic queries with SearchLight!","category":"page"},{"location":"guides/Working_With_Genie_Apps.html","page":"Working with Genie Apps","title":"Working with Genie Apps","text":"In the next part we'll look at more advanced topics like handling forms and file uploads, templates rendering, interactivity and more.","category":"page"},{"location":"tutorials/11--Managing_External_Packages.html#Genieアプリの外部パッケージ管理","page":"Genieアプリの依存管理","title":"Genieアプリの外部パッケージ管理","text":"","category":"section"},{"location":"tutorials/11--Managing_External_Packages.html","page":"Genieアプリの依存管理","title":"Genieアプリの依存管理","text":"GenieはJuliaの素晴らしいパッケージマネージャーであるPkgをフル活用しますが、一方でGenie開発者はJuliaのエコシステムで利用可能な3rdパーティパッケージを利用できます。これは常識的なアプローチをとることで成し遂げることができます。Genieアプリは単なるJuliaプロジェクトです。このことは、GenieアプリのルートにあるおなじみのProject.tomlとManifest.tomlを見れば一目瞭然です。","category":"page"},{"location":"tutorials/11--Managing_External_Packages.html","page":"Genieアプリの依存管理","title":"Genieアプリの依存管理","text":"上記のことから、Genieアプリに追加のパッケージを追加するためには、JuliaのPkgモードを使用する必要があります。","category":"page"},{"location":"tutorials/11--Managing_External_Packages.html","page":"Genieアプリの依存管理","title":"Genieアプリの依存管理","text":"$ bin/replコマンドによりアプリでGenie REPLを起動します。これにより、アプリのパッケージ環境が自動的にロードされます。\njulia> ]により、Pkgモードに切り替えます。\n追加したいパッケージを追加します。例えばOhMyREPLというパッケージを追加する場合、(MyGenieApp) pkg> add OhMyREPLを実施する。","category":"page"},{"location":"tutorials/11--Managing_External_Packages.html","page":"Genieアプリの依存管理","title":"Genieアプリの依存管理","text":"これですべてです！これで、usingまたはimportを利用してGenie REPLまたはファイル内の任意の場所でパッケージを利用できます。","category":"page"},{"location":"tutorials/11--Managing_External_Packages.html","page":"Genieアプリの依存管理","title":"Genieアプリの依存管理","text":"同じ方法ですべてのパッケージを更新します。pkg> upを使用してすべての利用可能な更新を適用するか、またはpkg> up OhMyREPLのように個別パッケージを更新します。","category":"page"},{"location":"tutorials/11--Managing_External_Packages.html","page":"Genieアプリの依存管理","title":"Genieアプリの依存管理","text":"最後に、pkg> remove OhMyREPLのように実行することで、依存関係をアンインストールすることができます。","category":"page"},{"location":"API/appserver.html","page":"AppServer","title":"AppServer","text":"CurrentModule = AppServer","category":"page"},{"location":"API/appserver.html","page":"AppServer","title":"AppServer","text":"ServersCollection\nSERVERS\nstartup\nup\ndown\nupdate_config\nhandle_request\nsetup_http_handler\nsetup_ws_handler\nhandle_ws_request","category":"page"},{"location":"API/appserver.html#Genie.AppServer.ServersCollection","page":"AppServer","title":"Genie.AppServer.ServersCollection","text":"ServersCollection(webserver::Union{Task,Nothing}, websockets::Union{Task,Nothing})\n\nRepresents a object containing references to Genie's web and websockets servers.\n\n\n\n\n\n","category":"type"},{"location":"API/appserver.html#Genie.AppServer.SERVERS","page":"AppServer","title":"Genie.AppServer.SERVERS","text":"SERVERS\n\nServersCollection constant containing references to the current app's web and websockets servers.\n\n\n\n\n\n","category":"constant"},{"location":"API/appserver.html#Genie.AppServer.startup","page":"AppServer","title":"Genie.AppServer.startup","text":"startup(port::Int = Genie.config.server_port, host::String = Genie.config.server_host;\n    ws_port::Int = Genie.config.websockets_port, async::Bool = ! Genie.config.run_as_server) :: ServersCollection\n\nStarts the web server.\n\nArguments\n\nport::Int: the port used by the web server\nhost::String: the host used by the web server\nws_port::Int: the port used by the Web Sockets server\nasync::Bool: run the web server task asynchronously\n\nExamples\n\njulia> up(8000, \"127.0.0.1\", async = false)\n[ Info: Ready!\nWeb Server starting at http://127.0.0.1:8000\n\n\n\n\n\n","category":"function"},{"location":"API/appserver.html#Genie.AppServer.up","page":"AppServer","title":"Genie.AppServer.up","text":"startup(port::Int = Genie.config.server_port, host::String = Genie.config.server_host;\n    ws_port::Int = Genie.config.websockets_port, async::Bool = ! Genie.config.run_as_server) :: ServersCollection\n\nStarts the web server.\n\nArguments\n\nport::Int: the port used by the web server\nhost::String: the host used by the web server\nws_port::Int: the port used by the Web Sockets server\nasync::Bool: run the web server task asynchronously\n\nExamples\n\njulia> up(8000, \"127.0.0.1\", async = false)\n[ Info: Ready!\nWeb Server starting at http://127.0.0.1:8000\n\n\n\n\n\n","category":"function"},{"location":"API/appserver.html#Genie.AppServer.down","page":"AppServer","title":"Genie.AppServer.down","text":"downdown(; webserver::Bool = true, websockets::Bool = true) :: ServersCollection\n\nShuts down the servers optionally indicating which of the webserver and websockets servers to be stopped.\n\n\n\n\n\n","category":"function"},{"location":"API/appserver.html#Genie.AppServer.update_config","page":"AppServer","title":"Genie.AppServer.update_config","text":"update_config(port::Int, host::String, ws_port::Int) :: Nothing\n\nUpdates the corresponding Genie configurations to the corresponding values for   port, host, and ws_port, if these are passed as arguments when starting up the server.\n\n\n\n\n\n","category":"function"},{"location":"API/appserver.html#Genie.AppServer.handle_request","page":"AppServer","title":"Genie.AppServer.handle_request","text":"handle_request(req::HTTP.Request, res::HTTP.Response, ip::IPv4 = IPv4(Genie.config.server_host)) :: HTTP.Response\n\nHttp server handler function - invoked when the server gets a request.\n\n\n\n\n\n","category":"function"},{"location":"API/appserver.html#Genie.AppServer.setup_http_handler","page":"AppServer","title":"Genie.AppServer.setup_http_handler","text":"setup_http_handler(req::HTTP.Request, res::HTTP.Response = HTTP.Response()) :: HTTP.Response\n\nConfigures the handler for the HTTP Request and handles errors.\n\n\n\n\n\n","category":"function"},{"location":"API/appserver.html#Genie.AppServer.setup_ws_handler","page":"AppServer","title":"Genie.AppServer.setup_ws_handler","text":"setup_ws_handler(req::HTTP.Request, ws_client) :: Nothing\n\nConfigures the handler for WebSockets requests.\n\n\n\n\n\n","category":"function"},{"location":"API/appserver.html#Genie.AppServer.handle_ws_request","page":"AppServer","title":"Genie.AppServer.handle_ws_request","text":"handle_ws_request(req::HTTP.Request, msg::String, ws_client, ip::IPv4 = IPv4(Genie.config.server_host)) :: String\n\nHttp server handler function - invoked when the server gets a request.\n\n\n\n\n\n","category":"function"},{"location":"tutorials/1--Overview.html#Genieへようこそ","page":"Genieへようこそ","title":"Genieへようこそ","text":"","category":"section"},{"location":"tutorials/1--Overview.html#Julia向けの生産性の高いWebフレームワーク","page":"Genieへようこそ","title":"Julia向けの生産性の高いWebフレームワーク","text":"","category":"section"},{"location":"tutorials/1--Overview.html","page":"Genieへようこそ","title":"Genieへようこそ","text":"Genieは、Juliaプログラミング言語向けのフルスタックWebフレームワークです。 Genieの目標は、デフォルトでの比類のない開発者の生産性、優れた実行時パフォーマンス、およびセキュリティです。","category":"page"},{"location":"tutorials/1--Overview.html","page":"Genieへようこそ","title":"Genieへようこそ","text":"Genie Webフレームワークは、Ruby on RailsやDjangoのような主流のフルスタックWebフレームワークの爪の垢を煎じて飲んでいる一方で、Juliaのルーツに100%忠実です。Genieのアーキテクチャと開発は、他のフレームワークにある機能によって駆動されますが、それらの設計によって駆動されるわけではありません。GenieはJuliaの仕組みで動作させることで、魔法でない現実的なアプローチをとります。例えば、ControllersはプレーンなJuliaモジュールであり、Modelsは型と多重ディスパッチを活用し、GenieアプリはJuliaプロジェクトに過ぎず、バージョン管理や依存管理はJuliaのPkgによって提供されます。","category":"page"},{"location":"tutorials/1--Overview.html","page":"Genieへようこそ","title":"Genieへようこそ","text":"また、GenieはJuliaの「スタートはシンプルに、必要に応じて成長する」というポリシーにインスピレーションを受けており、開発者がREPLやJupyter Notebookでアプリをブートストラップすることを可能にしたり、数行の単純なコードでWebサービスやAPIを簡単に作成できるようにしています。","category":"page"},{"location":"tutorials/1--Overview.html","page":"Genieへようこそ","title":"Genieへようこそ","text":"プロジェクトがより複雑になると、Genieは強力なルーティング機能や柔軟なロギング機能、環境サポート、コードリロードなどを提供するマイクロフレームワークを公開することで構造を徐々に追加することを可能にします。","category":"page"},{"location":"tutorials/1--Overview.html","page":"Genieへようこそ","title":"Genieへようこそ","text":"データベースの永続性が必要な場合、GenieのORMであるSearchLightによるサポートがいつでも追加できます。最後に、完全なMVC構造を利用することで、複雑でエンドツーエンドなWepアプリ―ケーションの開発や保守の推進が可能です。","category":"page"},{"location":"tutorials/2--Installing_Genie.html#Genieのインストール方法","page":"Genieのインストール","title":"Genieのインストール方法","text":"","category":"section"},{"location":"tutorials/2--Installing_Genie.html","page":"Genieのインストール","title":"Genieのインストール","text":"Genieの開発は迅速です。 v1に到達するまで、masterブランチから実行して、最新かつ最高のGenieを取得することをお勧めします。","category":"page"},{"location":"tutorials/2--Installing_Genie.html","page":"Genieのインストール","title":"Genieのインストール","text":"pkg> add Genie#master","category":"page"},{"location":"tutorials/2--Installing_Genie.html","page":"Genieのインストール","title":"Genieのインストール","text":"Juliaのレジストリからインストールすることもできます。以下は最新バージョンをインストールする例です。","category":"page"},{"location":"tutorials/2--Installing_Genie.html","page":"Genieのインストール","title":"Genieのインストール","text":"pkg> add Genie","category":"page"},{"location":"tutorials/2--Installing_Genie.html","page":"Genieのインストール","title":"Genieのインストール","text":"GenieはJuliaと同様に、バージョン指定にvX.Y.Z形式のセマンティックバージョニングを利用します。","category":"page"},{"location":"tutorials/2--Installing_Genie.html","page":"Genieのインストール","title":"Genieのインストール","text":"X : メジャーバージョン、 互換性を破る変更の導入\nY : マイナーバージョン、 新機能の提供、互換性を破る変更なし\nZ : パッチバージョン、 バグ修正、 新機能なし、互換性を破る変更なし","category":"page"},{"location":"tutorials/2--Installing_Genie.html","page":"Genieのインストール","title":"Genieのインストール","text":"","category":"page"},{"location":"tutorials/2--Installing_Genie.html","page":"Genieのインストール","title":"Genieのインストール","text":"注意喚起","category":"page"},{"location":"tutorials/2--Installing_Genie.html","page":"Genieのインストール","title":"Genieのインストール","text":"バージョン1より前では、Genieのマイナーバージョンの変更は、互換性を破る変更を示唆します。そのため、新しいバージョン0.15では、0.14からの互換性を破る変更が導入されます。パッチバージョンは、新機能やパッチリリースなどの互換性を破らない変更を示唆します。","category":"page"},{"location":"tutorials/2--Installing_Genie.html","page":"Genieのインストール","title":"Genieのインストール","text":"","category":"page"},{"location":"API/toolbox.html","page":"Toolbox","title":"Toolbox","text":"CurrentModule = Toolbox","category":"page"},{"location":"API/toolbox.html","page":"Toolbox","title":"Toolbox","text":"TaskInfo\nTaskResult\ntasks\nVoidTaskResult\nvalidtaskname\ntaskdocs\nloadtasks\nprinttasks\nnew\ntaskfilename\ntaskmodulename\nisvalidtask!","category":"page"},{"location":"API/toolbox.html#Genie.Toolbox.tasks","page":"Toolbox","title":"Genie.Toolbox.tasks","text":"tasks(; filter_type_name = Symbol()) :: Vector{TaskInfo}\n\nReturns a vector of all registered Genie tasks.\n\n\n\n\n\n","category":"function"},{"location":"API/toolbox.html#Genie.Toolbox.validtaskname","page":"Toolbox","title":"Genie.Toolbox.validtaskname","text":"validtaskname(task_name::String) :: String\n\nAttempts to convert a potentially invalid (partial) task_name into a valid one.\n\n\n\n\n\n","category":"function"},{"location":"API/toolbox.html#Genie.Toolbox.taskdocs","page":"Toolbox","title":"Genie.Toolbox.taskdocs","text":"task_docs(module_name::Module) :: String\n\nRetrieves the docstring of the runtask method and returns it as a string.\n\n\n\n\n\n","category":"function"},{"location":"API/toolbox.html#Genie.Toolbox.loadtasks","page":"Toolbox","title":"Genie.Toolbox.loadtasks","text":"tasks(; filter_type_name = Symbol()) :: Vector{TaskInfo}\n\nReturns a vector of all registered Genie tasks.\n\n\n\n\n\n","category":"function"},{"location":"API/toolbox.html#Genie.Toolbox.printtasks","page":"Toolbox","title":"Genie.Toolbox.printtasks","text":"Prints a list of all the registered Genie tasks to the standard output.\n\n\n\n\n\n","category":"function"},{"location":"API/toolbox.html#new","page":"Toolbox","title":"new","text":"new\n\nSpecial function available to inner constructors which created a new object of the type. See the manual section on Inner Constructor Methods for more information.\n\n\n\n\n\n","category":"keyword"},{"location":"API/toolbox.html#Genie.Toolbox.taskfilename","page":"Toolbox","title":"Genie.Toolbox.taskfilename","text":"task_file_name(cmd_args::Dict{String,Any}, config::Settings) :: String\n\nComputes the name of a Genie task based on the command line input.\n\n\n\n\n\n","category":"function"},{"location":"API/toolbox.html#Genie.Toolbox.taskmodulename","page":"Toolbox","title":"Genie.Toolbox.taskmodulename","text":"task_module_name(underscored_task_name::String) :: String\n\nComputes the name of a Genie task based on the command line input.\n\n\n\n\n\n","category":"function"},{"location":"API/toolbox.html#Genie.Toolbox.isvalidtask!","page":"Toolbox","title":"Genie.Toolbox.isvalidtask!","text":"isvalidtask!(parsed_args::Dict{String,Any}) :: Dict{String,Any}\n\nChecks if the name of the task passed as the command line arg is valid task identifier – if not, attempts to address it, by appending the TASKSUFFIX suffix. Returns the potentially modified `parsedargsDict`.\n\n\n\n\n\n","category":"function"},{"location":"tutorials/16--Using_Genie_With_Docker.html#DockerでのGenie利用","page":"DockerでのGenie利用","title":"DockerでのGenie利用","text":"","category":"section"},{"location":"tutorials/16--Using_Genie_With_Docker.html","page":"DockerでのGenie利用","title":"DockerでのGenie利用","text":"Genieはアプリのコンテナ化のサポートが組み込まれています。その機能はGenie.Deploy.Dockerモジュールで利用できます。","category":"page"},{"location":"tutorials/16--Using_Genie_With_Docker.html#Genieに最適化されたDockerfileの生成","page":"DockerでのGenie利用","title":"Genieに最適化されたDockerfileの生成","text":"","category":"section"},{"location":"tutorials/16--Using_Genie_With_Docker.html","page":"DockerでのGenie利用","title":"DockerでのGenie利用","text":"Genie.Deploy.Docker.dockerfile()関数を呼び出すことでDockerセットアップをブートストラップできます。これにより、Gennie Webアプリコンテナ化のために最適化されたカスタムDockerfileが生成されます。そのファイルは現在の作業ディレクトリ(またはpathオプション引数で指定した場所)に生成されます(dockerfile()関数のヘルプを参照してください)。一度生成されれば、それを編集して、必要に応じてカスタマイズできます。Genieはファイルを上書きしないため、変更は保持されます。","category":"page"},{"location":"tutorials/16--Using_Genie_With_Docker.html","page":"DockerでのGenie利用","title":"DockerでのGenie利用","text":"dockerfile()の振る舞いは、サポートされている複数のオプション引数を渡すことでコントロールすることができます。","category":"page"},{"location":"tutorials/16--Using_Genie_With_Docker.html#Dockerコンテナの構築","page":"DockerでのGenie利用","title":"Dockerコンテナの構築","text":"","category":"section"},{"location":"tutorials/16--Using_Genie_With_Docker.html","page":"DockerでのGenie利用","title":"DockerでのGenie利用","text":"一度Dockerfileの準備ができたら、Dockerコンテナを構築するためにGenie.Deploy.Docker.build()を呼び出すことができます。必要に応じて、コンテナの名前(デフォルトはgenie)とパス(デフォルトは現在の作業ディレクトリ)を渡すことができます。","category":"page"},{"location":"tutorials/16--Using_Genie_With_Docker.html#Dockerコンテナ内でのGenieアプリ実行","page":"DockerでのGenie利用","title":"Dockerコンテナ内でのGenieアプリ実行","text":"","category":"section"},{"location":"tutorials/16--Using_Genie_With_Docker.html","page":"DockerでのGenie利用","title":"DockerでのGenie利用","text":"イメージの準備ができたら、Genie.Deploy.Docker.run()で実行できます。アプリの実行方法をコントロールするためにオプション引数を構成できます。詳細については、関数のインラインヘルプを確認してください。","category":"page"},{"location":"tutorials/16--Using_Genie_With_Docker.html#例","page":"DockerでのGenie利用","title":"例","text":"","category":"section"},{"location":"tutorials/16--Using_Genie_With_Docker.html","page":"DockerでのGenie利用","title":"DockerでのGenie利用","text":"初めに、Genieアプリを作りましょう。","category":"page"},{"location":"tutorials/16--Using_Genie_With_Docker.html","page":"DockerでのGenie利用","title":"DockerでのGenie利用","text":"julia> using Genie\n\njulia> Genie.newapp(\"DockerTest\")\n[ Info: Done! New app created at /Users/adrian/DockerTest\n# output truncated","category":"page"},{"location":"tutorials/16--Using_Genie_With_Docker.html","page":"DockerでのGenie利用","title":"DockerでのGenie利用","text":"準備ができたら、Dockerfileを追加してみましょう。","category":"page"},{"location":"tutorials/16--Using_Genie_With_Docker.html","page":"DockerでのGenie利用","title":"DockerでのGenie利用","text":"julia> using Genie.Deploy\n\njulia> Deploy.Docker.dockerfile()\nDocker file successfully written at /Users/adrian/DockerTest/Dockerfile","category":"page"},{"location":"tutorials/16--Using_Genie_With_Docker.html","page":"DockerでのGenie利用","title":"DockerでのGenie利用","text":"ここでコンテナを構築します。","category":"page"},{"location":"tutorials/16--Using_Genie_With_Docker.html","page":"DockerでのGenie利用","title":"DockerでのGenie利用","text":"julia> Deploy.Docker.build()\nSending build context to Docker daemon  1.056MB\nStep 1/18 : FROM julia:latest\n ---> f4c9686d85da\n# output truncated\nSuccessfully tagged genie:latest\nDocker container successfully built","category":"page"},{"location":"tutorials/16--Using_Genie_With_Docker.html","page":"DockerでのGenie利用","title":"DockerでのGenie利用","text":"最後にDockerコンテナ内でアプリを実行することができます。","category":"page"},{"location":"tutorials/16--Using_Genie_With_Docker.html","page":"DockerでのGenie利用","title":"DockerでのGenie利用","text":"julia> Deploy.Docker.run()\nStarting docker container with `docker run -it --rm -p 80:8000 --name genieapp genie bin/server`\n\n _____         _\n|   __|___ ___|_|___\n|  |  | -_|   | | -_|\n|_____|___|_|_|_|___|\n\n| Web: https://genieframework.com\n| GitHub: https://github.com/genieframework/Genie.jl\n| Docs: https://genieframework.github.io/Genie.jl\n| Gitter: https://gitter.im/essenciary/Genie.jl\n| Twitter: https://twitter.com/GenieMVC\n\nGenie v0.19.0\nActive env: DEV\n\nWeb Server starting at http://127.0.0.1:8000","category":"page"},{"location":"tutorials/16--Using_Genie_With_Docker.html","page":"DockerでのGenie利用","title":"DockerでのGenie利用","text":"アプリケーションはDockerコンテナ内で開始し、コンテナ内のポート8000(Genieアプリが実行されている場所)をホストのポート80にバインドします。だから、http://localhostでアプリにアクセスすることができます。もしお気に入りのブラウザでhttp://localhostに移動した場合、Genieのウェルカムページを表示します。ポート8000にアクセスしないことに注目してください。このページは、デフォルトのポート80のDockerコンテナから提供されます。","category":"page"},{"location":"tutorials/16--Using_Genie_With_Docker.html#開発中のDocker利用","page":"DockerでのGenie利用","title":"開発中のDocker利用","text":"","category":"section"},{"location":"tutorials/16--Using_Genie_With_Docker.html","page":"DockerでのGenie利用","title":"DockerでのGenie利用","text":"開発中のアプリを提供するためにDockerを利用したい場合、アプリをホスト(あなたのPC)からコンテナにマウントする必要がある。ローカルでファイルを編集しつづけても、Dockerコンテナにその変更が反映されます。これを実施するためには、moubtapp = true引数をDeploy.Docker.run()に渡す必要があります。","category":"page"},{"location":"tutorials/16--Using_Genie_With_Docker.html","page":"DockerでのGenie利用","title":"DockerでのGenie利用","text":"julia> Deploy.Docker.run(mountapp = true)\nStarting docker container with `docker run -it --rm -p 80:8000 --name genieapp -v /Users/adrian/DockerTest:/home/genie/app genie bin/server`","category":"page"},{"location":"tutorials/16--Using_Genie_With_Docker.html","page":"DockerでのGenie利用","title":"DockerでのGenie利用","text":"アプリの起動が完了した際、好きなIDEを使ってホスト上でファイルを編集することができ、その変更はDockerコンテナに反映されます。","category":"page"},{"location":"API/index.html","page":"Genie","title":"Genie","text":"(Image: Genie Logo)","category":"page"},{"location":"API/index.html#Genie","page":"Genie","title":"Genie","text":"","category":"section"},{"location":"API/index.html#The-highly-productive-Julia-web-framework","page":"Genie","title":"The highly productive Julia web framework","text":"","category":"section"},{"location":"API/index.html","page":"Genie","title":"Genie","text":"Genie is Julia web framework that provides a streamlined and efficient workflow for developing modern web applications. It builds on Julia's strengths (high-level, high-performance, dynamic, JIT compiled), exposing a rich API and a powerful toolset for productive web development.","category":"page"},{"location":"API/index.html#Current-status","page":"Genie","title":"Current status","text":"","category":"section"},{"location":"API/index.html","page":"Genie","title":"Genie","text":"Genie is compatible with Julia v1.3 and up.","category":"page"},{"location":"API/index.html","page":"Genie","title":"Genie","text":"","category":"page"},{"location":"API/index.html#Acknowledgements","page":"Genie","title":"Acknowledgements","text":"","category":"section"},{"location":"API/index.html","page":"Genie","title":"Genie","text":"Genie uses a multitude of packages that have been kindly contributed by the Julia community.\nThe awesome Genie logo was designed by Alvaro Casanova.","category":"page"},{"location":"API/exceptions.html","page":"Exceptions","title":"Exceptions","text":"CurrentModule = Exceptions","category":"page"},{"location":"API/exceptions.html","page":"Exceptions","title":"Exceptions","text":"ExceptionalResponse\nRuntimeException\nInternalServerException\nNotFoundException","category":"page"},{"location":"API/exceptions.html#Genie.Exceptions.ExceptionalResponse","page":"Exceptions","title":"Genie.Exceptions.ExceptionalResponse","text":"struct ExceptionalResponse <: Exception\n\nA type of exception which wraps an HTTP Response object. The thrown exception will propagate until it is caught up the app stack or ultimately by Genie and the wrapped response is sent to the client.\n\nExample\n\nIf the user is not authenticated, an ExceptionalResponse is thrown - if the exception is not caught in the app's stack, Genie will catch it and return the wrapped Response object, forcing an HTTP redirect to the login page.\n\nisauthenticated() || throw(ExceptionalResponse(redirect(:show_login)))\n\n\n\n\n\n","category":"type"},{"location":"API/exceptions.html#Genie.Exceptions.RuntimeException","page":"Exceptions","title":"Genie.Exceptions.RuntimeException","text":"RuntimeException\n\nRepresents an unexpected and unhandled runtime exceptions. An error event will be logged and the exception will be sent to the client, depending on the environment (the error stack is dumped by default in dev mode or an error message is displayed in production).\n\nIt allows defining custom error message and info, as well as an error code, in addition to the exception object.\n\nArguments\n\nmessage::String\ninfo::String\ncode::Int\nex::Union{Nothing,Exception}\n\n\n\n\n\n","category":"type"},{"location":"API/exceptions.html#Genie.Exceptions.InternalServerException","page":"Exceptions","title":"Genie.Exceptions.InternalServerException","text":"struct InternalServerException <: Exception\n\nDedicated exception type for server side exceptions. Results in a 500 error by default.\n\nArguments\n\nmessage::String\ninfo::String\ncode::Int\n\n\n\n\n\n","category":"type"},{"location":"API/exceptions.html#Genie.Exceptions.NotFoundException","page":"Exceptions","title":"Genie.Exceptions.NotFoundException","text":"struct NotFoundException <: Exception\n\nSpecialized exception representing a not found resources. Results in a 404 response being sent to the client.\n\nArguments\n\nmessage::String\ninfo::String\ncode::Int\nresource::String\n\n\n\n\n\n","category":"type"},{"location":"API/requests.html","page":"Requests","title":"Requests","text":"CurrentModule = Requests","category":"page"},{"location":"API/requests.html","page":"Requests","title":"Requests","text":"jsonpayload\nrawpayload\nfilespayload\ninfilespayload\nRequests.write\nRequests.read\nfilename\npostpayload\ngetpayload\nrequest\npayload\nmatchedroute\nmatchedchannel\nwsclient","category":"page"},{"location":"API/requests.html#Genie.Requests.jsonpayload","page":"Requests","title":"Genie.Requests.jsonpayload","text":"jsonpayload()\n\nProcesses an application/json POST request. If it fails to successfully parse the JSON data it returns nothing. The original payload can still be accessed invoking rawpayload()\n\n\n\n\n\njsonpayload(::Type{T}) where {T}\n\nProcesses an application/json POST request attempting to convert the payload into a value of type T. If it fails to successfully parse and convert the JSON data, it throws an exception. The original payload can still be accessed invoking rawpayload()\n\n\n\n\n\n","category":"function"},{"location":"API/requests.html#Genie.Requests.rawpayload","page":"Requests","title":"Genie.Requests.rawpayload","text":"rawpayload() :: String\n\nReturns the raw POST payload as a String.\n\n\n\n\n\n","category":"function"},{"location":"API/requests.html#Genie.Requests.filespayload","page":"Requests","title":"Genie.Requests.filespayload","text":"filespayload() :: Dict{String,HttpFile}\n\nCollection of form uploaded files.\n\n\n\n\n\nfilespayload(filename::Union{String,Symbol}) :: HttpFile\n\nReturns the HttpFile uploaded through the key input name.\n\n\n\n\n\n","category":"function"},{"location":"API/requests.html#Genie.Requests.infilespayload","page":"Requests","title":"Genie.Requests.infilespayload","text":"infilespayload(key::Union{String,Symbol}) :: Bool\n\nChecks if the collection of uploaded files contains a file stored under the key name.\n\n\n\n\n\n","category":"function"},{"location":"API/requests.html#Base.write","page":"Requests","title":"Base.write","text":"write(io::IO, x)\nwrite(filename::AbstractString, x)\n\nWrite the canonical binary representation of a value to the given I/O stream or file. Return the number of bytes written into the stream.   See also print to write a text representation (with an encoding that may depend upon io).\n\nYou can write multiple values with the same write call. i.e. the following are equivalent:\n\nwrite(io, x, y...)\nwrite(io, x) + write(io, y...)\n\nExamples\n\njulia> io = IOBuffer();\n\njulia> write(io, \"JuliaLang is a GitHub organization.\", \" It has many members.\")\n56\n\njulia> String(take!(io))\n\"JuliaLang is a GitHub organization. It has many members.\"\n\njulia> write(io, \"Sometimes those members\") + write(io, \" write documentation.\")\n44\n\njulia> String(take!(io))\n\"Sometimes those members write documentation.\"\n\nUser-defined plain-data types without write methods can be written when wrapped in a Ref:\n\njulia> struct MyStruct; x::Float64; end\n\njulia> io = IOBuffer()\nIOBuffer(data=UInt8[...], readable=true, writable=true, seekable=true, append=false, size=0, maxsize=Inf, ptr=1, mark=-1)\n\njulia> write(io, Ref(MyStruct(42.0)))\n8\n\njulia> seekstart(io); read!(io, Ref(MyStruct(NaN)))\nBase.RefValue{MyStruct}(MyStruct(42.0))\n\n\n\n\n\n","category":"function"},{"location":"API/requests.html#Base.read","page":"Requests","title":"Base.read","text":"read(io::IO, T)\n\nRead a single value of type T from io, in canonical binary representation.\n\nread(io::IO, String)\n\nRead the entirety of io, as a String.\n\nExamples\n\njulia> io = IOBuffer(\"JuliaLang is a GitHub organization\");\n\njulia> read(io, Char)\n'J': ASCII/Unicode U+004A (category Lu: Letter, uppercase)\n\njulia> io = IOBuffer(\"JuliaLang is a GitHub organization\");\n\njulia> read(io, String)\n\"JuliaLang is a GitHub organization\"\n\n\n\n\n\nread(filename::AbstractString, args...)\n\nOpen a file and read its contents. args is passed to read: this is equivalent to open(io->read(io, args...), filename).\n\nread(filename::AbstractString, String)\n\nRead the entire contents of a file as a string.\n\n\n\n\n\nread(s::IO, nb=typemax(Int))\n\nRead at most nb bytes from s, returning a Vector{UInt8} of the bytes read.\n\n\n\n\n\nread(s::IOStream, nb::Integer; all=true)\n\nRead at most nb bytes from s, returning a Vector{UInt8} of the bytes read.\n\nIf all is true (the default), this function will block repeatedly trying to read all requested bytes, until an error or end-of-file occurs. If all is false, at most one read call is performed, and the amount of data returned is device-dependent. Note that not all stream types support the all option.\n\n\n\n\n\nread(command::Cmd)\n\nRun command and return the resulting output as an array of bytes.\n\n\n\n\n\nread(command::Cmd, String)\n\nRun command and return the resulting output as a String.\n\n\n\n\n\nread(file::HttpFile)\n\nReturns the content of file as string.\n\n\n\n\n\n","category":"function"},{"location":"API/requests.html#Genie.Requests.filename","page":"Requests","title":"Genie.Requests.filename","text":"filename(file::HttpFile) :: String\n\nOriginal filename of the uploaded HttpFile file.\n\n\n\n\n\n","category":"function"},{"location":"API/requests.html#Genie.Requests.postpayload","page":"Requests","title":"Genie.Requests.postpayload","text":"postpayload() :: Dict{Symbol,Any}\n\nA dict representing the POST variables payload of the request (corresponding to a form-data request)\n\n\n\n\n\npostpayload(key::Symbol) :: Any\n\nReturns the value of the POST variables key.\n\n\n\n\n\npostpayload(key::Symbol, default::Any)\n\nReturns the value of the POST variables key or the default value if key is not defined.\n\n\n\n\n\n","category":"function"},{"location":"API/requests.html#Genie.Requests.getpayload","page":"Requests","title":"Genie.Requests.getpayload","text":"getpayload() :: Dict{Symbol,Any}\n\nA dict representing the GET/query variables payload of the request (the part correspoding to ?foo=bar&baz=moo)\n\n\n\n\n\ngetpayload(key::Symbol) :: Any\n\nThe value of the GET/query variable key, as in ?key=value\n\n\n\n\n\ngetpayload(key::Symbol, default::Any) :: Any\n\nThe value of the GET/query variable key, as in ?key=value. If key is not defined, default is returned.\n\n\n\n\n\n","category":"function"},{"location":"API/requests.html#Genie.Requests.request","page":"Requests","title":"Genie.Requests.request","text":"request() :: HTTP.Request\n\nReturns the raw HTTP.Request object associated with the request.\n\n\n\n\n\n","category":"function"},{"location":"API/requests.html#Genie.Requests.payload","page":"Requests","title":"Genie.Requests.payload","text":"payload() :: Any\n\nUtility function for accessing the @params collection, which holds the request variables.\n\n\n\n\n\npayload(key::Symbol) :: Any\n\nUtility function for accessing the key value within the @params collection of request variables.\n\n\n\n\n\npayload(key::Symbol, default_value::T) :: Any\n\nUtility function for accessing the key value within the @params collection of request variables. If key is not defined, default_value is returned.\n\n\n\n\n\n","category":"function"},{"location":"API/requests.html#Genie.Requests.matchedroute","page":"Requests","title":"Genie.Requests.matchedroute","text":"matchedroute() :: Route\n\nReturns the Route object which was matched for the current request.\n\n\n\n\n\n","category":"function"},{"location":"API/requests.html#Genie.Requests.matchedchannel","page":"Requests","title":"Genie.Requests.matchedchannel","text":"matchedchannel() :: Channel\n\nReturns the Channel object which was matched for the current request.\n\n\n\n\n\n","category":"function"},{"location":"API/requests.html#Genie.Requests.wsclient","page":"Requests","title":"Genie.Requests.wsclient","text":"wsclient() :: HTTP.WebSockets.WebSocket\n\nThe web sockets client for the current request.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_json.html","page":"JSON Renderer","title":"JSON Renderer","text":"CurrentModule = Renderer.Json","category":"page"},{"location":"API/renderer_json.html","page":"JSON Renderer","title":"JSON Renderer","text":"render\nGenie.Renderer.render\njson\nGenie.Router.error","category":"page"},{"location":"tutorials/5--Handling_Query_Params.html#クエリパラメータの処理-(GET変数)","page":"クエリパラメータの処理/GETパラメータ","title":"クエリパラメータの処理 (GET変数)","text":"","category":"section"},{"location":"tutorials/5--Handling_Query_Params.html","page":"クエリパラメータの処理/GETパラメータ","title":"クエリパラメータの処理/GETパラメータ","text":"Genieは、GETリクエストを介してURLの一部分として送信されるクエリパラメータに簡単にアクセスすることができます(例：「mywebsite.com/index?foo=1&bar=2」のfooとbarは変数foo = 1、bar = 2に対応するクエリパラメータです)。これらの値はすべてGenieによって自動的に収集され、@paramsコレクション(Routerモジュールの一部)に公開されます。","category":"page"},{"location":"tutorials/5--Handling_Query_Params.html#例","page":"クエリパラメータの処理/GETパラメータ","title":"例","text":"","category":"section"},{"location":"tutorials/5--Handling_Query_Params.html","page":"クエリパラメータの処理/GETパラメータ","title":"クエリパラメータの処理/GETパラメータ","text":"using Genie, Genie.Router\n\nroute(\"/hi\") do\n  name = haskey(@params, :name) ? @params(:name) : \"Anon\"\n\n  \"Hello $name\"\nend","category":"page"},{"location":"tutorials/5--Handling_Query_Params.html","page":"クエリパラメータの処理/GETパラメータ","title":"クエリパラメータの処理/GETパラメータ","text":"http://127.0.0.1:8000/hiにアクセスすると、クエリパラメータ指定がないため、アプリは「Hello Anon」を返します。","category":"page"},{"location":"tutorials/5--Handling_Query_Params.html","page":"クエリパラメータの処理/GETパラメータ","title":"クエリパラメータの処理/GETパラメータ","text":"しかしながら、http://127.0.0.1:8000/hi?name=Adrianへのリクエストは、nameクエリ変数にAdrianという値を渡しているため、「Hello Adrian」と表示します。この変数はGenieによって@params(:name)として公開されています。","category":"page"},{"location":"tutorials/5--Handling_Query_Params.html","page":"クエリパラメータの処理/GETパラメータ","title":"クエリパラメータの処理/GETパラメータ","text":"しかし、Genieは Requestsモジュールでこれらの値にアクセスするためのユーティリティメソッドを提供します。","category":"page"},{"location":"tutorials/5--Handling_Query_Params.html#Requestsモジュール","page":"クエリパラメータの処理/GETパラメータ","title":"Requestsモジュール","text":"","category":"section"},{"location":"tutorials/5--Handling_Query_Params.html","page":"クエリパラメータの処理/GETパラメータ","title":"クエリパラメータの処理/GETパラメータ","text":"Genieは、Requestsモジュール内でリクエストデータを操作するためのユーティリティセットを提供しています。getpayloadメソッドを利用することで、クエリパラメータをDict{Symbol,Any}として取得することができます。Requestsユーティリティを利用することで前のルートを書き直すことができます。","category":"page"},{"location":"tutorials/5--Handling_Query_Params.html#例-2","page":"クエリパラメータの処理/GETパラメータ","title":"例","text":"","category":"section"},{"location":"tutorials/5--Handling_Query_Params.html","page":"クエリパラメータの処理/GETパラメータ","title":"クエリパラメータの処理/GETパラメータ","text":"using Genie, Genie.Router, Genie.Requests\n\nroute(\"/hi\") do\n  \"Hello $(getpayload(:name, \"Anon\"))\"\nend","category":"page"},{"location":"tutorials/5--Handling_Query_Params.html","page":"クエリパラメータの処理/GETパラメータ","title":"クエリパラメータの処理/GETパラメータ","text":"getpayload関数はいくつかの特殊性があり、そのうちの1つにはキーとデフォルト値を受け入れることが挙げられます。key変数が定義されていない場合、デフォルト値が返されます。APIドキュメントまたはJuliaの help>モードを利用することで、 getpayloadのさまざまな実装を確認できます。","category":"page"},{"location":"API/responses.html","page":"Responses","title":"Responses","text":"CurrentModule = Responses","category":"page"},{"location":"API/responses.html","page":"Responses","title":"Responses","text":"getresponse\ngetheaders\nsetheaders!\nsetheaders\ngetstatus\nsetstatus!\nsetstatus\ngetbody\nsetbody!\nsetbody","category":"page"},{"location":"tutorials/7--Using_JSON_Payloads.html#JSONペイロードの利用","page":"JSONペイロードの利用","title":"JSONペイロードの利用","text":"","category":"section"},{"location":"tutorials/7--Using_JSON_Payloads.html","page":"JSONペイロードの利用","title":"JSONペイロードの利用","text":"特にREST APIを開発する際の非常に一般的なデザインパターンは、POSTリクエストを介してapplication/jsonデータとして送られるJSONペイロードを受け入れることです。Genieはユーティリティ関数Requests.jsonpayloadを利用してこのユースケースを効率的に処理します。関数の内部で、GenieはPOSTリクエストを処理し、JSONテキストペイロードの解析を試みます。これが失敗した場合でも、Requests.rawpayloadメソッドを利用することで生データ（JSONに変換されていないテキストペイロード）にアクセスできます。","category":"page"},{"location":"tutorials/7--Using_JSON_Payloads.html#例","page":"JSONペイロードの利用","title":"例","text":"","category":"section"},{"location":"tutorials/7--Using_JSON_Payloads.html","page":"JSONペイロードの利用","title":"JSONペイロードの利用","text":"using Genie, Genie.Router, Genie.Requests, Genie.Renderer.Json\n\nroute(\"/jsonpayload\", method = POST) do\n  @show jsonpayload()\n  @show rawpayload()\n\n  json(\"Hello $(jsonpayload()[\"name\"])\")\nend\n\nup()","category":"page"},{"location":"tutorials/7--Using_JSON_Payloads.html","page":"JSONペイロードの利用","title":"JSONペイロードの利用","text":"次にHTTP パッケージを利用することでPOSTリクエストを作成します。","category":"page"},{"location":"tutorials/7--Using_JSON_Payloads.html","page":"JSONペイロードの利用","title":"JSONペイロードの利用","text":"using HTTP\n\nHTTP.request(\"POST\", \"http://localhost:8000/jsonpayload\", [(\"Content-Type\", \"application/json\")], \"\"\"{\"name\":\"Adrian\"}\"\"\")","category":"page"},{"location":"tutorials/7--Using_JSON_Payloads.html","page":"JSONペイロードの利用","title":"JSONペイロードの利用","text":"以下の内容が出力されます。","category":"page"},{"location":"tutorials/7--Using_JSON_Payloads.html","page":"JSONペイロードの利用","title":"JSONペイロードの利用","text":"jsonpayload() = Dict{String,Any}(\"name\"=>\"Adrian\")\nrawpayload() = \"{\\\"name\\\":\\\"Adrian\\\"}\"\n\nINFO:Main: /jsonpayload 200\n\nHTTP.Messages.Response:\n\"\"\"\nHTTP/1.1 200 OK\nContent-Type: application/json\nTransfer-Encoding: chunked\n\n\"Hello Adrian\"\"\"\"","category":"page"},{"location":"tutorials/7--Using_JSON_Payloads.html","page":"JSONペイロードの利用","title":"JSONペイロードの利用","text":"初めに、2つの@showの呼び出しについて、jsonpayloadがPOSTデータをDict型に正常に変換したことに注目してください。一方でrawpayloadはPOSTデータをString型として、受け取った通りに返しています。最後にルートハンドラーはJSONレスポンスを返し、jsonpayload Dictから名前を抽出して、ユーザに挨拶しています。","category":"page"},{"location":"API/renderer_html.html","page":"HTML Renderer","title":"HTML Renderer","text":"CurrentModule = Renderer.Html","category":"page"},{"location":"API/renderer_html.html","page":"HTML Renderer","title":"HTML Renderer","text":"normal_element\nprepare_template\nattributes\nparseattr\nnormalize_element\ndenormalize_element\nvoid_element\nskip_element\ninclude_markdown\nget_template\ndoctype\ndoc\nparseview\nrender\nparsehtml\nGenie.Renderer.render\nhtml\nsafe_attr\nparsehtml\nhtml_to_julia\nstring_to_julia\nto_julia\npartial\ntemplate\nread_template_file\nparse_template\nparse_string\nparse\nparsetags\nregister_elements\nregister_element\nregister_normal_element\nregister_void_element\nattr\n@foreach\ncollection\nGenie.Router.error\nserve_error_file\n@yield\nel","category":"page"},{"location":"API/renderer_html.html#Genie.Renderer.Html.normal_element","page":"HTML Renderer","title":"Genie.Renderer.Html.normal_element","text":"normal_element(f::Function, elem::String, attrs::Vector{Pair{Symbol,Any}} = Pair{Symbol,Any}[]) :: HTMLString\n\nGenerates a HTML element in the form <...></...>\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.prepare_template","page":"HTML Renderer","title":"Genie.Renderer.Html.prepare_template","text":"prepare_template(s::String)\nprepare_template{T}(v::Vector{T})\n\nCleans up the template before rendering (ex by removing empty nodes).\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.attributes","page":"HTML Renderer","title":"Genie.Renderer.Html.attributes","text":"attributes(attrs::Vector{Pair{Symbol,String}} = Vector{Pair{Symbol,String}}()) :: Vector{String}\n\nParses HTML attributes.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.parseattr","page":"HTML Renderer","title":"Genie.Renderer.Html.parseattr","text":"parseattr(attr) :: String\n\nConverts Julia keyword arguments to HTML attributes which illegal Julia chars.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.normalize_element","page":"HTML Renderer","title":"Genie.Renderer.Html.normalize_element","text":"normalize_element(elem::String)\n\nCleans up problematic characters or DOM elements.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.denormalize_element","page":"HTML Renderer","title":"Genie.Renderer.Html.denormalize_element","text":"denormalize_element(elem::String)\n\nReplaces - with the char defined to replace dashes, as Julia does not support them in names.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.void_element","page":"HTML Renderer","title":"Genie.Renderer.Html.void_element","text":"void_element(elem::String, attrs::Vector{Pair{Symbol,String}} = Vector{Pair{Symbol,String}}()) :: HTMLString\n\nGenerates a void HTML element in the form <...>\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.skip_element","page":"HTML Renderer","title":"Genie.Renderer.Html.skip_element","text":"skip_element(f::Function) :: HTMLString\nskip_element() :: HTMLString\n\nCleans up empty elements.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.include_markdown","page":"HTML Renderer","title":"Genie.Renderer.Html.include_markdown","text":"include_markdown(path::String; context::Module = @__MODULE__)\n\nIncludes and renders a markdown view file\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.get_template","page":"HTML Renderer","title":"Genie.Renderer.Html.get_template","text":"get_template(path::String; partial::Bool = true, context::Module = @__MODULE__) :: Function\n\nResolves the inclusion and rendering of a template file\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.doctype","page":"HTML Renderer","title":"Genie.Renderer.Html.doctype","text":"Outputs document's doctype.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.doc","page":"HTML Renderer","title":"Genie.Renderer.Html.doc","text":"Outputs document's doctype.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.parseview","page":"HTML Renderer","title":"Genie.Renderer.Html.parseview","text":"parseview(data::String; partial = false, context::Module = @__MODULE__) :: Function\n\nParses a view file, returning a rendering function. If necessary, the function is JIT-compiled, persisted and loaded into memory.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.render","page":"HTML Renderer","title":"Genie.Renderer.Html.render","text":"render(data::String; context::Module = @__MODULE__, layout::Union{String,Nothing} = nothing, vars...) :: Function\n\nRenders the string as an HTML view.\n\n\n\n\n\nrender(viewfile::Genie.Renderer.FilePath; layout::Union{Nothing,Genie.Renderer.FilePath} = nothing, context::Module = @__MODULE__, vars...) :: Function\n\nRenders the template file as an HTML view.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.parsehtml","page":"HTML Renderer","title":"Genie.Renderer.Html.parsehtml","text":"parsehtml(input::String; partial::Bool = true) :: String\n\n\n\n\n\nparsehtml(elem, output, depth; partial = true) :: String\n\nParses a HTML tree structure into a string of Julia code.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.html","page":"HTML Renderer","title":"Genie.Renderer.Html.html","text":"html(data::String; context::Module = @__MODULE__, status::Int = 200, headers::HTTPHeaders = HTTPHeaders(), layout::Union{String,Nothing} = nothing, vars...) :: HTTP.Response\n\nParses the data input as HTML, returning a HTML HTTP Response.\n\nArguments\n\ndata::String: the HTML string to be rendered\ncontext::Module: the module in which the variables are evaluated (in order to provide the scope for vars). Usually the controller.\nstatus::Int: status code of the response\nheaders::HTTPHeaders: HTTP response headers\nlayout::Union{String,Nothing}: layout file for rendering data\n\nExample\n\njulia> html(\"<h1>Welcome $(@vars(:name))</h1>\", layout = \"<div><% @yield %></div>\", name = \"Adrian\")\nHTTP.Messages.Response:\n\"\nHTTP/1.1 200 OK\nContent-Type: text/html; charset=utf-8\n\n<html><head></head><body><div><h1>Welcome Adrian</h1>\n</div></body></html>\"\n\n\n\n\n\nhtml(md::Markdown.MD; context::Module = @__MODULE__, status::Int = 200, headers::Genie.Renderer.HTTPHeaders = Genie.Renderer.HTTPHeaders(), layout::Union{String,Nothing} = nothing, forceparse::Bool = false, vars...) :: Genie.Renderer.HTTP.Response\n\nMarkdown view rendering\n\n\n\n\n\nhtml(viewfile::FilePath; layout::Union{Nothing,FilePath} = nothing,\n      context::Module = @__MODULE__, status::Int = 200, headers::HTTPHeaders = HTTPHeaders(), vars...) :: HTTP.Response\n\nParses and renders the HTML viewfile, optionally rendering it within the layout file. Valid file format is .html.jl.\n\nArguments\n\nviewfile::FilePath: filesystem path to the view file as a Renderer.FilePath, ie Renderer.FilePath(\"/path/to/file.html.jl\")\nlayout::FilePath: filesystem path to the layout file as a Renderer.FilePath, ie Renderer.FilePath(\"/path/to/file.html.jl\")\ncontext::Module: the module in which the variables are evaluated (in order to provide the scope for vars). Usually the controller.\nstatus::Int: status code of the response\nheaders::HTTPHeaders: HTTP response headers\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.safe_attr","page":"HTML Renderer","title":"Genie.Renderer.Html.safe_attr","text":"safe_attr(attr) :: String\n\nReplaces illegal Julia characters from HTML attributes with safe ones, to be used as keyword arguments.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.html_to_julia","page":"HTML Renderer","title":"Genie.Renderer.Html.html_to_julia","text":"html_to_julia(file_path::String; partial = true) :: String\n\nConverts a HTML document to Julia code.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.string_to_julia","page":"HTML Renderer","title":"Genie.Renderer.Html.string_to_julia","text":"string_to_julia(content::String; partial = true, f_name::Union{Symbol,Nothing} = nothing, prepend = \"\") :: String\n\nConverts string view data to Julia code\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.to_julia","page":"HTML Renderer","title":"Genie.Renderer.Html.to_julia","text":"to_julia(input::String, f::Function; partial = true, f_name::Union{Symbol,Nothing} = nothing, prepend = \"\") :: String\n\nConverts an input file to Julia code\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.partial","page":"HTML Renderer","title":"Genie.Renderer.Html.partial","text":"partial(path::String; context::Module = @__MODULE__, vars...) :: String\n\nRenders (includes) a view partial within a larger view or layout file.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.template","page":"HTML Renderer","title":"Genie.Renderer.Html.template","text":"template(path::String; partial::Bool = true, context::Module = @__MODULE__) :: String\n\nRenders a template file.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.read_template_file","page":"HTML Renderer","title":"Genie.Renderer.Html.read_template_file","text":"read_template_file(file_path::String) :: String\n\nReads file_path template from disk.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.parse_template","page":"HTML Renderer","title":"Genie.Renderer.Html.parse_template","text":"parse_template(file_path::String; partial = true) :: String\n\nParses a HTML file into Julia code.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.parse_string","page":"HTML Renderer","title":"Genie.Renderer.Html.parse_string","text":"parse_string(data::String; partial = true) :: String\n\nParses a HTML string into Julia code.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.parsetags","page":"HTML Renderer","title":"Genie.Renderer.Html.parsetags","text":"parsetags(line::Tuple{Int,String}, strip_close_tag = false) :: String\n\nParses special HTML+Julia tags.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.register_elements","page":"HTML Renderer","title":"Genie.Renderer.Html.register_elements","text":"register_elements() :: Nothing\n\nGenerated functions that represent Julia functions definitions corresponding to HTML elements.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.register_element","page":"HTML Renderer","title":"Genie.Renderer.Html.register_element","text":"register_element(elem::Union{Symbol,String}, elem_type::Union{Symbol,String} = :normal; context = @__MODULE__) :: Nothing\n\nGenerates a Julia function representing an HTML element.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.register_normal_element","page":"HTML Renderer","title":"Genie.Renderer.Html.register_normal_element","text":"register_normal_element(elem::Union{Symbol,String}; context = @__MODULE__) :: Nothing\n\nGenerates a Julia function representing a \"normal\" HTML element: that is an element with a closing tag, <tag>...</tag>\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.register_void_element","page":"HTML Renderer","title":"Genie.Renderer.Html.register_void_element","text":"register_void_element(elem::Union{Symbol,String}; context::Module = @__MODULE__) :: Nothing\n\nGenerates a Julia function representing a \"void\" HTML element: that is an element without a closing tag, <tag />\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.@foreach","page":"HTML Renderer","title":"Genie.Renderer.Html.@foreach","text":"@foreach(f, arr)\n\nIterates over the arr Array and applies function f for each element. The results of each iteration are concatenated and the final string is returned.\n\nExamples\n\n@foreach(@vars(:translations)) do t   t end\n\n\n\n\n\n","category":"macro"},{"location":"API/renderer_html.html#Genie.Renderer.Html.collection","page":"HTML Renderer","title":"Genie.Renderer.Html.collection","text":"collection(template::Function, collection::Vector{T})::String where {T}\n\nCreates a view fragment by repeateadly applying a function to each element of the collection.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Router.error","page":"HTML Renderer","title":"Genie.Router.error","text":"error\n\nNot implemented function for error response.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.serve_error_file","page":"HTML Renderer","title":"Genie.Renderer.Html.serve_error_file","text":"serve_error_file(error_code::Int, error_message::String = \"\", params::Dict{Symbol,Any} = Dict{Symbol,Any}()) :: Response\n\nServes the error file correspoding to error_code and current environment.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer_html.html#Genie.Renderer.Html.@yield","page":"HTML Renderer","title":"Genie.Renderer.Html.@yield","text":"@yield\n\nOutputs the rendering of the view within the template.\n\n\n\n\n\n","category":"macro"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html#HerokuビルドパックによるGenieアプリのデプロイ","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"","category":"section"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"これはHerokuビルドパックを利用してJulia/Genieアプリを提供する方法のチュートリアルです。","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html#前提条件","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"前提条件","text":"","category":"section"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"このガイドは、Herokuアカウントがあり、Heroku CLIにサインインしていることを想定しています。Heroku CLIのセットアップ方法の情報はこちらから","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html#アプリケーション","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"アプリケーション","text":"","category":"section"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"デプロイを試すために、サンプルアプリケーションが必要です。次で示すように、自分のものを利用するかサンプルをクローンするかどちらかを選択してください。","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html#全ステップ-(簡単なコピー/ペースト形式)","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"全ステップ (簡単なコピー/ペースト形式)","text":"","category":"section"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"HEROKU_APP_NAMEをユニークなものにカスタマイズします。","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"HEROKU_APP_NAME=my-app-name","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"必要に応じてサンプルアプリをクローンします。","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"git clone https://github.com/milesfrain/GenieOnHeroku.git","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"アプリのフォルダに移動します。","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"cd GenieOnHeroku","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"次にHerokuアプリを作成します。","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"heroku create $HEROKU_APP_NAME --buildpack https://github.com/Optomatica/heroku-buildpack-julia.git","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"Herokuに新しく作成したアプリをプッシュします。","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"git push heroku master","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"ここで、ブラウザでアプリを開くことができます。","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"heroku open -a $HEROKU_APP_NAME","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"必要であればログをチェックします。","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"heroku logs -tail -a $HEROKU_APP_NAME","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html#より詳細な説明のあるステップ","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"より詳細な説明のあるステップ","text":"","category":"section"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html#アプリ名を選択","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"アプリ名を選択","text":"","category":"section"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"HEROKU_APP_NAME=my-app-name","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"これはすべてのHerokuプロジェクト間でユニークである必要があり、プロジェクトが提供されるURLの一部になります。(例：https://my-app-name.herokuapp.com/)","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"名前がユニークでない場合、heroku createステップでエラーが発生します。","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"Creating ⬢ my-app-name... !\n ▸    Name my-app-name is already taken","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html#サンプルプロジェクトのクローン","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"サンプルプロジェクトのクローン","text":"","category":"section"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"git clone https://github.com/milesfrain/GenieOnHeroku.git\ncd GenieOnHeroku","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"自身のプロジェクトを選択することもできますが、gitリポジトリである必要があります。","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"ルートディレクトリのProcfileはアプリを読み込むための起動コマンドを含んでいます。 このプロジェクトのProcfileの内容は以下の1行です。","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"web: julia --project src/app.jl $PORT","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"Procfileを編集して自身のプロジェクトの起動スクリプトに向けることもできます。(例えばsrc/app.jlの代わりにsrc/my_app_launch_file.jl)　ただし、Herokuによって設定され動的に変化する$PORT環境変数は考慮にいれてください。","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"Genie.newappで構築した標準Genieアプリケーションをデプロイする場合、起動スクリプトはbin/severになります。Genieは自動的に環境から$PORT番号を選択します。","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html#Herokuプロジェクトの生成","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"Herokuプロジェクトの生成","text":"","category":"section"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"heroku create $HEROKU_APP_NAME --buildpack https://github.com/Optomatica/heroku-buildpack-julia.git","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"上記により、Herokuプラットフォーム上にプロジェクトが作成されます。これには個別のgitリポジトリが含まれます。","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"このherokuレポジトリは追跡対象リポジトリの一覧に追加され、git remote -vで監視が可能です。","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"heroku  https://git.heroku.com/my-app-name.git (fetch)\nheroku  https://git.heroku.com/my-app-name.git (push)\norigin  https://github.com/milesfrain/GenieOnHeroku.git (fetch)\norigin  https://github.com/milesfrain/GenieOnHeroku.git (push)","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"Juliaのビルドパックを使用します。これはJuliaプロジェクトが必要とする共通のデプロイ操作の多くを実行します。 それは、ルートディレクトリにあるProject.toml, Manifest.toml、srcディレクトリ内のすべてのJuliaコードとともにサンプルプロジェクト内にあるディレクトリレイアウトに依存します。","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html#アプリのデプロイ","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"アプリのデプロイ","text":"","category":"section"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"git push heroku master","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"herokuリモートレポジトリのmasterブランチに対して、ローカルレポジトリの現在のブランチをプッシュしています。","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"Herokuは自動的に最新のプッシュのProcfileとJuliaビルドパックで書かれたコマンドを実行します。","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"自動デプロイをトリガーするには、herokuのmasterブランチにプッシュする必要があります。","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html#アプリのWebページ表示","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"アプリのWebページ表示","text":"","category":"section"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"heroku open -a $HEROKU_APP_NAME","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"上記はアプリのWebページをブラウザで開く便利なコマンドです。","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"Webページ: https://$HEROKU_APP_NAME.herokuapp.com/","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"例: https://my-app-name.herokuapp.com/","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html#アプリログの表示","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"アプリログの表示","text":"","category":"section"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"heroku logs -tail -a $HEROKU_APP_NAME","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"これはアプリの最新のステータスを表示し続けるログビューアを起動する別の便利なコマンドです。","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"Juliaのprintln文もここに表示されます。","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"このビューアからはCtrl-Cで抜けてください。","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"ログはHerokuのWebダッシュボードからも表示できます。 例: https://dashboard.heroku.com/apps/my-app-name/logs","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html#アプリの修正をデプロイ","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"アプリの修正をデプロイ","text":"","category":"section"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"アプリへの変更をデプロイするために、ローカルにこれらの変更をコミットし、herokuに再度プッシュします。","category":"page"},{"location":"tutorials/90--Deploying_With_Heroku_Buildpacks.html","page":"HerokuビルドパックによるGenieアプリのデプロイ","title":"HerokuビルドパックによるGenieアプリのデプロイ","text":"<make changes>\ngit commit -am \"my commit message\"\ngit push heroku master","category":"page"},{"location":"API/cookies.html","page":"Cookies","title":"Cookies","text":"CurrentModule = Cookies","category":"page"},{"location":"API/cookies.html","page":"Cookies","title":"Cookies","text":"get\nset!\nCookies.Dict\nnullablevalue\ngetcookies","category":"page"},{"location":"API/cookies.html#Genie.Cookies.get","page":"Cookies","title":"Genie.Cookies.get","text":"get(payload::Union{HTTP.Response,HTTP.Request}, key::Union{String,Symbol}, default::T; encrypted::Bool = true)::T where T\n\nAttempts to get the Cookie value stored at key within payload. If the key is not set, the default value is returned.\n\nArguments\n\npayload::Union{HTTP.Response,HTTP.Request}: the request or response object containing the Cookie headers\nkey::Union{String,Symbol}: the name of the cookie value\ndefault::T: default value to be returned if no cookie value is set at key\nencrypted::Bool: if true the value stored on the cookie is automatically decrypted\n\n\n\n\n\nget(res::HTTP.Response, key::Union{String,Symbol}) :: Union{Nothing,String}\n\nRetrieves a value stored on the cookie as key from the Respose object.\n\nArguments\n\npayload::Union{HTTP.Response,HTTP.Request}: the request or response object containing the Cookie headers\nkey::Union{String,Symbol}: the name of the cookie value\nencrypted::Bool: if true the value stored on the cookie is automatically decrypted\n\n\n\n\n\nget(req::Request, key::Union{String,Symbol}) :: Union{Nothing,String}\n\nRetrieves a value stored on the cookie as key from the Request object.\n\nArguments\n\nreq::HTTP.Request: the request or response object containing the Cookie headers\nkey::Union{String,Symbol}: the name of the cookie value\nencrypted::Bool: if true the value stored on the cookie is automatically decrypted\n\n\n\n\n\n","category":"function"},{"location":"API/cookies.html#Genie.Cookies.set!","page":"Cookies","title":"Genie.Cookies.set!","text":"set!(res::HTTP.Response, key::Union{String,Symbol}, value::Any, attributes::Dict; encrypted::Bool = true) :: HTTP.Response\n\nSets value under the key label on the Cookie.\n\nArguments\n\nres::HTTP.Response: the HTTP.Response object\nkey::Union{String,Symbol}: the key for storing the cookie value\nvalue::Any: the cookie value\nattributes::Dict: additional cookie attributes, such as Path or HttpOnly\nencrypted::Bool: if true the value is stored encoded\n\n\n\n\n\n","category":"function"},{"location":"API/cookies.html#Base.Dict","page":"Cookies","title":"Base.Dict","text":"Dict([itr])\n\nDict{K,V}() constructs a hash table with keys of type K and values of type V. Keys are compared with isequal and hashed with hash.\n\nGiven a single iterable argument, constructs a Dict whose key-value pairs are taken from 2-tuples (key,value) generated by the argument.\n\nExamples\n\njulia> Dict([(\"A\", 1), (\"B\", 2)])\nDict{String,Int64} with 2 entries:\n  \"B\" => 2\n  \"A\" => 1\n\nAlternatively, a sequence of pair arguments may be passed.\n\njulia> Dict(\"A\"=>1, \"B\"=>2)\nDict{String,Int64} with 2 entries:\n  \"B\" => 2\n  \"A\" => 1\n\n\n\n\n\n","category":"type"},{"location":"API/cookies.html#Genie.Cookies.nullablevalue","page":"Cookies","title":"Genie.Cookies.nullablevalue","text":"nullablevalue(payload::Union{HTTP.Response,HTTP.Request}, key::Union{String,Symbol}; encrypted::Bool = true)\n\nAttempts to retrieve a cookie value stored at key in the payload object and returns a Union{Nothing,String}\n\nArguments\n\npayload::Union{HTTP.Response,HTTP.Request}: the request or response object containing the Cookie headers\nkey::Union{String,Symbol}: the name of the cookie value\nencrypted::Bool: if true the value stored on the cookie is automatically decrypted\n\n\n\n\n\n","category":"function"},{"location":"API/cookies.html#Genie.Cookies.getcookies","page":"Cookies","title":"Genie.Cookies.getcookies","text":"getcookies(req::HTTP.Request) :: Vector{HTTP.Cookies.Cookie}\n\nExtracts cookies from within req\n\n\n\n\n\ngetcookies(req::HTTP.Request) :: Vector{HTTP.Cookies.Cookie}\n\nExtracts cookies from within req, filtering them by matching name.\n\n\n\n\n\n","category":"function"},{"location":"index.html#Genie","page":"Home","title":"Genie","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"(Image: Genie Logo)","category":"page"},{"location":"index.html#Genie-2","page":"Home","title":"Genie","text":"","category":"section"},{"location":"index.html#生産性の高いJulia-Webフレームワーク","page":"Home","title":"生産性の高いJulia Webフレームワーク","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Genieは、モダンなWebアプリケーションを開発するための合理化された効率的なワークフローを提供するフルスタックMVC Webフレームワークです。 Juliaの長所（高レベル、高性能、動的、JITコンパイル）に基づいて構築され、生産的なWeb開発のための豊富なAPIと強力なツールセットを公開します。","category":"page"},{"location":"index.html#現在の状態","page":"Home","title":"現在の状態","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"GenieはJulia v1.3以降と互換性があります。","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"","category":"page"},{"location":"index.html#ドキュメント","page":"Home","title":"ドキュメント","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"https://kentei.github.io/Genie.jl/dev/","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"","category":"page"},{"location":"index.html#謝辞","page":"Home","title":"謝辞","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Genieは、Juliaコミュニティから親切に寄贈された多数のパッケージを使用しています。\n素晴らしいGenieロゴは、Alvaro Casanovaによってデザインされました。","category":"page"},{"location":"API/genie.html","page":"Genie","title":"Genie","text":"CurrentModule = Genie","category":"page"},{"location":"API/genie.html","page":"Genie","title":"Genie","text":"serve\nnewapp\nnewapp_webservice\nnewapp_mvc\nnewapp_fullstack\nloadapp\nstartup\nup\ndown\nrun\nnewcontroller\nnewresource\nnewtask\nload_libs\nload_resources\nload_helpers\nload_configurations\nload_initializers\nload_plugins\nload_routes_definitions\nsecret_token\ndefault_context\nload\nreplprint","category":"page"},{"location":"API/genie.html#Genie.serve","page":"Genie","title":"Genie.serve","text":"serve(path::String = Genie.config.server_document_root, params...; kwparams...)\n\nServes a folder of static files located at path. Allows Genie to be used as a static files web server. The params and kwparams arguments are forwarded to Genie.startup().\n\nArguments\n\npath::String: the folder of static files to be served by the server\nparams: additional arguments which are passed to Genie.startup to control the web server\nkwparams: additionak keyword arguments which are passed to Genie.startup to control the web server\n\nExamples\n\njulia> Genie.serve(\"public\", 8888, async = false, verbose = true)\n[ Info: Ready!\n2019-08-06 16:39:20:DEBUG:Main: Web Server starting at http://127.0.0.1:8888\n[ Info: Listening on: 127.0.0.1:8888\n[ Info: Accept (1):  🔗    0↑     0↓    1s 127.0.0.1:8888:8888 ≣16\n\n\n\n\n\n","category":"function"},{"location":"API/genie.html#Genie.newapp","page":"Genie","title":"Genie.newapp","text":"newapp(path::String = \".\"; autostart::Bool = true, fullstack::Bool = false, dbsupport::Bool = false, mvcsupport::Bool = false) :: Nothing\n\nScaffolds a new Genie app, setting up the file structure indicated by the various arguments.\n\nArguments\n\npath::String: the name of the app and the path where to bootstrap it\nautostart::Bool: automatically start the app once the file structure is created\nfullstack::Bool: the type of app to be bootstrapped. The fullstack app includes MVC structure, DB connection code, and asset pipeline files.\ndbsupport::Bool: bootstrap the files needed for DB connection setup via the SearchLight ORM\nmvcsupport::Bool: adds the files used for HTML+Julia view templates rendering and working with resources\n\nExamples\n\njulia> Genie.newapp(\"MyGenieApp\")\n2019-08-06 16:54:15:INFO:Main: Done! New app created at MyGenieApp\n2019-08-06 16:54:15:DEBUG:Main: Changing active directory to MyGenieApp\n2019-08-06 16:54:15:DEBUG:Main: Installing app dependencies\n Resolving package versions...\n  Updating `~/Dropbox/Projects/GenieTests/MyGenieApp/Project.toml`\n  [c43c736e] + Genie v0.10.1\n  Updating `~/Dropbox/Projects/GenieTests/MyGenieApp/Manifest.toml`\n\n2019-08-06 16:54:27:INFO:Main: Starting your brand new Genie app - hang tight!\n _____         _\n|   __|___ ___|_|___\n|  |  | -_|   | | -_|\n|_____|___|_|_|_|___|\n\n┌ Info:\n│ Starting Genie in >> DEV << mode\n└\n[ Info: Logging to file at MyGenieApp/log/dev.log\n[ Info: Ready!\n2019-08-06 16:54:32:DEBUG:Main: Web Server starting at http://127.0.0.1:8000\n2019-08-06 16:54:32:DEBUG:Main: Web Server running at http://127.0.0.1:8000\n\n\n\n\n\n","category":"function"},{"location":"API/genie.html#Genie.newapp_webservice","page":"Genie","title":"Genie.newapp_webservice","text":"newapp_webservice(path::String = \".\"; autostart::Bool = true, dbsupport::Bool = false) :: Nothing\n\nTemplate for scaffolding a new Genie app suitable for nimble web services.\n\nArguments\n\npath::String: the name of the app and the path where to bootstrap it\nautostart::Bool: automatically start the app once the file structure is created\ndbsupport::Bool: bootstrap the files needed for DB connection setup via the SearchLight ORM\n\n\n\n\n\n","category":"function"},{"location":"API/genie.html#Genie.newapp_mvc","page":"Genie","title":"Genie.newapp_mvc","text":"newapp_mvc(path::String = \".\"; autostart::Bool = true) :: Nothing\n\nTemplate for scaffolding a new Genie app suitable for MVC web applications (includes MVC structure and DB support).\n\nArguments\n\npath::String: the name of the app and the path where to bootstrap it\nautostart::Bool: automatically start the app once the file structure is created\n\n\n\n\n\n","category":"function"},{"location":"API/genie.html#Genie.newapp_fullstack","page":"Genie","title":"Genie.newapp_fullstack","text":"newapp_fullstack(path::String = \".\"; autostart::Bool = true) :: Nothing\n\nTemplate for scaffolding a new Genie app suitable for full stack web applications (includes MVC structure, DB support, and frontend asset pipeline).\n\nArguments\n\npath::String: the name of the app and the path where to bootstrap it\nautostart::Bool: automatically start the app once the file structure is created\n\n\n\n\n\n","category":"function"},{"location":"API/genie.html#Genie.loadapp","page":"Genie","title":"Genie.loadapp","text":"loadapp(path::String = \".\"; autostart::Bool = false) :: Nothing\n\nLoads an existing Genie app from the file system, within the current Julia REPL session.\n\nArguments\n\npath::String: the path to the Genie app on the file system.\nautostart::Bool: automatically start the app upon loading it.\n\nExamples\n\nshell> tree -L 1\n.\n├── Manifest.toml\n├── Project.toml\n├── bin\n├── bootstrap.jl\n├── config\n├── env.jl\n├── genie.jl\n├── log\n├── public\n├── routes.jl\n└── src\n\n5 directories, 6 files\n\njulia> using Genie\n\njulia> Genie.loadapp(\".\")\n _____         _\n|   __|___ ___|_|___\n|  |  | -_|   | | -_|\n|_____|___|_|_|_|___|\n\n┌ Info:\n│ Starting Genie in >> DEV << mode\n└\n[ Info: Logging to file at MyGenieApp/log/dev.log\n\n\n\n\n\n","category":"function"},{"location":"API/genie.html#Genie.startup","page":"Genie","title":"Genie.startup","text":"startup(port::Int = Genie.config.server_port, host::String = Genie.config.server_host;\n    ws_port::Int = Genie.config.websockets_port, async::Bool = ! Genie.config.run_as_server) :: Nothing\n\nStarts the web server. Alias for AppServer.startup\n\nArguments\n\nport::Int: the port used by the web server\nhost::String: the host used by the web server\nws_port::Int: the port used by the Web Sockets server\nasync::Bool: run the web server task asynchronously\n\nExamples\n\njulia> startup(8000, \"127.0.0.1\", async = false)\n[ Info: Ready!\nWeb Server starting at http://127.0.0.1:8000\n\n\n\n\n\n","category":"function"},{"location":"API/genie.html#Genie.up","page":"Genie","title":"Genie.up","text":"startup(port::Int = Genie.config.server_port, host::String = Genie.config.server_host;\n    ws_port::Int = Genie.config.websockets_port, async::Bool = ! Genie.config.run_as_server) :: ServersCollection\n\nStarts the web server.\n\nArguments\n\nport::Int: the port used by the web server\nhost::String: the host used by the web server\nws_port::Int: the port used by the Web Sockets server\nasync::Bool: run the web server task asynchronously\n\nExamples\n\njulia> up(8000, \"127.0.0.1\", async = false)\n[ Info: Ready!\nWeb Server starting at http://127.0.0.1:8000\n\n\n\n\n\n","category":"function"},{"location":"API/genie.html#Genie.down","page":"Genie","title":"Genie.down","text":"downdown(; webserver::Bool = true, websockets::Bool = true) :: ServersCollection\n\nShuts down the servers optionally indicating which of the webserver and websockets servers to be stopped.\n\n\n\n\n\n","category":"function"},{"location":"API/genie.html#Genie.run","page":"Genie","title":"Genie.run","text":"run() :: Nothing\n\nRuns the Genie app by parsing the command line args and invoking the corresponding actions. Used internally to parse command line arguments.\n\n\n\n\n\n","category":"function"},{"location":"API/genie.html#Genie.newcontroller","page":"Genie","title":"Genie.newcontroller","text":"newcontroller(controller_name::Union{String,Symbol}) :: Nothing\n\nCreates a new controller file. If pluralize is false, the name of the controller is not automatically pluralized.\n\n\n\n\n\n","category":"function"},{"location":"API/genie.html#Genie.newresource","page":"Genie","title":"Genie.newresource","text":"newresource(resource_name::Union{String,Symbol}; pluralize::Bool = true, context::Union{Module,Nothing} = nothing) :: Nothing\n\nCreates all the files associated with a new resource. If pluralize is false, the name of the resource is not automatically pluralized.\n\n\n\n\n\n","category":"function"},{"location":"API/genie.html#Genie.newtask","page":"Genie","title":"Genie.newtask","text":"newtask(task_name::Union{String,Symbol}) :: Nothing\n\nCreates a new Genie Task file.\n\n\n\n\n\n","category":"function"},{"location":"API/genie.html#Genie.load_libs","page":"Genie","title":"Genie.load_libs","text":"load_libs(root_dir::String = Genie.config.path_lib) :: Nothing\n\nRecursively adds subfolders of lib/ to LOAD_PATH. The lib/ folder, if present, is designed to host user code in the form of .jl files. This function loads user code into the Genie app.\n\n\n\n\n\n","category":"function"},{"location":"API/genie.html#Genie.load_resources","page":"Genie","title":"Genie.load_resources","text":"load_resources(root_dir::String = Genie.config.path_resources) :: Nothing\n\nRecursively adds subfolders of resources/ to LOAD_PATH.\n\n\n\n\n\n","category":"function"},{"location":"API/genie.html#Genie.load_helpers","page":"Genie","title":"Genie.load_helpers","text":"load_helpers(root_dir::String = Genie.config.path_helpers) :: Nothing\n\nRecursively adds subfolders of helpers/ to LOAD_PATH.\n\n\n\n\n\n","category":"function"},{"location":"API/genie.html#Genie.load_configurations","page":"Genie","title":"Genie.load_configurations","text":"load_configurations(root_dir::String = Genie.config.path_config; context::Union{Module,Nothing} = nothing) :: Nothing\n\nLoads (includes) the framework's configuration files into the app's module context. The files are set up with Revise to be automatically reloaded.\n\n\n\n\n\n","category":"function"},{"location":"API/genie.html#Genie.load_initializers","page":"Genie","title":"Genie.load_initializers","text":"load_initializers(root_dir::String = Genie.config.path_config; context::Union{Module,Nothing} = nothing) :: Nothing\n\nLoads (includes) the framework's initializers. The files are set up with Revise to be automatically reloaded.\n\n\n\n\n\n","category":"function"},{"location":"API/genie.html#Genie.load_plugins","page":"Genie","title":"Genie.load_plugins","text":"load_plugins(root_dir::String = Genie.config.path_plugins; context::Union{Module,Nothing} = nothing) :: Nothing\n\nLoads (includes) the framework's plugins initializers.\n\n\n\n\n\n","category":"function"},{"location":"API/genie.html#Genie.load_routes_definitions","page":"Genie","title":"Genie.load_routes_definitions","text":"load_routes_definitions(routes_file::String = Genie.ROUTES_FILE_NAME; context::Union{Module,Nothing} = nothing) :: Nothing\n\nLoads the routes file.\n\n\n\n\n\n","category":"function"},{"location":"API/genie.html#Genie.secret_token","page":"Genie","title":"Genie.secret_token","text":"secret_token(; context::Union{Module,Nothing} = nothing) :: String\n\nWrapper around /config/secrets.jl SECRET_TOKEN const. Sets up the secret token used in the app for encryption and salting. If there isn't a valid secrets file, a temporary secret token is generated for the current session only.\n\n\n\n\n\n","category":"function"},{"location":"API/genie.html#Genie.default_context","page":"Genie","title":"Genie.default_context","text":"default_context(context::Union{Module,Nothing})\n\nSets the module in which the code is loaded (the app's module)\n\n\n\n\n\n","category":"function"},{"location":"API/genie.html#Genie.load","page":"Genie","title":"Genie.load","text":"load(; context::Union{Module,Nothing} = nothing) :: Nothing\n\nMain entry point to loading a Genie app.\n\n\n\n\n\n","category":"function"},{"location":"API/genie.html#Genie.replprint","page":"Genie","title":"Genie.replprint","text":"replprint(output::String, terminal;\n                newline::Int = 0, clearline::Int = 1, color::Symbol = :white, bold::Bool = false, sleep_time::Float64 = 0.2,\n                prefix::String = \"\", prefix_color::Symbol = :green, prefix_bold::Bool = true)\n\nPrints app loading progress to the console.\n\n\n\n\n\n","category":"function"},{"location":"tutorials/9--Publishing_Your_Julia_Code_Online_With_Genie_Apps.html#Genieアプリに既存Juliaコードの追加","page":"Genieアプリに既存Juliaコードの追加","title":"Genieアプリに既存Juliaコードの追加","text":"","category":"section"},{"location":"tutorials/9--Publishing_Your_Julia_Code_Online_With_Genie_Apps.html","page":"Genieアプリに既存Juliaコードの追加","title":"Genieアプリに既存Juliaコードの追加","text":"既存のJuliaコード(モジュールとライブラリ)があり、アプリをゼロから構築せずにWeb上ですぐに公開したい場合、Genieはアプリにコードを追加したり読み込んだりする簡単な方法を提供します。","category":"page"},{"location":"tutorials/9--Publishing_Your_Julia_Code_Online_With_Genie_Apps.html#JuliaコードをGenieアプリに追加","page":"Genieアプリに既存Juliaコードの追加","title":"JuliaコードをGenieアプリに追加","text":"","category":"section"},{"location":"tutorials/9--Publishing_Your_Julia_Code_Online_With_Genie_Apps.html","page":"Genieアプリに既存Juliaコードの追加","title":"Genieアプリに既存Juliaコードの追加","text":"既存のJuliaアプリケーションまたはスタンドアローンのコードベースがあり、Genieアプリを介してWeb上で公開した場合、最もシンプルなのはファイルをlib/フォルダーに追加することです。lib/フォルダはGenieによって再帰的にLOAD_PATHに自動で追加されます。","category":"page"},{"location":"tutorials/9--Publishing_Your_Julia_Code_Online_With_Genie_Apps.html","page":"Genieアプリに既存Juliaコードの追加","title":"Genieアプリに既存Juliaコードの追加","text":"つまり、lib/フォルダ配下にフォルダを追加することもでき、それらが再帰的にLOAD_PATHに追加されるということです。ただし、これはGenieアプリが最初にロードされた時にのみ発生することに注意してください。したがって、アプリの起動後にネストされたフォルダを追加する場合は、アプリの再起動が必要になることもあります。","category":"page"},{"location":"tutorials/9--Publishing_Your_Julia_Code_Online_With_Genie_Apps.html","page":"Genieアプリに既存Juliaコードの追加","title":"Genieアプリに既存Juliaコードの追加","text":"","category":"page"},{"location":"tutorials/9--Publishing_Your_Julia_Code_Online_With_Genie_Apps.html","page":"Genieアプリに既存Juliaコードの追加","title":"Genieアプリに既存Juliaコードの追加","text":"注意喚起","category":"page"},{"location":"tutorials/9--Publishing_Your_Julia_Code_Online_With_Genie_Apps.html","page":"Genieアプリに既存Juliaコードの追加","title":"Genieアプリに既存Juliaコードの追加","text":"ほとんどの場合、Genieはデフォルトでlib/フォルダを生成しません。アプリのルートにlib/フォルダが存在しない場合は、自身で作成するようにしてください。","category":"page"},{"location":"tutorials/9--Publishing_Your_Julia_Code_Online_With_Genie_Apps.html","page":"Genieアプリに既存Juliaコードの追加","title":"Genieアプリに既存Juliaコードの追加","text":"julia> mkdir(\"lib\")","category":"page"},{"location":"tutorials/9--Publishing_Your_Julia_Code_Online_With_Genie_Apps.html","page":"Genieアプリに既存Juliaコードの追加","title":"Genieアプリに既存Juliaコードの追加","text":"","category":"page"},{"location":"tutorials/9--Publishing_Your_Julia_Code_Online_With_Genie_Apps.html","page":"Genieアプリに既存Juliaコードの追加","title":"Genieアプリに既存Juliaコードの追加","text":"一度コードがlib/フォルダに追加されると、アプリから利用可能になります。例として、lib/MyLib.jlを追加してみましょう。","category":"page"},{"location":"tutorials/9--Publishing_Your_Julia_Code_Online_With_Genie_Apps.html","page":"Genieアプリに既存Juliaコードの追加","title":"Genieアプリに既存Juliaコードの追加","text":"# lib/MyLib.jl\nmodule MyLib\n\nusing Dates\n\nfunction isitfriday()\n  Dates.dayofweek(Dates.now()) == Dates.Friday\nend\n\nend","category":"page"},{"location":"tutorials/9--Publishing_Your_Julia_Code_Online_With_Genie_Apps.html","page":"Genieアプリに既存Juliaコードの追加","title":"Genieアプリに既存Juliaコードの追加","text":"次に、routes.jlで上記ライブラリを参照し、以下のようにWeb上で公開してみましょう。","category":"page"},{"location":"tutorials/9--Publishing_Your_Julia_Code_Online_With_Genie_Apps.html","page":"Genieアプリに既存Juliaコードの追加","title":"Genieアプリに既存Juliaコードの追加","text":"# routes.jl\nusing Genie.Router\nusing MyLib\n\nroute(\"/friday\") do\n  MyLib.isitfriday() ? \"Yes, it's Friday!\" : \"No, not yet :(\"\nend","category":"page"},{"location":"tutorials/9--Publishing_Your_Julia_Code_Online_With_Genie_Apps.html","page":"Genieアプリに既存Juliaコードの追加","title":"Genieアプリに既存Juliaコードの追加","text":"Genieが既存のJuliaコードをロードするために探す場所を知り、アプリケーションを介してコードを利用可能とできるように、コードの置き場所としてlib/フォルダを利用してください。","category":"page"},{"location":"tutorials/8--Handling_File_Uploads.html#ファイルアップロードの操作","page":"ファイルアップロードの操作","title":"ファイルアップロードの操作","text":"","category":"section"},{"location":"tutorials/8--Handling_File_Uploads.html","page":"ファイルアップロードの操作","title":"ファイルアップロードの操作","text":"Genieはファイルのアップロード機能を内蔵しています。アップロードされたファイルのコレクション(POST変数として扱う)は、Requests.filespayloadメソッドを介してアクセスできます。または、Requests.filespayload(key)を利用することにより、与えられたファイルフォーム入力に対応するデータを取得できます。(keyはフォーム内のファイル入力の名前(name)です)","category":"page"},{"location":"tutorials/8--Handling_File_Uploads.html","page":"ファイルアップロードの操作","title":"ファイルアップロードの操作","text":"以下のスニペットでは、アプリのルート(root)に2つのルート(/)を構成します。初めのルートはGETリクエストを処理し、アップロード用のフォームを表示します。2つ目のルートはPOSTリクエストを処理し、アップロードを実施し、アップされたデータからファイルを生成し、それを保存、さらにファイルの統計情報を表示します。","category":"page"},{"location":"tutorials/8--Handling_File_Uploads.html#例","page":"ファイルアップロードの操作","title":"例","text":"","category":"section"},{"location":"tutorials/8--Handling_File_Uploads.html","page":"ファイルアップロードの操作","title":"ファイルアップロードの操作","text":"using Genie, Genie.Router, Genie.Renderer.Html, Genie.Requests\n\nform = \"\"\"\n<form action=\"/\" method=\"POST\" enctype=\"multipart/form-data\">\n  <input type=\"file\" name=\"yourfile\" /><br/>\n  <input type=\"submit\" value=\"Submit\" />\n</form>\n\"\"\"\n\nroute(\"/\") do\n  html(form)\nend\n\nroute(\"/\", method = POST) do\n  if infilespayload(:yourfile)\n    write(filespayload(:yourfile))\n\n    stat(filename(filespayload(:yourfile)))\n  else\n    \"No file uploaded\"\n  end\nend\n\nup()","category":"page"},{"location":"tutorials/8--Handling_File_Uploads.html","page":"ファイルアップロードの操作","title":"ファイルアップロードの操作","text":"ファイルをアップロードしてフォームを送信すると、アプリにファイルの統計情報が表示されます。","category":"page"},{"location":"API/util.html","page":"Util","title":"Util","text":"CurrentModule = Util","category":"page"},{"location":"API/util.html","page":"Util","title":"Util","text":"expand_nullable\nfile_name_without_extension\nwalk_dir\ntime_to_unixtimestamp","category":"page"},{"location":"API/util.html#Genie.Util.expand_nullable","page":"Util","title":"Genie.Util.expand_nullable","text":"expand_nullable{T}(value::Union{Nothing,T}, default::T) :: T\n\nReturns value if it is not nothing - otherwise default.\n\n\n\n\n\n","category":"function"},{"location":"API/util.html#Genie.Util.file_name_without_extension","page":"Util","title":"Genie.Util.file_name_without_extension","text":"file_name_without_extension(file_name, extension = \".jl\") :: String\n\nRemoves the file extension extension from file_name.\n\n\n\n\n\n","category":"function"},{"location":"API/util.html#Genie.Util.walk_dir","page":"Util","title":"Genie.Util.walk_dir","text":"function walk_dir(dir, paths = String[]; only_extensions = [\"jl\"], only_files = true, only_dirs = false) :: Vector{String}\n\nRecursively walks dir and produces non directories. If only_files, directories will be skipped. If only_dirs, files will be skipped.\n\n\n\n\n\n","category":"function"},{"location":"API/util.html#Genie.Util.time_to_unixtimestamp","page":"Util","title":"Genie.Util.time_to_unixtimestamp","text":"\n\n\n\n","category":"function"},{"location":"API/plugins.html","page":"Plugins","title":"Plugins","text":"CurrentModule = Plugins","category":"page"},{"location":"API/plugins.html","page":"Plugins","title":"Plugins","text":"recursive_copy\ncongrats\nscaffold\ninstall","category":"page"},{"location":"API/plugins.html#Genie.Plugins.recursive_copy","page":"Plugins","title":"Genie.Plugins.recursive_copy","text":"recursive_copy(path::String, dest::String; only_hidden = true, force = false)\n\nUtility function to copy plugin files from package dir to app.\n\n\n\n\n\n","category":"function"},{"location":"API/plugins.html#Genie.Plugins.congrats","page":"Plugins","title":"Genie.Plugins.congrats","text":"congrats()\n\nShows success message and instructions when scaffolding a plugin.\n\n\n\n\n\n","category":"function"},{"location":"API/plugins.html#Genie.Plugins.scaffold","page":"Plugins","title":"Genie.Plugins.scaffold","text":"scaffold(plugin_name::String, dest::String = \".\"; force = false)\n\nScaffolds a new plugin as a Julia project\n\n\n\n\n\n","category":"function"},{"location":"API/plugins.html#Genie.Plugins.install","page":"Plugins","title":"Genie.Plugins.install","text":"install(path::String, dest::String; force = false)\n\nUtility to allow users to install a plugin\n\n\n\n\n\n","category":"function"},{"location":"API/filetemplates.html","page":"FileTemplates","title":"FileTemplates","text":"CurrentModule = FileTemplates","category":"page"},{"location":"API/filetemplates.html","page":"FileTemplates","title":"FileTemplates","text":"newtask\nnewcontroller\nnewtest\nappmodule\ndockerfile","category":"page"},{"location":"API/filetemplates.html#Genie.FileTemplates.newtask","page":"FileTemplates","title":"Genie.FileTemplates.newtask","text":"newtask(module_name::String) :: String\n\nDefault content for a new Genie Toolbox task.\n\n\n\n\n\n","category":"function"},{"location":"API/filetemplates.html#Genie.FileTemplates.newcontroller","page":"FileTemplates","title":"Genie.FileTemplates.newcontroller","text":"newcontroller(controller_name::String) :: String\n\nDefault content for a new Genie controller.\n\n\n\n\n\n","category":"function"},{"location":"API/filetemplates.html#Genie.FileTemplates.newtest","page":"FileTemplates","title":"Genie.FileTemplates.newtest","text":"newtest(plural_name::String, singular_name::String) :: String\n\nDefault content for a new test file.\n\n\n\n\n\n","category":"function"},{"location":"API/filetemplates.html#Genie.FileTemplates.appmodule","page":"FileTemplates","title":"Genie.FileTemplates.appmodule","text":"appmodule(path::String)\n\nGenerates a custom app module when a new app is bootstrapped.\n\n\n\n\n\n","category":"function"},{"location":"API/filetemplates.html#Genie.FileTemplates.dockerfile","page":"FileTemplates","title":"Genie.FileTemplates.dockerfile","text":"dockerfile(; user::String = \"genie\", supervisor::Bool = false, nginx::Bool = false, env::String = \"dev\",\n                  filename::String = \"Dockerfile\", port::Int = 8000, dockerport::Int = 80, host::String = \"0.0.0.0\",\n                  websockets_port::Int = 8001, websockets_dockerport::Int = 8001)\n\nGenerates dockerfile for the Genie app.\n\n\n\n\n\n","category":"function"},{"location":"tutorials/3--Getting_Started.html#GenieでHello-world","page":"Genieを始めよう","title":"GenieでHello world","text":"","category":"section"},{"location":"tutorials/3--Getting_Started.html","page":"Genieを始めよう","title":"Genieを始めよう","text":"Genie Webアプリの構築をすぐに開始できるようにいくつかの例を挙げます。","category":"page"},{"location":"tutorials/3--Getting_Started.html#REPLまたはJupyterで対話的にGenieを動かす","page":"Genieを始めよう","title":"REPLまたはJupyterで対話的にGenieを動かす","text":"","category":"section"},{"location":"tutorials/3--Getting_Started.html","page":"Genieを始めよう","title":"Genieを始めよう","text":"もっとも簡単な使用例は、REPLでルーティング機能を構成し、Webサーバを起動することです。Webでコードを実行するのに必要なことはそれだけです。","category":"page"},{"location":"tutorials/3--Getting_Started.html#例","page":"Genieを始めよう","title":"例","text":"","category":"section"},{"location":"tutorials/3--Getting_Started.html","page":"Genieを始めよう","title":"Genieを始めよう","text":"julia> using Genie, Genie.Router\n\njulia> route(\"/hello\") do\n          \"Hello World\"\n       end\n\njulia> up()","category":"page"},{"location":"tutorials/3--Getting_Started.html","page":"Genieを始めよう","title":"Genieを始めよう","text":"route関数(Routerモジュールで利用可能)は、URL(\"/hello\")とクライアントにレスポンスを送るために自動的に呼び出されるJuila関数とのマッピングを定義します。今回の例の場合は、文字列\"Hello World\"を送り返します。 ","category":"page"},{"location":"tutorials/3--Getting_Started.html","page":"Genieを始めよう","title":"Genieを始めよう","text":"これがすべてです！アプリとルートを設定し、Webサーバを起動しました。お気に入りのブラウザを開き、http://127.0.0.1:8000/helloにアクセスして結果を確認します。","category":"page"},{"location":"tutorials/3--Getting_Started.html","page":"Genieを始めよう","title":"Genieを始めよう","text":"","category":"page"},{"location":"tutorials/3--Getting_Started.html","page":"Genieを始めよう","title":"Genieを始めよう","text":"注意喚起","category":"page"},{"location":"tutorials/3--Getting_Started.html","page":"Genieを始めよう","title":"Genieを始めよう","text":"JuliaのJIT(Just-In-Time)コンパイルに注意してください。関数は初めて呼び出されたとき自動的にコンパイルされます。この場合、関数はリクエストを処理するルートハンドラです。このことにより、コンパイル時間も含まれるため最初の応答が遅くなります。しかし、一度関数がコンパイルされてしまえば、そのあとのすべてのリクエストに対して、非常に高速になります！","category":"page"},{"location":"tutorials/3--Getting_Started.html","page":"Genieを始めよう","title":"Genieを始めよう","text":"","category":"page"},{"location":"tutorials/3--Getting_Started.html#シンプルなGenieスクリプトの開発","page":"Genieを始めよう","title":"シンプルなGenieスクリプトの開発","text":"","category":"section"},{"location":"tutorials/3--Getting_Started.html","page":"Genieを始めよう","title":"Genieを始めよう","text":"Genieは、Juliaでマイクロサービスを構築するときなど、カスタムスクリプトでも使用できます。簡単なHello Worldマイクロサービスを作成しましょう。","category":"page"},{"location":"tutorials/3--Getting_Started.html","page":"Genieを始めよう","title":"Genieを始めよう","text":"コードを書く新しいファイルを作成することから始めます。それをgeniews.jlとしましょう。","category":"page"},{"location":"tutorials/3--Getting_Started.html","page":"Genieを始めよう","title":"Genieを始めよう","text":"julia> touch(\"geniews.jl\")","category":"page"},{"location":"tutorials/3--Getting_Started.html","page":"Genieを始めよう","title":"Genieを始めよう","text":"次にgeniews.jlをエディタで開きます。","category":"page"},{"location":"tutorials/3--Getting_Started.html","page":"Genieを始めよう","title":"Genieを始めよう","text":"julia> edit(\"geniews.jl\")","category":"page"},{"location":"tutorials/3--Getting_Started.html","page":"Genieを始めよう","title":"Genieを始めよう","text":"以下のコードを追加します。","category":"page"},{"location":"tutorials/3--Getting_Started.html","page":"Genieを始めよう","title":"Genieを始めよう","text":"using Genie, Genie.Router\nusing Genie.Renderer, Genie.Renderer.Html, Genie.Renderer.Json\n\nroute(\"/hello.html\") do\n  html(\"Hello World\")\nend\n\nroute(\"/hello.json\") do\n  json(\"Hello World\")\nend\n\nroute(\"/hello.txt\") do\n   respond(\"Hello World\", :text)\nend\n\nup(8001, async = false)","category":"page"},{"location":"tutorials/3--Getting_Started.html","page":"Genieを始めよう","title":"Genieを始めよう","text":"まず2つのルートを定義し、htmlおよびjsonレンダリング関数(Renderer.HtmlモジュールやRenderer.Jsonモジュールで利用可能)を使用しました。こららの関数は、正しい形式とドキュメントタイプ(正しいMIME)を利用することでデータを出力する役割を果たします。今回の場合は、hello.htmlのHTMLデータとhello.jsonのJSONデータです。","category":"page"},{"location":"tutorials/3--Getting_Started.html","page":"Genieを始めよう","title":"Genieを始めよう","text":"3番目のrouteはテキスト形式のレスポンスを提供します。Genieはtext/plain形式のレスポンスを送信するための特別な方法を提供していないため、一般的なrespond関数を利用し、望むMIME形式を指定します。今回の場合は、text / plainに対応する：textです。他に利用可能なMIME形式のショートカットは、:xml、:markdown、:javascriptです。他の指定については、文字列でのフルMIME形式の指定ができます。(例：\"text/csv\")","category":"page"},{"location":"tutorials/3--Getting_Started.html","page":"Genieを始めよう","title":"Genieを始めよう","text":"up関数は8001ポートでWebサーバを起動します。この時、非常に重要なのは、async = falseを引数で渡すことにより、サーバーを同期的(つまり、スクリプト実行のブロッキング操作)に開始できるように命令していることです。このようにして、スクリプトの実行を維持しています。そうしないと、スクリプトの最後で通常終了し、サーバが強制終了します。","category":"page"},{"location":"tutorials/3--Getting_Started.html","page":"Genieを始めよう","title":"Genieを始めよう","text":"スクリプトを起動するには、$ julia geniews.jlを実行します。","category":"page"},{"location":"tutorials/3--Getting_Started.html#バッテリー同梱(標準機能の充実性)","page":"Genieを始めよう","title":"バッテリー同梱(標準機能の充実性)","text":"","category":"section"},{"location":"tutorials/3--Getting_Started.html","page":"Genieを始めよう","title":"Genieを始めよう","text":"Genieでは豊富な機能のセットがすぐに利用できるようになっています。(レンダリングエンジンとルーティングエンジンの動作はすでに見てきたとおりです。)ただし、例えば、1行のコードで(ファイルやコンソールへの)ログを簡単にトリガーしたり、さらに数行で強力なキャッシュを有効にしたりできます。","category":"page"},{"location":"tutorials/3--Getting_Started.html","page":"Genieを始めよう","title":"Genieを始めよう","text":"アプリはすでに「404 Page Not Found」や「500 Internal Error」レスポンスを処理しています。もしhttp://127.0.0.1:8001/not_hereのようにアプリで処理されないURLにアクセスしようとすると、Genieのデフォルト404ページが表示されます。デフォルトのエラーページはカスタムページで上書きすることができます。手順はあとで示します。","category":"page"},{"location":"API/renderer.html","page":"Renderer","title":"Renderer","text":"CurrentModule = Renderer","category":"page"},{"location":"API/renderer.html","page":"Renderer","title":"Renderer","text":"WebRenderable\nrender\nredirect\nhasrequested\nrespond\nregistervars\ninjectvars\nview_file_info\nvars_signature\nfunction_name\nm_name\nbuild_is_stale\nbuild_module\npreparebuilds\npurgebuilds\nchangebuilds\n@vars\nset_negotiated_content\nnegotiate_content","category":"page"},{"location":"API/renderer.html#Genie.Renderer.WebRenderable","page":"Renderer","title":"Genie.Renderer.WebRenderable","text":"mutable struct WebRenderable\n\nRepresents an object that can be rendered on the web as a HTTP Response\n\n\n\n\n\n","category":"type"},{"location":"API/renderer.html#Genie.Renderer.render","page":"Renderer","title":"Genie.Renderer.render","text":"render\n\nAbstract function that needs to be specialized by individual renderers.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer.html#Genie.Renderer.redirect","page":"Renderer","title":"Genie.Renderer.redirect","text":"Sets redirect headers and prepares the Response.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer.html#Genie.Renderer.hasrequested","page":"Renderer","title":"Genie.Renderer.hasrequested","text":"hasrequested(content_type::Symbol) :: Bool\n\nChecks wheter or not the requested content type matches content_type.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer.html#Genie.Renderer.respond","page":"Renderer","title":"Genie.Renderer.respond","text":"Constructs a Response corresponding to the Content-Type of the request.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer.html#Genie.Renderer.registervars","page":"Renderer","title":"Genie.Renderer.registervars","text":"registervars(vars...) :: Nothing\n\nLoads the rendering vars into the task's scope\n\n\n\n\n\n","category":"function"},{"location":"API/renderer.html#Genie.Renderer.injectvars","page":"Renderer","title":"Genie.Renderer.injectvars","text":"injectvars() :: String\n\nSets up variables passed into the view, making them available in the generated view function.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer.html#Genie.Renderer.view_file_info","page":"Renderer","title":"Genie.Renderer.view_file_info","text":"view_file_info(path::String, supported_extensions::Vector{String}) :: Tuple{String,String}\n\nExtracts path and extension info about a file\n\n\n\n\n\n","category":"function"},{"location":"API/renderer.html#Genie.Renderer.vars_signature","page":"Renderer","title":"Genie.Renderer.vars_signature","text":"vars_signature() :: String\n\nCollects the names of the view vars in order to create a unique hash/salt to identify compiled views with different vars.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer.html#Genie.Renderer.function_name","page":"Renderer","title":"Genie.Renderer.function_name","text":"function_name(file_path::String)\n\nGenerates function name for generated HTML+Julia views.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer.html#Genie.Renderer.m_name","page":"Renderer","title":"Genie.Renderer.m_name","text":"m_name(file_path::String)\n\nGenerates module name for generated HTML+Julia views.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer.html#Genie.Renderer.build_is_stale","page":"Renderer","title":"Genie.Renderer.build_is_stale","text":"build_is_stale(file_path::String, build_path::String) :: Bool\n\nChecks if the view template has been changed since the last time the template was compiled.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer.html#Genie.Renderer.build_module","page":"Renderer","title":"Genie.Renderer.build_module","text":"build_module(content::String, path::String, mod_name::String) :: String\n\nPersists compiled Julia view data to file and returns the path\n\n\n\n\n\n","category":"function"},{"location":"API/renderer.html#Genie.Renderer.preparebuilds","page":"Renderer","title":"Genie.Renderer.preparebuilds","text":"preparebuilds() :: Bool\n\nSets up the build folder and the build module file for generating the compiled views.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer.html#Genie.Renderer.purgebuilds","page":"Renderer","title":"Genie.Renderer.purgebuilds","text":"purgebuilds(subfolder = BUILD_NAME) :: Bool\n\nRemoves the views builds folders with all the generated views.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer.html#Genie.Renderer.changebuilds","page":"Renderer","title":"Genie.Renderer.changebuilds","text":"changebuilds(subfolder = BUILD_NAME) :: Bool\n\nChanges/creates a new builds folder.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer.html#Genie.Renderer.@vars","page":"Renderer","title":"Genie.Renderer.@vars","text":"@vars\n\nUtility macro for accessing view vars\n\n\n\n\n\n@vars(key)\n\nUtility macro for accessing view vars stored under key\n\n\n\n\n\n@vars(key, value)\n\nUtility macro for setting a new view var, as key => value\n\n\n\n\n\n","category":"macro"},{"location":"API/renderer.html#Genie.Renderer.set_negotiated_content","page":"Renderer","title":"Genie.Renderer.set_negotiated_content","text":"set_negotiated_content(req::HTTP.Request, res::HTTP.Response, params::Dict{Symbol,Any})\n\nConfigures the request, response, and params response content type based on the request and defaults.\n\n\n\n\n\n","category":"function"},{"location":"API/renderer.html#Genie.Renderer.negotiate_content","page":"Renderer","title":"Genie.Renderer.negotiate_content","text":"negotiate_content(req::Request, res::Response, params::Params) :: Response\n\nComputes the content-type of the Response, based on the information in the Request.\n\n\n\n\n\n","category":"function"},{"location":"API/commands.html","page":"Commands","title":"Commands","text":"CurrentModule = Commands","category":"page"},{"location":"API/commands.html","page":"Commands","title":"Commands","text":"execute\nparse_commandline_args\ncalled_command","category":"page"},{"location":"API/commands.html#Genie.Commands.execute","page":"Commands","title":"Genie.Commands.execute","text":"execute(config::Settings) :: Nothing\n\nRuns the requested Genie app command, based on the args passed to the script.\n\n\n\n\n\n","category":"function"},{"location":"API/commands.html#Genie.Commands.parse_commandline_args","page":"Commands","title":"Genie.Commands.parse_commandline_args","text":"parse_commandline_args() :: Dict{String,Any}\n\nExtracts the command line args passed into the app and returns them as a Dict, possibly setting up defaults. Also, it is used by the ArgParse module to populate the command line help for the app -h.\n\n\n\n\n\n","category":"function"},{"location":"API/commands.html#Genie.Commands.called_command","page":"Commands","title":"Genie.Commands.called_command","text":"called_command(args::Dict, key::String) :: Bool\n\nChecks whether or not a certain command was invoked by looking at the command line args.\n\n\n\n\n\n","category":"function"},{"location":"API/assets.html","page":"Assets","title":"Assets","text":"CurrentModule = Assets","category":"page"},{"location":"API/assets.html","page":"Assets","title":"Assets","text":"include_asset\ncss_asset\njs_asset\njs_settings\nembedded\nchannels\nchannels_script\nchannels_support\nfavicon_support","category":"page"},{"location":"API/assets.html#Genie.Assets.include_asset","page":"Assets","title":"Genie.Assets.include_asset","text":"include_asset(asset_type::Union{String,Symbol}, file_name::Union{String,Symbol};\n              fingerprinted::Bool = Genie.config.assets_fingerprinted) :: String\n\nReturns the path to an asset. asset_type can be one of :js, :css. The file_name should not include the extension. fingerprinted is a Bool indicating if a fingerprint (unique hash) should be added to the asset's filename (used in production to invalidate caches).\n\n\n\n\n\n","category":"function"},{"location":"API/assets.html#Genie.Assets.css_asset","page":"Assets","title":"Genie.Assets.css_asset","text":"css_asset(file_name::String; fingerprinted::Bool = Genie.config.assets_fingerprinted) :: String\n\nPath to a css asset. The file_name should not include the extension. fingerprinted is a Bool indicating if a fingerprint (unique hash) should be added to the asset's filename (used in production to invalidate caches).\n\n\n\n\n\n","category":"function"},{"location":"API/assets.html#Genie.Assets.js_asset","page":"Assets","title":"Genie.Assets.js_asset","text":"js_asset(file_name::String; fingerprinted::Bool = Genie.config.assets_fingerprinted) :: String\n\nPath to a js asset. file_name should not include the extension. fingerprinted is a Bool indicating if a fingerprint (unique hash) should be added to the asset's filename (used in production to invalidate caches).\n\n\n\n\n\n","category":"function"},{"location":"API/assets.html#Genie.Assets.js_settings","page":"Assets","title":"Genie.Assets.js_settings","text":"js_settings() :: string\n\nSets up a window.Genie.Settings JavaScript object which exposes relevant Genie app settings from Genie.config\n\n\n\n\n\n","category":"function"},{"location":"API/assets.html#Genie.Assets.embedded","page":"Assets","title":"Genie.Assets.embedded","text":"embeded(path::String) :: String\n\nReads and outputs the file at path within Genie's root package dir\n\n\n\n\n\n","category":"function"},{"location":"API/assets.html#Genie.Assets.channels","page":"Assets","title":"Genie.Assets.channels","text":"channels() :: String\n\nOutputs the channels.js file included with the Genie package\n\n\n\n\n\n","category":"function"},{"location":"API/assets.html#Genie.Assets.channels_script","page":"Assets","title":"Genie.Assets.channels_script","text":"channels_script() :: String\n\nOutputs the channels JavaScript content within <script>...</script> tags, for embedding into the page.\n\n\n\n\n\n","category":"function"},{"location":"API/assets.html#Genie.Assets.channels_support","page":"Assets","title":"Genie.Assets.channels_support","text":"channels_support() :: String\n\nProvides full web channels support, setting up routes for loading support JS files, web sockets subscription and returning the <script> tag for including the linked JS file into the web page.\n\n\n\n\n\n","category":"function"},{"location":"API/assets.html#Genie.Assets.favicon_support","page":"Assets","title":"Genie.Assets.favicon_support","text":"favicon_support() :: String\n\nOutputs the <link> tag for referencing the favicon file embedded with Genie.\n\n\n\n\n\n","category":"function"},{"location":"guides/Simple_API_backend.html#シンプルなAPIバックエンドの開発","page":"APIバックエンドの開発","title":"シンプルなAPIバックエンドの開発","text":"","category":"section"},{"location":"guides/Simple_API_backend.html","page":"APIバックエンドの開発","title":"APIバックエンドの開発","text":"GenieによりREST APIバックエンドを素早くとても簡単にセットアップすることができます。必要なものは、数行のコードですべてです。","category":"page"},{"location":"guides/Simple_API_backend.html","page":"APIバックエンドの開発","title":"APIバックエンドの開発","text":"using Genie\nimport Genie.Router: route\nimport Genie.Renderer.Json: json\n\nGenie.config.run_as_server = true\n\nroute(\"/\") do\n  (:message => \"Hi there!\") |> json\nend\n\nGenie.startup()","category":"page"},{"location":"guides/Simple_API_backend.html","page":"APIバックエンドの開発","title":"APIバックエンドの開発","text":"ここで重要になるのは、Genie.config.run_as_server = trueです。これはサーバを同期的に起動するため、startup()関数は返りません。 このエンドポイントはコマンドラインから直接実行できます。rest.jlファイルにコードを保存して実行します。","category":"page"},{"location":"guides/Simple_API_backend.html","page":"APIバックエンドの開発","title":"APIバックエンドの開発","text":"$ julia rest.jl","category":"page"},{"location":"guides/Simple_API_backend.html#JSONペイロードの受け入れ","page":"APIバックエンドの開発","title":"JSONペイロードの受け入れ","text":"","category":"section"},{"location":"guides/Simple_API_backend.html","page":"APIバックエンドの開発","title":"APIバックエンドの開発","text":"APIを公開するとき共通の要件の一つはPOSTペイロードを受け入れることです。つまり、通常JSONエンコードされたオブジェクトであるリクエストボディと一緒にPOSTを介してリクエストを送信します。次のようなechoサービスを構築してみます。","category":"page"},{"location":"guides/Simple_API_backend.html","page":"APIバックエンドの開発","title":"APIバックエンドの開発","text":"using Genie, Genie.Router, Genie.Renderer.Json, Genie.Requests\nusing HTTP\n\nroute(\"/echo\", method = POST) do\n  message = jsonpayload()\n  (:echo => (message[\"message\"] * \" \") ^ message[\"repeat\"]) |> json\nend\n\nroute(\"/send\") do\n  response = HTTP.request(\"POST\", \"http://localhost:8000/echo\", [(\"Content-Type\", \"application/json\")], \"\"\"{\"message\":\"hello\", \"repeat\":3}\"\"\")\n\n  response.body |> String |> json\nend\n\nGenie.startup(async = false)","category":"page"},{"location":"guides/Simple_API_backend.html","page":"APIバックエンドの開発","title":"APIバックエンドの開発","text":"ここでは2つのルート/sendと/echoを定義しています。sendルートは/echoへのPOSTを介したHTTPリクエストを作成し、2つの値messageとrepeatとともにJSONペイロードを送信します。 /echoルートでは、Requests.jsonpayload()関数を利用し、JSONペイロードを取得し、JSONオブジェクトから値を抽出し、message値をrepeat値で指定された数分だけ繰り返し出力します。","category":"page"},{"location":"guides/Simple_API_backend.html","page":"APIバックエンドの開発","title":"APIバックエンドの開発","text":"コードを実行すると、以下のように出力されます。","category":"page"},{"location":"guides/Simple_API_backend.html","page":"APIバックエンドの開発","title":"APIバックエンドの開発","text":"{\n  echo: \"hello hello hello \"\n}","category":"page"},{"location":"guides/Simple_API_backend.html","page":"APIバックエンドの開発","title":"APIバックエンドの開発","text":"ペイロードに無効なJSONが含まれている場合は、jsonpayloadはnothingに設定されます。Requests.rawpayload()関数を利用することで生ペイロードに引き続きアクセスすることはできます。 例えばリクエスト/ペイロードの型がJSONでない場合でも、rawpayloadを使用することができます。","category":"page"},{"location":"API/generator.html","page":"Generator","title":"Generator","text":"CurrentModule = Generator","category":"page"},{"location":"API/generator.html","page":"Generator","title":"Generator","text":"newapp\nnewapp_webservice\nnewapp_mvc\nnewapp_fullstack\nnewcontroller\nnewresource\nsetup_resource_path\nwrite_resource_file\nsetup_windows_bin_files\nsetup_nix_bin_files\nresource_does_not_exist\ncontroller_file_name\nsecret_token\nwrite_secrets_file\nfullstack_app\nmicrostack_app\nmvc_support\ndb_support\nwrite_app_custom_files\ninstall_app_dependencies\nautostart_app\nremove_fingerprint_initializer\nremove_searchlight_initializer","category":"page"},{"location":"API/generator.html#Genie.Generator.newapp","page":"Generator","title":"Genie.Generator.newapp","text":"newapp(app_name::String; autostart::Bool = true, fullstack::Bool = false, dbsupport::Bool = false, mvcsupport::Bool = false) :: Nothing\n\nScaffolds a new Genie app, setting up the file structure indicated by the various arguments.\n\nArguments\n\npath::String: the name of the app and the path where to bootstrap it. Spaces not allowed\nautostart::Bool: automatically start the app once the file structure is created\nfullstack::Bool: the type of app to be bootstrapped. The fullstack app includes MVC structure, DB connection code, and asset pipeline files.\ndbsupport::Bool: bootstrap the files needed for DB connection setup via the SearchLight ORM\nmvcsupport::Bool: adds the files used for HTML+Julia view templates rendering and working with resources\n\nExamples\n\njulia> Genie.newapp(\"MyGenieApp\")\n2019-08-06 16:54:15:INFO:Main: Done! New app created at MyGenieApp\n2019-08-06 16:54:15:DEBUG:Main: Changing active directory to MyGenieApp\n2019-08-06 16:54:15:DEBUG:Main: Installing app dependencies\n Resolving package versions...\n  Updating `~/Dropbox/Projects/GenieTests/MyGenieApp/Project.toml`\n  [c43c736e] + Genie v0.10.1\n  Updating `~/Dropbox/Projects/GenieTests/MyGenieApp/Manifest.toml`\n\n2019-08-06 16:54:27:INFO:Main: Starting your brand new Genie app - hang tight!\n _____         _\n|   __|___ ___|_|___\n|  |  | -_|   | | -_|\n|_____|___|_|_|_|___|\n\n┌ Info:\n│ Starting Genie in >> DEV << mode\n└\n[ Info: Logging to file at MyGenieApp/log/dev.log\n[ Info: Ready!\n2019-08-06 16:54:32:DEBUG:Main: Web Server starting at http://127.0.0.1:8000\n2019-08-06 16:54:32:DEBUG:Main: Web Server running at http://127.0.0.1:8000\n\n\n\n\n\n","category":"function"},{"location":"API/generator.html#Genie.Generator.newapp_webservice","page":"Generator","title":"Genie.Generator.newapp_webservice","text":"newapp_webservice(path::String = \".\"; autostart::Bool = true, dbsupport::Bool = false) :: Nothing\n\nTemplate for scaffolding a new Genie app suitable for nimble web services.\n\nArguments\n\npath::String: the name of the app and the path where to bootstrap it\nautostart::Bool: automatically start the app once the file structure is created\ndbsupport::Bool: bootstrap the files needed for DB connection setup via the SearchLight ORM\n\n\n\n\n\n","category":"function"},{"location":"API/generator.html#Genie.Generator.newapp_mvc","page":"Generator","title":"Genie.Generator.newapp_mvc","text":"newapp_mvc(path::String = \".\"; autostart::Bool = true) :: Nothing\n\nTemplate for scaffolding a new Genie app suitable for MVC web applications (includes MVC structure and DB support).\n\nArguments\n\npath::String: the name of the app and the path where to bootstrap it\nautostart::Bool: automatically start the app once the file structure is created\n\n\n\n\n\n","category":"function"},{"location":"API/generator.html#Genie.Generator.newapp_fullstack","page":"Generator","title":"Genie.Generator.newapp_fullstack","text":"newapp_fullstack(path::String = \".\"; autostart::Bool = true) :: Nothing\n\nTemplate for scaffolding a new Genie app suitable for full stack web applications (includes MVC structure, DB support, and frontend asset pipeline).\n\nArguments\n\npath::String: the name of the app and the path where to bootstrap it\nautostart::Bool: automatically start the app once the file structure is created\n\n\n\n\n\n","category":"function"},{"location":"API/generator.html#Genie.Generator.newcontroller","page":"Generator","title":"Genie.Generator.newcontroller","text":"newcontroller(resource_name::String) :: Nothing\n\nGenerates a new Genie controller file and persists it to the resources folder.\n\n\n\n\n\n","category":"function"},{"location":"API/generator.html#Genie.Generator.newresource","page":"Generator","title":"Genie.Generator.newresource","text":"newresource(resource_name::String, config::Settings) :: Nothing\n\nGenerates all the files associated with a new resource and persists them to the resources folder.\n\n\n\n\n\n","category":"function"},{"location":"API/generator.html#Genie.Generator.setup_resource_path","page":"Generator","title":"Genie.Generator.setup_resource_path","text":"setup_resource_path(resource_name::String) :: String\n\nComputes and creates the directories structure needed to persist a new resource.\n\n\n\n\n\n","category":"function"},{"location":"API/generator.html#Genie.Generator.write_resource_file","page":"Generator","title":"Genie.Generator.write_resource_file","text":"write_resource_file(resource_path::String, file_name::String, resource_name::String) :: Bool\n\nGenerates all resouce files and persists them to disk.\n\n\n\n\n\n","category":"function"},{"location":"API/generator.html#Genie.Generator.setup_windows_bin_files","page":"Generator","title":"Genie.Generator.setup_windows_bin_files","text":"setup_windows_bin_files(path::String = \".\") :: Nothing\n\nCreates the bin/server and bin/repl binaries for Windows\n\n\n\n\n\n","category":"function"},{"location":"API/generator.html#Genie.Generator.setup_nix_bin_files","page":"Generator","title":"Genie.Generator.setup_nix_bin_files","text":"setup_nix_bin_files(app_path::String = \".\") :: Nothing\n\nCreates the bin/server and bin/repl binaries for *nix systems\n\n\n\n\n\n","category":"function"},{"location":"API/generator.html#Genie.Generator.resource_does_not_exist","page":"Generator","title":"Genie.Generator.resource_does_not_exist","text":"resource_does_not_exist(resource_path::String, file_name::String) :: Bool\n\nReturns true if the indicated resources does not exists - false otherwise.\n\n\n\n\n\n","category":"function"},{"location":"API/generator.html#Genie.Generator.controller_file_name","page":"Generator","title":"Genie.Generator.controller_file_name","text":"controller_file_name(resource_name::Union{String,Symbol})\n\nComputes the controller file name based on the resource name.\n\n\n\n\n\n","category":"function"},{"location":"API/generator.html#Genie.Generator.secret_token","page":"Generator","title":"Genie.Generator.secret_token","text":"secret_token() :: String\n\nGenerates a random secret token to be used for configuring the SECRET_TOKEN const.\n\n\n\n\n\n","category":"function"},{"location":"API/generator.html#Genie.Generator.write_secrets_file","page":"Generator","title":"Genie.Generator.write_secrets_file","text":"Generates a valid secrets.jl file with a random SECRET_TOKEN.\n\n\n\n\n\n","category":"function"},{"location":"API/generator.html#Genie.Generator.fullstack_app","page":"Generator","title":"Genie.Generator.fullstack_app","text":"fullstack_app(app_path::String = \".\") :: Nothing\n\nWrites the files necessary to create a full stack Genie app.\n\n\n\n\n\n","category":"function"},{"location":"API/generator.html#Genie.Generator.microstack_app","page":"Generator","title":"Genie.Generator.microstack_app","text":"microstack_app(app_path::String = \".\") :: Nothing\n\nWrites the file necessary to create a microstack app.\n\n\n\n\n\n","category":"function"},{"location":"API/generator.html#Genie.Generator.mvc_support","page":"Generator","title":"Genie.Generator.mvc_support","text":"mvc_support(app_path::String = \".\") :: Nothing\n\nWrites the files used for rendering resources using the MVC stack and the Genie templating system.\n\n\n\n\n\n","category":"function"},{"location":"API/generator.html#Genie.Generator.db_support","page":"Generator","title":"Genie.Generator.db_support","text":"db_support(app_path::String = \".\") :: Nothing\n\nWrites files used for interacting with the SearchLight ORM.\n\n\n\n\n\n","category":"function"},{"location":"API/generator.html#Genie.Generator.write_app_custom_files","page":"Generator","title":"Genie.Generator.write_app_custom_files","text":"write_app_custom_files(path::String, app_path::String) :: Nothing\n\nWrites the Genie app main module file.\n\n\n\n\n\n","category":"function"},{"location":"API/generator.html#Genie.Generator.install_app_dependencies","page":"Generator","title":"Genie.Generator.install_app_dependencies","text":"install_app_dependencies(app_path::String = \".\") :: Nothing\n\nInstalls the application's dependencies using Julia's Pkg\n\n\n\n\n\n","category":"function"},{"location":"API/generator.html#Genie.Generator.autostart_app","page":"Generator","title":"Genie.Generator.autostart_app","text":"autostart_app(path::String = \".\"; autostart::Bool = true) :: Nothing\n\nIf autostart is true, the newly generated Genie app will be automatically started.\n\n\n\n\n\n","category":"function"},{"location":"API/generator.html#Genie.Generator.remove_fingerprint_initializer","page":"Generator","title":"Genie.Generator.remove_fingerprint_initializer","text":"remove_fingerprint_initializer(app_path::String = \".\") :: Nothing\n\nRemoves the asset fingerprint initializers if it's not used\n\n\n\n\n\n","category":"function"},{"location":"API/generator.html#Genie.Generator.remove_searchlight_initializer","page":"Generator","title":"Genie.Generator.remove_searchlight_initializer","text":"remove_searchlight_initializer(app_path::String = \".\") :: Nothing\n\nRemoves the SearchLight initializer file if it's unused\n\n\n\n\n\n","category":"function"},{"location":"guides/Frontend_assets.html#フロントエンドアセット","page":"フロントエンドアセット","title":"フロントエンドアセット","text":"","category":"section"},{"location":"guides/Frontend_assets.html","page":"フロントエンドアセット","title":"フロントエンドアセット","text":"GenieはYarnやWebpackを利用することで、フロントエンドアセットをコンパイルし、提供します。実際、設定をほぼしない状態(out-of-the-box)で、Webpack4の最も人気のある機能を利用する設定ファイルが提供され、Bootstrap4とJQueryも同様にプリインストールされています。それによりWebアプリに集中することができ、べつの抽象化レイヤーを取り除く事ができます。","category":"page"},{"location":"guides/Frontend_assets.html","page":"フロントエンドアセット","title":"フロントエンドアセット","text":"まとめると以下の通りです。","category":"page"},{"location":"guides/Frontend_assets.html","page":"フロントエンドアセット","title":"フロントエンドアセット","text":"製品版ではファイルを最小化し、CSSをJavaScriptから分離します\n開発はノードポート3000でwebpack-dev-serverを利用します(組み込み型のSocketサーバ)に依存\nサポートされたファイル形式：css, scss, sass, js, coffee\n出力はGenieアプリのpublic/distに保存されます。\nBootstrap4とjQueryで事前に設定済\nバンドリングをサポート(チャンクと非同期読み込み)","category":"page"},{"location":"guides/Frontend_assets.html#要件","page":"フロントエンドアセット","title":"要件","text":"","category":"section"},{"location":"guides/Frontend_assets.html","page":"フロントエンドアセット","title":"フロントエンドアセット","text":"Genieアプリでアセットパイプラインをインストールするには以下のようにfullstack = trueオプションを利用してアプリを作成する必要があります。","category":"page"},{"location":"guides/Frontend_assets.html","page":"フロントエンドアセット","title":"フロントエンドアセット","text":"julia> Genie.newapp(\"MyApp\", fullstack = true)","category":"page"},{"location":"guides/Frontend_assets.html","page":"フロントエンドアセット","title":"フロントエンドアセット","text":"システムにNodeJSとYarnがインストールされている必要があります。LinuxやMacOSを使用している場合は、パッケージマネージャを利用すると簡単にインストールできます。Windowsの場合は、NodeJSプロジェクトのWebページから関連するインストーラをダウンロードしてください。","category":"page"},{"location":"guides/Frontend_assets.html#依存関係のインストール","page":"フロントエンドアセット","title":"依存関係のインストール","text":"","category":"section"},{"location":"guides/Frontend_assets.html","page":"フロントエンドアセット","title":"フロントエンドアセット","text":"アプリディレクトリで以下を実行します。","category":"page"},{"location":"guides/Frontend_assets.html","page":"フロントエンドアセット","title":"フロントエンドアセット","text":"yarn install","category":"page"},{"location":"guides/Frontend_assets.html#開発モード","page":"フロントエンドアセット","title":"開発モード","text":"","category":"section"},{"location":"guides/Frontend_assets.html","page":"フロントエンドアセット","title":"フロントエンドアセット","text":"アプリディレクトリで以下を実行します。","category":"page"},{"location":"guides/Frontend_assets.html","page":"フロントエンドアセット","title":"フロントエンドアセット","text":"yarn run develop","category":"page"},{"location":"guides/Frontend_assets.html","page":"フロントエンドアセット","title":"フロントエンドアセット","text":"静的ファイルはポート3000のNodeサーバのWebSocketを介して提供されます。ソースマップも同様で、簡単にデバッグができます。","category":"page"},{"location":"guides/Frontend_assets.html","page":"フロントエンドアセット","title":"フロントエンドアセット","text":"静的ファイルへの変更は、自動的にブラウザに送られます。React/Vueを利用する場合、ページの状態は処理中に保存されます。ページを再コンパイルおよび再リロードすることはなく、時間を節約できます。","category":"page"},{"location":"guides/Frontend_assets.html","page":"フロントエンドアセット","title":"フロントエンドアセット","text":"Genieはデフォルトでは開発モードで動作します。したがって、app/assets/js/application.jsをメインのエントリポイントとして利用する場合、追加の設定は必要ありません。","category":"page"},{"location":"guides/Frontend_assets.html#本番モード","page":"フロントエンドアセット","title":"本番モード","text":"","category":"section"},{"location":"guides/Frontend_assets.html","page":"フロントエンドアセット","title":"フロントエンドアセット","text":"アプリディレクトリで以下を実行します。","category":"page"},{"location":"guides/Frontend_assets.html","page":"フロントエンドアセット","title":"フロントエンドアセット","text":"yarn run build","category":"page"},{"location":"guides/Frontend_assets.html","page":"フロントエンドアセット","title":"フロントエンドアセット","text":"上記は、アプリのpublic/distディレクトリにソースマップなしでミニファイされたファイルを出力します。","category":"page"},{"location":"guides/Frontend_assets.html","page":"フロントエンドアセット","title":"フロントエンドアセット","text":"静的アセットを提供するためには、Genieを本番モードで実行してください。","category":"page"},{"location":"guides/Frontend_assets.html#考慮事項","page":"フロントエンドアセット","title":"考慮事項","text":"","category":"section"},{"location":"guides/Frontend_assets.html","page":"フロントエンドアセット","title":"フロントエンドアセット","text":"Webpackバンドルを最大限活用するために、JavaScriptのrequire呼び出しを介してすべての静的ファイル(画像やフォント)を提供することを推奨します。Webpackにバンドルを最適化させます。","category":"page"},{"location":"guides/Frontend_assets.html","page":"フロントエンドアセット","title":"フロントエンドアセット","text":"遅延読み込みもサポートしています。つまり、ブラウザが必要になったときリソースをフェッチするため、ページの読み込みスピードが向上します。例として、ボタンを介したチャット統合を考えてみてください。以下のデモコードでは、チャット機能はユーザがボタンを1度クリックしたときにのみブラウザによってフェッチされます。","category":"page"},{"location":"guides/Frontend_assets.html","page":"フロントエンドアセット","title":"フロントエンドアセット","text":"button.onclick = () => {\n  import(\"./chat\").then(chat => {\n    chat.init()\n  })\n}","category":"page"},{"location":"guides/Frontend_assets.html#最小のBootstrap統合","page":"フロントエンドアセット","title":"最小のBootstrap統合","text":"","category":"section"},{"location":"guides/Frontend_assets.html","page":"フロントエンドアセット","title":"フロントエンドアセット","text":"Webpackの方針に従い、必要な時だけライブラリの依存関係を読み込むことを推奨します。それでもなお、Bootstrapを動かしたいなら、以下のようにすることでできます。","category":"page"},{"location":"guides/Frontend_assets.html","page":"フロントエンドアセット","title":"フロントエンドアセット","text":"app/assets/js/application.jsの下方にimport \"bootstrap\";を追加する\n新たなファイルapp/assets/css/vendor.scssを作成し、@import \"~bootstrap/scss/bootstrap.scss\";を追加する\napp/assets/js/application.jsにrequire(\"../css/vendor.scss\");を追加することで、新たなファイルをインクルードする","category":"page"},{"location":"tutorials/80--Force_Compiling_Routes.html#Genieルートの強制コンパイル","page":"ルートの強制コンパイル","title":"Genieルートの強制コンパイル","text":"","category":"section"},{"location":"tutorials/80--Force_Compiling_Routes.html","page":"ルートの強制コンパイル","title":"ルートの強制コンパイル","text":"アプリケーション起動時に、JuliaはコードをJITコンパイルするため、特定のルートへの初回到達時に、Juliaはリクエストを処理する役割を担った関数をコンパイルする必要があります。これは、最初のリクエストが解決されるまでに多くの秒数がかかる可能性があることを示唆しています。それは本番環境では受け入れられないことかもしれません。このような場合のため、一度定義されたルートにアクセスするためにGenie自体を利用し、コンパイルをトリガーすることができます。","category":"page"},{"location":"tutorials/80--Force_Compiling_Routes.html","page":"ルートの強制コンパイル","title":"ルートの強制コンパイル","text":"ここでは、2つのGetルートを定義し、アプリケーション起動時にそれらを自動的にトリガーする簡単なスクリプトを示します。","category":"page"},{"location":"tutorials/80--Force_Compiling_Routes.html","page":"ルートの強制コンパイル","title":"ルートの強制コンパイル","text":"using Genie, Genie.Router, Genie.Requests, Genie.Renderer.Json\n\nroute(\"/foo\") do\n  json(:foo => \"Foo\")\nend\n\nroute(\"/bar\") do\n  json(:bar => \"Bar\")\nend\n\n\nfunction force_compile()\n  sleep(5)\n\n  for (name, r) in Router.named_routes()\n    Genie.Requests.HTTP.request(r.method, \"http://localhost:8000\" * tolink(name))\n  end\nend\n\n@async force_compile()\n\nup(async = false)","category":"page"},{"location":"tutorials/80--Force_Compiling_Routes.html","page":"ルートの強制コンパイル","title":"ルートの強制コンパイル","text":"上記スニペットでは、2つのルートを定義しています。 次に、ルートを反復してWebサーバ経由でヒットする関数force_compileを追加します。 次に、その関数を呼び出します。この関数は、Webサーバが起動するのに十分な5秒の遅延で実行されます。","category":"page"},{"location":"API/input.html","page":"Input","title":"Input","text":"CurrentModule = Input","category":"page"},{"location":"API/input.html","page":"Input","title":"Input","text":"HttpFile\nHttpInput\nHttpFormPart\nall\npost\nfiles\npost_from_request!\npost_url_encoded!\npost_multipart!\nget_multiform_parts!\nparse_seicolon_fields\nparse_quoted_params","category":"page"},{"location":"API/input.html#Genie.Input.HttpFile","page":"Input","title":"Genie.Input.HttpFile","text":"HttpFile\n\nRepresents a file sent over HTTP\n\n\n\n\n\n","category":"type"},{"location":"guides/Genie_Plugins.html#Genieプラグイン","page":"Genieプラグインの利用","title":"Genieプラグイン","text":"","category":"section"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"Genieプラグインは、特別な統合ポイント(integration points)を提供することにより、強力な機能でGenieアプリを拡張する特別なJuliaパッケージです。Genieプラグインは2つのパートで構成されています。","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"プラグインのコア機能を公開するJuliaパッケージ\nプラグインのインストール時にクライアントアプリにコピーされるファイルペイロード(コントローラ、モジュール、ビュー、データベースマイグレーション、イニシャライザなど)","category":"page"},{"location":"guides/Genie_Plugins.html#Genieプラグインの利用","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"","category":"section"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"プラグインはサードパーティであるGenie/Julia開発者によって作成されます。例としてシンプルなデモプラグインを扱ってみましょう。(https://github.com/GenieFramework/HelloPlugin.jl)","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"プラグインを既存のアプリに追加するために、以下を実施する必要があります。","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"HelloPluginパッケージを、他のJulia Pkg依存のように、Genieアプリに追加してください。","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"pkg> add https://github.com/GenieFramework/HelloPlugin.jl","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"スコープ内にパッケージを持ってきます。","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"julia> using HelloPlugin","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"プラグインをインストールします。(これはパッケージを追加するときに一度だけ実施します)","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"julia> HelloPlugin.install(@__DIR__)","category":"page"},{"location":"guides/Genie_Plugins.html#プラグインの実行","page":"Genieプラグインの利用","title":"プラグインの実行","text":"","category":"section"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"プラグインのインストールにより、app/resources/hello/にHelloController.jlとviews/greet.jl.htmlという形式で新たなhelloリソースが追加されます。また、Genieアプリのplugins/フォルダに新しいファイルhelloplugin.jl(プラグインのイニシャライザであり、ブートストラッププロセスの早い段階でGenieによって自動的に読み込まれます)があります。","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"helloplugin.jlイニシャライザは新しいルートroute(\"/hello\", HelloController.greet)を定義しています。Genieアプリを再起動し、/helloに移動すると、プラグインの挨拶が表示されます。","category":"page"},{"location":"guides/Genie_Plugins.html#ウォークスルー","page":"Genieプラグインの利用","title":"ウォークスルー","text":"","category":"section"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"新しいGenieアプリを作成します。","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"julia> using Genie\n\njulia> Genie.newapp(\"Greetings\", autostart = false)","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"依存関係としてプラグインを追加します。","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"julia> ]\n\npkg> add https://github.com/GenieFramework/HelloPlugin.jl","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"プラグインをスコープ内に入れ、インストーラを実行します。(インストーラはプラグインパッケージを追加する際に、一度だけ実行されます)","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"julia> using HelloPlugin\n\njulia> HelloPlugin.install(@__DIR__)","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"インストール時には、ファイルのコピーやフォルダの作成に失敗した旨を通知する一連のログメッセージが表示されるかもしれません。通常、そのことは心配する必要がありません。これらはいくつかのファイルまたはフォルダがすでに存在するためにインストーラが上書きできないために発生しています。","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"プラグインを読み込むためにアプリを再起動してください。","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"julia> exit()\n\n$ cd Greetings/\n\n$ bin/repl","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"サーバを開始します。","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"julia> Genie.startup()","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"Navigate to http://localhost:8000/hello to get the greeting from the plugin.","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"","category":"page"},{"location":"guides/Genie_Plugins.html#Genieプラグインの開発","page":"Genieプラグインの利用","title":"Genieプラグインの開発","text":"","category":"section"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"Genieは新しいプラグインパッケージのブートストラップ用の効率的なスキャフォールド(scaffold)を提供します。プラグインプロジェクトを作成するためには以下のコードを実行するだけです。","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"julia> using Genie\n\njulia> Genie.Plugins.scaffold(\"GenieHelloPlugin\") # use the actual name of your plugin\nGenerating project file\nGenerating project GenieHelloPlugin:\n    GenieHelloPlugin/Project.toml\n    GenieHelloPlugin/src/GenieHelloPlugin.jl\nScaffolding file structure\n\nAdding dependencies\n  Updating registry at `~/.julia/registries/General`\n  Updating git-repo `https://github.com/JuliaRegistries/General.git`\n  Updating git-repo `https://github.com/genieframework/Genie.jl`\n Resolving package versions...\n  Updating `~/GenieHelloPlugin/Project.toml`\n  [c43c736e] + Genie v0.9.4 #master (https://github.com/genieframework/Genie.jl)\n  Updating `~/GenieHelloPlugin/Manifest.toml`\n\nInitialized empty Git repository in /Users/adrian/GenieHelloPlugin/.git/\n[master (root-commit) 30533f9] initial commit\n 11 files changed, 261 insertions(+)\n\nCongratulations, your plugin is ready!\nYou can use this default installation function in your plugin's module:\n  function install(dest::String; force = false)\n    src = abspath(normpath(joinpath(@__DIR__, \"..\", Genie.Plugins.FILES_FOLDER)))\n\n    for f in readdir(src)\n      isdir(f) || continue\n      Genie.Plugins.install(joinpath(src, f), dest, force = force)\n    end\n  end","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"スキャフォールドコマンドはプラグインのファイル構造を生成します。それはJuliaプロジェクト、gitリポジトリ、Genieアプリを統合するためのファイル構造を含んでいます。","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":".\n├── Manifest.toml\n├── Project.toml\n├── files\n│   ├── app\n│   │   ├── assets\n│   │   │   ├── css\n│   │   │   ├── fonts\n│   │   │   └── js\n│   │   ├── helpers\n│   │   ├── layouts\n│   │   └── resources\n│   ├── db\n│   │   ├── migrations\n│   │   └── seeds\n│   ├── lib\n│   ├── plugins\n│   │   └── geniehelloplugin.jl\n│   └── task\n└── src\n    └── GenieHelloPlugin.jl","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"機能のコア部分はsrc/GenieHelloPlugin.jlモジュールにあります。files/フォルダ内に配置されたすべてのものは、プラグインをインストールするGenieアプリの対応するフォルダにコピーする必要があります。リソース、コントローラ、モデル、データベースマイグレーション、ビュー、アセットおよびコピーするべきfiles/フォルダの中にあるその他のファイルを追加できます。","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"スキャフォールディングはplugins/geniehelloplugin.jlファイルも作成します。これはプラグインのイニシャライザであり、プラグインの機能をブートストラップすることを意図しています。ここでは、依存関係の読み込み、ルートの定義、設定のセットアップなどを実施できます。","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"GenieプラグインはJulia Pkgプロジェクトであるため、依存関係として他のJuliaパッケージを追加することができます。","category":"page"},{"location":"guides/Genie_Plugins.html#インストール機能","page":"Genieプラグインの利用","title":"インストール機能","text":"","category":"section"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"src/GenieHelloPlugin.jlにあるメインモジュールファイルは、ユーザのGenieアプリにプラグインのファイルをコピーする役割を持つinstall(path::String)関数も公開する必要があります。そのpathパラメータは、インストールが実行されるGenieアプリのルートディレクトリです。","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"プラグインのファイルをコピーすることは普通ですが、面倒な操作であるため、Genieはそれを開始するためのいくつかのヘルパーを提供します。Genie.Pluginsモジュールは、アプリのプラグインファイルのコピー先にファイルをコピーするのに使うことができるinstall(path::String, dest::String; force = false)を提供します。","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"スキャフォールディング機能は、モジュールで使用できるデフォルトのinstall(path::String)も推奨しています。","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"function install(dest::String; force = false)\n  src = abspath(normpath(joinpath(@__DIR__, \"..\", Genie.Plugins.FILES_FOLDER)))\n\n  for f in readdir(src)\n    isdir(f) || continue\n    Genie.Plugins.install(joinpath(src, f), dest, force = force)\n  end\nend","category":"page"},{"location":"guides/Genie_Plugins.html","page":"Genieプラグインの利用","title":"Genieプラグインの利用","text":"ここまでをスタート地点として利用し、他の独自のロジックを追加できます。","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html#Genieアプリのロードと起動","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"","category":"section"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"At any time, you can load and serve an existing Genie app. Loading a Genie app will bring into scope all your app's files, including the main app module, controllers, models, etcetera.","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html#MacOS-/-LinuxでのGenie-REPLの起動","page":"Genieアプリのロードと起動","title":"MacOS / LinuxでのGenie REPLの起動","text":"","category":"section"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"推奨されるアプローチは、プロジェクトのルートフォルダにて、OSシェルでbin/replを実行し、Genie環境で対話型REPLを開始することです。","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"$ bin/repl","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"アプリの環境がロードされます。","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"Webサーバを起動するために、次のコマンドを実行します。","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"julia> up()","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"サーバを直接開始したい場合は、bin/replの代わりにbin/serverを利用してください。","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"$ bin/server","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"上記により、Webサーバが自動的に非対話モードで起動します。","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"最後に、bin/serverinteractiveを代わりに利用することで、サーバを起動し対話型REPLに落とし込むオプションがあります。","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html#WindowsでのGenie-REPLの起動","page":"Genieアプリのロードと起動","title":"WindowsでのGenie REPLの起動","text":"","category":"section"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"Windowsでは、ワークフローはmacOSやLinuxと似ていますが、Windows専用のスクリプトであるrepl.bat、server.bat、serverinteractive.batが、プロジェクトフォルダ内のbin/フォルダに含む形で提供されています。それらをダブルクリックするか、OSシェル(コマンドプロンプトまたはPowerShell)で実行することで、前の段落で説明したように、対話型REPLセッションまたはサーバセッションを開始します。","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"注意喚起","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"Windowsの実行可能ファイルrepl.bat、server.bat、およびserverinteractive.batが存在しない可能性があります。(この現象が発生するのは通常、アプリがLinux/Macで生成され、Windowsコンピュータに移植された場合です) Genie/Julia REPLで以下のジェネレーターを実行するといつでも作成できます。(場所はGenieプロジェクトのルート)","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"julia> using Genie\n\njulia> Genie.Generator.setup_windows_bin_files()","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"あるいは、プロジェクトのパスを引数としてsetup_windows_bin_filesに渡すことができます。","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"julia> Genie.Generator.setup_windows_bin_files(\"path/to/your/Genie/project\")","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html#Juno-/-Jupyter-/-その他のJulia環境","page":"Genieアプリのロードと起動","title":"Juno / Jupyter / その他のJulia環境","text":"","category":"section"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"Juno、Jupyter、およびその他の対話型の環境では、最初にアプリのプロジェクトフォルダにcdで移動してください。","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"ローカルパッケージ環境を利用可能にする必要があります。","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"using Pkg\nPkg.activate(\".\")","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"次に以下を実行してください。","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"using Genie\n\nGenie.loadapp()","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html#JuliaのREPLでの手動ロード","page":"Genieアプリのロードと起動","title":"JuliaのREPLでの手動ロード","text":"","category":"section"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"開いているJulia REPLセッション内でGenieアプリをロードするため、初めにGenieアプリのルートディレクトリに移動済みであることを確認してください。ここはプロジェクトのフォルダで、bootstrap.jlファイルに加えて、特にJuliaのProject.tomlファイルと Manifest.tomlファイルが必要であるということです。julia> cd(...) またはshell> cd ...コマンドでGenieアプリのフォルダに移動できます。","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"次に、アクティブなJulia REPLセッションないから、ローカルパッケージ環境をアクティブ化する必要があります。","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"julia> ] # enter pkg> mode\n\npkg> activate .","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"そして、Juliaプロンプトに戻り、以下の通りGenieアプリのロードを実行します。","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"julia> using Genie\n\njulia> Genie.loadapp()","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"これで、アプリの環境がロードされます。","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"サーバを起動するために以下を実行します。","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"julia> startup()","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"注意喚起","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"アプリをロードする推奨方法は、bin/replやbin/server、bin/serverinteractiveコマンドを使用することです。Juliaプロセスを正しく開始し、1つのコマンドですべての依存関係をロードしてアプリのREPLを開始します。","category":"page"},{"location":"tutorials/10--Loading_Genie_Apps.html","page":"Genieアプリのロードと起動","title":"Genieアプリのロードと起動","text":"","category":"page"},{"location":"API/webchannels.html","page":"WebChannels","title":"WebChannels","text":"CurrentModule = WebChannels","category":"page"},{"location":"API/webchannels.html","page":"WebChannels","title":"WebChannels","text":"ChannelNotFoundException\nChannelClient\nChannelClientsCollection\nChannelSubscriptionsCollection\nMessagePayload\nChannelMessage\nCLIENTS\nSUBSCRIPTIONS\nclients\nsubscriptions\nwebsockets\nchannels\nconnected_clients\ndisconnected_clients\nsubscribe\nunsubscribe\nunsubscribe_client\nunsubscribe_disconnected_clients\npush_subscription\npop_subscription\nbroadcast\nmessage","category":"page"},{"location":"API/webchannels.html#Genie.WebChannels.ChannelClientsCollection","page":"WebChannels","title":"Genie.WebChannels.ChannelClientsCollection","text":"Dict([itr])\n\nDict{K,V}() constructs a hash table with keys of type K and values of type V. Keys are compared with isequal and hashed with hash.\n\nGiven a single iterable argument, constructs a Dict whose key-value pairs are taken from 2-tuples (key,value) generated by the argument.\n\nExamples\n\njulia> Dict([(\"A\", 1), (\"B\", 2)])\nDict{String,Int64} with 2 entries:\n  \"B\" => 2\n  \"A\" => 1\n\nAlternatively, a sequence of pair arguments may be passed.\n\njulia> Dict(\"A\"=>1, \"B\"=>2)\nDict{String,Int64} with 2 entries:\n  \"B\" => 2\n  \"A\" => 1\n\n\n\n\n\nBase.Dict(req::HTTP.Request) :: Dict{String,String}\n\nConverts a HTTP.Request to a Dict.\n\n\n\n\n\nDict(req::Request) :: Dict{String,String}\n\nExtracts the Cookie and Set-Cookie data from the Request and Response objects and converts it into a Dict.\n\n\n\n\n\n","category":"type"},{"location":"API/webchannels.html#Genie.WebChannels.ChannelSubscriptionsCollection","page":"WebChannels","title":"Genie.WebChannels.ChannelSubscriptionsCollection","text":"Dict([itr])\n\nDict{K,V}() constructs a hash table with keys of type K and values of type V. Keys are compared with isequal and hashed with hash.\n\nGiven a single iterable argument, constructs a Dict whose key-value pairs are taken from 2-tuples (key,value) generated by the argument.\n\nExamples\n\njulia> Dict([(\"A\", 1), (\"B\", 2)])\nDict{String,Int64} with 2 entries:\n  \"B\" => 2\n  \"A\" => 1\n\nAlternatively, a sequence of pair arguments may be passed.\n\njulia> Dict(\"A\"=>1, \"B\"=>2)\nDict{String,Int64} with 2 entries:\n  \"B\" => 2\n  \"A\" => 1\n\n\n\n\n\nBase.Dict(req::HTTP.Request) :: Dict{String,String}\n\nConverts a HTTP.Request to a Dict.\n\n\n\n\n\nDict(req::Request) :: Dict{String,String}\n\nExtracts the Cookie and Set-Cookie data from the Request and Response objects and converts it into a Dict.\n\n\n\n\n\n","category":"type"},{"location":"API/webchannels.html#Genie.WebChannels.subscribe","page":"WebChannels","title":"Genie.WebChannels.subscribe","text":"Subscribes a web socket client ws to channel.\n\n\n\n\n\n","category":"function"},{"location":"API/webchannels.html#Genie.WebChannels.unsubscribe","page":"WebChannels","title":"Genie.WebChannels.unsubscribe","text":"Unsubscribes a web socket client ws from channel.\n\n\n\n\n\n","category":"function"},{"location":"API/webchannels.html#Genie.WebChannels.unsubscribe_client","page":"WebChannels","title":"Genie.WebChannels.unsubscribe_client","text":"Unsubscribes a web socket client ws from all the channels.\n\n\n\n\n\n","category":"function"},{"location":"API/webchannels.html#Genie.WebChannels.unsubscribe_disconnected_clients","page":"WebChannels","title":"Genie.WebChannels.unsubscribe_disconnected_clients","text":"unsubscribedisconnectedclients() :: ChannelClientsCollection\n\nUnsubscribes clients which are no longer connected.\n\n\n\n\n\n","category":"function"},{"location":"API/webchannels.html#Genie.WebChannels.push_subscription","page":"WebChannels","title":"Genie.WebChannels.push_subscription","text":"Adds a new subscription for client to channel.\n\n\n\n\n\n","category":"function"},{"location":"API/webchannels.html#Genie.WebChannels.pop_subscription","page":"WebChannels","title":"Genie.WebChannels.pop_subscription","text":"Removes the subscription of client to channel.\n\n\n\n\n\nRemoves all subscriptions of client.\n\n\n\n\n\n","category":"function"},{"location":"API/webchannels.html#Genie.WebChannels.broadcast","page":"WebChannels","title":"Genie.WebChannels.broadcast","text":"Pushes msg (and payload) to all the clients subscribed to the channels in channels.\n\n\n\n\n\nPushes msg (and payload) to all the clients subscribed to all the channels.\n\n\n\n\n\n","category":"function"},{"location":"API/webchannels.html#Genie.WebChannels.message","page":"WebChannels","title":"Genie.WebChannels.message","text":"Pushes msg (and payload) to channel.\n\n\n\n\n\nWrites msg to web socket for client.\n\n\n\n\n\n","category":"function"},{"location":"API/cache.html","page":"Cache","title":"Cache","text":"CurrentModule = Cache","category":"page"},{"location":"API/cache.html","page":"Cache","title":"Cache","text":"withcache\npurge\npurgeall\ncachekey","category":"page"},{"location":"API/cache.html#Genie.Cache.withcache","page":"Cache","title":"Genie.Cache.withcache","text":"withcache(f::Function, key::Union{String,Symbol}, expiration::Int = Genie.config.cache_duration; dir = \"\", condition::Bool = true)\n\nExecutes the function f and stores the result into the cache for the duration (in seconds) of expiration. Next time the function is invoked, if the cache has not expired, the cached result is returned skipping the function execution. The optional dir param is used to designate the folder where the cache will be stored (within the configured cache folder). If condition is false caching will be skipped.\n\n\n\n\n\n","category":"function"},{"location":"API/cache.html#Genie.Cache.purge","page":"Cache","title":"Genie.Cache.purge","text":"purge()\n\nRemoves the cache data stored under the key key.\n\n\n\n\n\n","category":"function"},{"location":"API/cache.html#Genie.Cache.purgeall","page":"Cache","title":"Genie.Cache.purgeall","text":"purgeall()\n\nRemoves all cached data.\n\n\n\n\n\n","category":"function"},{"location":"API/cache.html#Genie.Cache.cachekey","page":"Cache","title":"Genie.Cache.cachekey","text":"cachekey(args...) :: String\n\nComputes a unique cache key based on args. Used to generate unique keys for storing data in cache.\n\n\n\n\n\n","category":"function"},{"location":"API/configuration.html","page":"Configuration","title":"Configuration","text":"CurrentModule = Configuration","category":"page"},{"location":"API/configuration.html","page":"Configuration","title":"Configuration","text":"GENIE_VERSION\nisdev\nisprod\nistest\nenv\nbuildpath\nSettings","category":"page"},{"location":"API/configuration.html#Genie.Configuration.GENIE_VERSION","page":"Configuration","title":"Genie.Configuration.GENIE_VERSION","text":"const GENIE_VERSION\n\nReferences the current Genie version number.\n\n\n\n\n\n","category":"constant"},{"location":"API/configuration.html#Genie.Configuration.isdev","page":"Configuration","title":"Genie.Configuration.isdev","text":"isdev()  :: Bool\n\nSet of utility functions that return whether or not the current environment is development, production or testing.\n\nExamples\n\njulia> Configuration.isdev()\ntrue\n\njulia> Configuration.isprod()\nfalse\n\n\n\n\n\n","category":"function"},{"location":"API/configuration.html#Genie.Configuration.isprod","page":"Configuration","title":"Genie.Configuration.isprod","text":"isprod() :: Bool\n\nSet of utility functions that return whether or not the current environment is development, production or testing.\n\nExamples\n\njulia> Configuration.isdev()\ntrue\n\njulia> Configuration.isprod()\nfalse\n\n\n\n\n\n","category":"function"},{"location":"API/configuration.html#Genie.Configuration.istest","page":"Configuration","title":"Genie.Configuration.istest","text":"istest() :: Bool\n\nSet of utility functions that return whether or not the current environment is development, production or testing.\n\nExamples\n\njulia> Configuration.isdev()\ntrue\n\njulia> Configuration.isprod()\nfalse\n\n\n\n\n\n","category":"function"},{"location":"API/configuration.html#Genie.Configuration.env","page":"Configuration","title":"Genie.Configuration.env","text":"env() :: String\n\nReturns the current Genie environment.\n\nExamples\n\njulia> Configuration.env()\n\"dev\"\n\n\n\n\n\n","category":"function"},{"location":"API/configuration.html#Genie.Configuration.buildpath","page":"Configuration","title":"Genie.Configuration.buildpath","text":"buildpath() :: String\n\nConstructs the temp dir where Genie's view files are built.\n\n\n\n\n\n","category":"function"},{"location":"API/configuration.html#Genie.Configuration.Settings","page":"Configuration","title":"Genie.Configuration.Settings","text":"mutable struct Settings\n\nApp configuration - sets up the app's defaults. Individual options are overwritten in the corresponding environment file.\n\nArguments\n\nserver_port::Int: the port for running the web server (default 8000)\nserver_host::String: the host for running the web server (default \"127.0.0.1\")\nserver_document_root::String: path to the document root (default \"public/\")\nserver_handle_static_files::Bool: if true, Genie will also serve static files. In production, it is recommended to serve static files with a web server like Nginx.\nserver_signature::String: Genie's signature used for tagging the HTTP responses. If empty, it will not be added.\napp_env::String: the environment in which the app is running (dev, test, or prod)\ncors_headers::Dict{String,String}: default Access-Control-* CORS settings\ncors_allowed_origins::Vector{String}: allowed origin hosts for CORS settings\ncache_duraction::Int: cache expiration time in seconds\nlog_level::Logging.LogLevel: logging severity level\nlog_to_file::Bool: if true, information will be logged to file besides REPL\nassets_fingerprinted::Bool: if true, asset fingerprinting is used in the asset pipeline\nsession_key_name::String: the name of the session cookie\nsession_storage::Symbol: the backend adapter for session storage (default File)\ninflector_irregulars::Vector{Tuple{String,String}}: additional irregular singular-plural forms to be used by the Inflector\nrun_as_server::Bool: when true the server thread is launched synchronously to avoid that the script exits\nwebsockets_server::Bool: if true, the websocket server is also started together with the web server\nhtml_parser_close_tag::String: default \" /\". Can be changed to an empty string \"\" so the single tags would not be closed.\nssl_enabled::Bool: default false. Server runs over SSL/HTTPS in development.\nssl_config::MbedTLS.SSLConfig: default nothing. If not nothing and ssl_enabled, it will use the config to start the server over HTTPS.\n\n\n\n\n\n","category":"type"},{"location":"tutorials/13--Initializers.html#イニシャライザによるアプリケーション設定のカスタマイズ","page":"イニシャライザによる設定コードの自動読み込み","title":"イニシャライザによるアプリケーション設定のカスタマイズ","text":"","category":"section"},{"location":"tutorials/13--Initializers.html","page":"イニシャライザによる設定コードの自動読み込み","title":"イニシャライザによる設定コードの自動読み込み","text":"イニシャライザは、アプリケーションサイクルの早い段階(ルート、コントローラ、モデルよりも早く)に読み込まれる純粋なJuliaファイルです。それらはアプリケーションのライフサイクルの後半で必要になる可能性がある設定コードを公開するように設計されています。","category":"page"},{"location":"tutorials/13--Initializers.html","page":"イニシャライザによる設定コードの自動読み込み","title":"イニシャライザによる設定コードの自動読み込み","text":"イニシャライザはconfig/initializers/フォルダ内に配置する必要があり、それらはGenieによって自動的にロード(インクルード)されます。","category":"page"},{"location":"tutorials/13--Initializers.html","page":"イニシャライザによる設定コードの自動読み込み","title":"イニシャライザによる設定コードの自動読み込み","text":"設定が環境依存する場合(すなわち、開発と本番環境の間で差異があるデータベース接続)、対応するconfig/env/*.jlファイルに追加する必要があります。","category":"page"},{"location":"tutorials/13--Initializers.html#ベストプラクティス","page":"イニシャライザによる設定コードの自動読み込み","title":"ベストプラクティス","text":"","category":"section"},{"location":"tutorials/13--Initializers.html","page":"イニシャライザによる設定コードの自動読み込み","title":"イニシャライザによる設定コードの自動読み込み","text":"イニシャライザには好きな名前をつけることができます。(理想を言えば、redis.jlのように説明的な名前)\nモジュールを定義しない限り、大文字の名前は使わないでください。(Juliaの命名規則を尊重するため)\nイニシャライザファイルは小さく集中させてください。そうすることでファイルの目的は一つだけになります。\nイニシャライザは必要な数だけ追加することができます。\nイニシャライザを乱用しないでください。それらは複雑なコードをもつことを意図していません。","category":"page"},{"location":"tutorials/13--Initializers.html#ロード順序","page":"イニシャライザによる設定コードの自動読み込み","title":"ロード順序","text":"","category":"section"},{"location":"tutorials/13--Initializers.html","page":"イニシャライザによる設定コードの自動読み込み","title":"イニシャライザによる設定コードの自動読み込み","text":"イニシャライザはファイルシステムから読まれた順番にロードされます。他のイニシャライザに依存するイニシャライザがある場合、これはモデルまたはライブラリファイルを利用してリファクタリングする必要があることを示唆している可能性があります。","category":"page"},{"location":"tutorials/13--Initializers.html","page":"イニシャライザによる設定コードの自動読み込み","title":"イニシャライザによる設定コードの自動読み込み","text":"","category":"page"},{"location":"tutorials/13--Initializers.html","page":"イニシャライザによる設定コードの自動読み込み","title":"イニシャライザによる設定コードの自動読み込み","text":"注意喚起","category":"page"},{"location":"tutorials/13--Initializers.html","page":"イニシャライザによる設定コードの自動読み込み","title":"イニシャライザによる設定コードの自動読み込み","text":"ライブラリファイルは明確な機能を提供するJuliaファイルで、Genieによって自動的にロードされるlib/フォルダに配置することができます。lib/フォルダが存在しない場合は、自分でそれを作成することができます。","category":"page"},{"location":"tutorials/13--Initializers.html","page":"イニシャライザによる設定コードの自動読み込み","title":"イニシャライザによる設定コードの自動読み込み","text":"","category":"page"},{"location":"tutorials/13--Initializers.html#スコープ","page":"イニシャライザによる設定コードの自動読み込み","title":"スコープ","text":"","category":"section"},{"location":"tutorials/13--Initializers.html","page":"イニシャライザによる設定コードの自動読み込み","title":"イニシャライザによる設定コードの自動読み込み","text":"イニシャライザファイルに追加されたすべての定義(変数、定数、関数、モジュールなど)はアプリのモジュールにロードされます。そのため、アプリがMyGenieAppという名前の場合、定義はMyGenieAppモジュールで利用できます。","category":"page"},{"location":"tutorials/13--Initializers.html","page":"イニシャライザによる設定コードの自動読み込み","title":"イニシャライザによる設定コードの自動読み込み","text":"","category":"page"},{"location":"tutorials/13--Initializers.html","page":"イニシャライザによる設定コードの自動読み込み","title":"イニシャライザによる設定コードの自動読み込み","text":"注意喚起","category":"page"},{"location":"tutorials/13--Initializers.html","page":"イニシャライザによる設定コードの自動読み込み","title":"イニシャライザによる設定コードの自動読み込み","text":"アプリの名前が変数の場合、UserApp定数を介してアプリモジュールにアクセスすることができます。そのため、イニシャライザに追加されたすべての定義は、UserAppモジュールを介してアクセスすることができます。(UserApp === MyGenieApp)","category":"page"},{"location":"tutorials/13--Initializers.html","page":"イニシャライザによる設定コードの自動読み込み","title":"イニシャライザによる設定コードの自動読み込み","text":"","category":"page"},{"location":"tutorials/13--Initializers.html#例","page":"イニシャライザによる設定コードの自動読み込み","title":"例","text":"","category":"section"},{"location":"tutorials/13--Initializers.html","page":"イニシャライザによる設定コードの自動読み込み","title":"イニシャライザによる設定コードの自動読み込み","text":"これは、SearchLight ORMをロードするためのGenieのデフォルトイニシャライザです。イニシャライザは、専用の環境依存ファイルで定義されているデータベースの設定情報を含んでいることに注意してください。イニシャライザは、設定のロードとセットアップをSearchLightパッケージに任せるだけです。","category":"page"},{"location":"tutorials/13--Initializers.html","page":"イニシャライザによる設定コードの自動読み込み","title":"イニシャライザによる設定コードの自動読み込み","text":"using SearchLight, SearchLight.QueryBuilder\n\nSearchLight.Configuration.load()\n\nif SearchLight.config.db_config_settings[\"adapter\"] !== nothing\n  SearchLight.Database.setup_adapter()\n  SearchLight.Database.connect()\n  SearchLight.load_resources()\nend","category":"page"},{"location":"API/deploy_docker.html","page":"Docker","title":"Docker","text":"CurrentModule = Deploy.Docker","category":"page"},{"location":"API/deploy_docker.html","page":"Docker","title":"Docker","text":"dockerfile\nbuild\nrun","category":"page"},{"location":"API/deploy_docker.html#Genie.Deploy.Docker.dockerfile","page":"Docker","title":"Genie.Deploy.Docker.dockerfile","text":"dockerfile(path::String = \".\"; user::String = \"genie\", env::String = \"dev\",\n          filename::String = \"Dockerfile\", port::Int = 8000, dockerport::Int = 80, force::Bool = false)\n\nGenerates a Dockerfile optimised for containerizing Genie apps.\n\nArguments\n\npath::String: where to generate the file\nfilename::String: the name of the file (default Dockerfile)\nuser::String: the name of the system user under which the Genie app is run\nenv::String: the environment in which the Genie app will run\nhost::String: the local IP of the Genie app inside the container\nport::Int: the port of the Genie app inside the container\ndockerport::Int: the port to use on the host (used by the EXPOSE directive)\nforce::Bool: if the file already exists, when force is true, it will be overwritten\n\n\n\n\n\n","category":"function"},{"location":"API/deploy_docker.html#Genie.Deploy.Docker.build","page":"Docker","title":"Genie.Deploy.Docker.build","text":"build(path::String = \".\"; appname = \"genie\")\n\nBuilds the Docker image based on the Dockerfile\n\n\n\n\n\n","category":"function"},{"location":"API/deploy_docker.html#Genie.Deploy.Docker.run","page":"Docker","title":"Genie.Deploy.Docker.run","text":"run(; containername::String = \"genieapp\", hostport::Int = 80, containerport::Int = 8000, appdir::String = \"/home/genie/app\",\n    mountapp::Bool = false, image::String = \"genie\", command::String = \"bin/server\", rm::Bool = true, it::Bool = true)\n\nRuns the Docker container named containername, binding hostport and containerport.\n\nArguments\n\ncontainername::String: the name of the container of the Genie app\nhostport::Int: port to be used on the host for accessing the app\ncontainerport::Int: the port on which the app is running inside the container\nappdir::String: the folder where the app is stored within the container\nmountapp::String: if true the app from the host will be mounted so that changes on the host will be reflected when accessing the app in the container (to be used for dev)\nimage::String: the name of the Docker image\ncommand::String: what command to run when starting the app\nrm::Bool: removes the container upon exit\nit::Bool: runs interactively\n\n\n\n\n\n","category":"function"},{"location":"API/router.html","page":"Router","title":"Router","text":"CurrentModule = Router","category":"page"},{"location":"API/router.html","page":"Router","title":"Router","text":"Route\nChannel\nRouter.show\nParams\nispayload\nroute_request\nroute_ws_request\nRouter.push!\nroute\nchannel\nroutename\nchannelname\nbaptizer\nnamed_routes\nroutes\nnamed_channels\nchannels\nget_route\nroutes\nchannels\ndelete!\nto_link\ntolink\nlink_to\nlinkto\ntoroute\nroute_params_to_dict\naction_controller_params\nrun_hook\nmatch_routes\nmatch_channels\nparse_route\nparse_channel\nextract_uri_params\nextract_get_params\nextract_post_params\nextract_request_params\ncontent_type\ncontent_length\nrequest_type_is\nrequest_type\nnested_keys\nsetup_base_params\nto_response\nparams\n@params\n_params_\nrequest\nresponse_type\nappend_to_routes_file\nis_static_file\nto_uri\nescape_resource_path\nserve_static_file\npreflight_response\nresponse_mime\nfile_path\nfilepath\npathify\nfile_extension\nfile_headers\normatch","category":"page"},{"location":"API/router.html#Genie.Router.Route","page":"Router","title":"Genie.Router.Route","text":"mutable struct Route\n\nRepresentation of a route object\n\n\n\n\n\n","category":"type"},{"location":"API/router.html#Genie.Router.Channel","page":"Router","title":"Genie.Router.Channel","text":"mutable struct Channel\n\nRepresentation of a WebSocket Channel object\n\n\n\n\n\n","category":"type"},{"location":"API/router.html#Base.show","page":"Router","title":"Base.show","text":"show(x)\n\nWrite an informative text representation of a value to the current output stream. New types should overload show(io::IO, x) where the first argument is a stream. The representation used by show generally includes Julia-specific formatting and type information.\n\nrepr returns the output of show as a string.\n\nSee also print, which writes un-decorated representations.\n\nExamples\n\njulia> show(\"Hello World!\")\n\"Hello World!\"\njulia> print(\"Hello World!\")\nHello World!\n\n\n\n\n\nshow(io, mime, x)\n\nThe display functions ultimately call show in order to write an object x as a given mime type to a given I/O stream io (usually a memory buffer), if possible. In order to provide a rich multimedia representation of a user-defined type T, it is only necessary to define a new show method for T, via: show(io, ::MIME\"mime\", x::T) = ..., where mime is a MIME-type string and the function body calls write (or similar) to write that representation of x to io. (Note that the MIME\"\" notation only supports literal strings; to construct MIME types in a more flexible manner use MIME{Symbol(\"\")}.)\n\nFor example, if you define a MyImage type and know how to write it to a PNG file, you could define a function show(io, ::MIME\"image/png\", x::MyImage) = ... to allow your images to be displayed on any PNG-capable AbstractDisplay (such as IJulia). As usual, be sure to import Base.show in order to add new methods to the built-in Julia function show.\n\nThe default MIME type is MIME\"text/plain\". There is a fallback definition for text/plain output that calls show with 2 arguments. Therefore, this case should be handled by defining a 2-argument show(io::IO, x::MyType) method.\n\nTechnically, the MIME\"mime\" macro defines a singleton type for the given mime string, which allows us to exploit Julia's dispatch mechanisms in determining how to display objects of any given type.\n\nThe first argument to show can be an IOContext specifying output format properties. See IOContext for details.\n\n\n\n\n\nBase.show(io::IO, ex::RuntimeException)\n\nCustom printing of RuntimeException\n\n\n\n\n\nBase.show(io::IO, ex::FileExistsException)\n\nCustom printing for FileExistsException\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.Params","page":"Router","title":"Genie.Router.Params","text":"mutable struct Params{T}\n\nCollection of key value pairs representing the parameters of the current request - response cycle.\n\n\n\n\n\n","category":"type"},{"location":"API/router.html#Genie.Router.ispayload","page":"Router","title":"Genie.Router.ispayload","text":"ispayload(req::HTTP.Request)\n\nTrue if the request can carry a payload - that is, it's a POST, PUT, or PATCH request\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.route_request","page":"Router","title":"Genie.Router.route_request","text":"route_request(req::Request, res::Response, ip::IPv4 = Genie.config.server_host) :: Response\n\nFirst step in handling a request: sets up @params collection, handles query vars, negotiates content.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.route_ws_request","page":"Router","title":"Genie.Router.route_ws_request","text":"route_ws_request(req::Request, msg::String, ws_client::HTTP.WebSockets.WebSocket, ip::IPv4 = Genie.config.server_host) :: String\n\nFirst step in handling a web socket request: sets up @params collection, handles query vars.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Base.push!","page":"Router","title":"Base.push!","text":"push!(collection, items...) -> collection\n\nInsert one or more items in collection. If collection is an ordered container, the items are inserted at the end (in the given order).\n\nExamples\n\njulia> push!([1, 2, 3], 4, 5, 6)\n6-element Array{Int64,1}:\n 1\n 2\n 3\n 4\n 5\n 6\n\nIf collection is ordered, use append! to add all the elements of another collection to it. The result of the preceding example is equivalent to append!([1, 2, 3], [4, 5, 6]). For AbstractSet objects, union! can be used instead.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.route","page":"Router","title":"Genie.Router.route","text":"Named Genie routes constructors.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.channel","page":"Router","title":"Genie.Router.channel","text":"Named Genie channels constructors.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.routename","page":"Router","title":"Genie.Router.routename","text":"routename(params) :: Symbol\n\nComputes the name of a route.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.channelname","page":"Router","title":"Genie.Router.channelname","text":"channelname(params) :: Symbol\n\nComputes the name of a channel.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.baptizer","page":"Router","title":"Genie.Router.baptizer","text":"baptizer(params::Union{Route,Channel}, parts::Vector{String}) :: Symbol\n\nGenerates default names for routes and channels.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.named_routes","page":"Router","title":"Genie.Router.named_routes","text":"The list of the defined named routes.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.routes","page":"Router","title":"Genie.Router.routes","text":"routes() :: Vector{Route}\n\nReturns a vector of defined routes.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.named_channels","page":"Router","title":"Genie.Router.named_channels","text":"named_channels() :: Dict{Symbol,Any}\n\nThe list of the defined named channels.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.channels","page":"Router","title":"Genie.Router.channels","text":"channels() :: Vector{Channel}\n\nReturns a vector of defined channels.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.get_route","page":"Router","title":"Genie.Router.get_route","text":"Gets the Route correspoding to routename\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.delete!","page":"Router","title":"Genie.Router.delete!","text":"delete!(routes, route_name::Symbol)\n\nRemoves the route with the corresponding name from the routes collection and returns the collection of remaining routes.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.to_link","page":"Router","title":"Genie.Router.to_link","text":"Generates the HTTP link corresponding to route_name using the parameters in d.\n\n\n\n\n\nGenerates the HTTP link corresponding to route_name using the parameters in route_params.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.tolink","page":"Router","title":"Genie.Router.tolink","text":"Generates the HTTP link corresponding to route_name using the parameters in d.\n\n\n\n\n\nGenerates the HTTP link corresponding to route_name using the parameters in route_params.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.link_to","page":"Router","title":"Genie.Router.link_to","text":"Generates the HTTP link corresponding to route_name using the parameters in d.\n\n\n\n\n\nGenerates the HTTP link corresponding to route_name using the parameters in route_params.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.linkto","page":"Router","title":"Genie.Router.linkto","text":"Generates the HTTP link corresponding to route_name using the parameters in d.\n\n\n\n\n\nGenerates the HTTP link corresponding to route_name using the parameters in route_params.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.toroute","page":"Router","title":"Genie.Router.toroute","text":"Generates the HTTP link corresponding to route_name using the parameters in d.\n\n\n\n\n\nGenerates the HTTP link corresponding to route_name using the parameters in route_params.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.route_params_to_dict","page":"Router","title":"Genie.Router.route_params_to_dict","text":"route_params_to_dict(route_params)\n\nConverts the route params to a Dict.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.action_controller_params","page":"Router","title":"Genie.Router.action_controller_params","text":"action_controller_params(action::Function, params::Params) :: Nothing\n\nSets up the :action_controller, :action, and :controller key - value pairs of the params collection.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.run_hook","page":"Router","title":"Genie.Router.run_hook","text":"run_hook(controller::Module, hook_type::Symbol) :: Bool\n\nInvokes the designated hook.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.match_routes","page":"Router","title":"Genie.Router.match_routes","text":"match_routes(req::Request, res::Response, params::Params) :: Response\n\nMatches the invoked URL to the corresponding route, sets up the execution environment and invokes the controller method.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.match_channels","page":"Router","title":"Genie.Router.match_channels","text":"match_channels(req::Request, msg::String, ws_client::HTTP.WebSockets.WebSocket, params::Params) :: String\n\nMatches the invoked URL to the corresponding channel, sets up the execution environment and invokes the channel controller method.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.parse_route","page":"Router","title":"Genie.Router.parse_route","text":"parse_route(route::String) :: Tuple{String,Vector{String},Vector{Any}}\n\nParses a route and extracts its named params and types.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.parse_channel","page":"Router","title":"Genie.Router.parse_channel","text":"parse_channel(channel::String) :: Tuple{String,Vector{String},Vector{Any}}\n\nParses a channel and extracts its named parms and types.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.extract_uri_params","page":"Router","title":"Genie.Router.extract_uri_params","text":"extract_uri_params(uri::String, regex_route::Regex, param_names::Vector{String}, param_types::Vector{Any}, params::Params) :: Bool\n\nExtracts params from request URI and sets up the params Dict.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.extract_get_params","page":"Router","title":"Genie.Router.extract_get_params","text":"extract_get_params(uri::URI, params::Params) :: Bool\n\nExtracts query vars and adds them to the execution params Dict.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.extract_post_params","page":"Router","title":"Genie.Router.extract_post_params","text":"extract_post_params(req::Request, params::Params) :: Nothing\n\nParses POST variables and adds the to the params Dict.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.extract_request_params","page":"Router","title":"Genie.Router.extract_request_params","text":"extract_request_params(req::HTTP.Request, params::Params) :: Nothing\n\nSets up the params key-value pairs corresponding to a JSON payload.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.content_type","page":"Router","title":"Genie.Router.content_type","text":"content_type(req::HTTP.Request) :: String\n\nGets the content-type of the request.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.content_length","page":"Router","title":"Genie.Router.content_length","text":"content_length(req::HTTP.Request) :: Int\n\nGets the content-length of the request.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.request_type_is","page":"Router","title":"Genie.Router.request_type_is","text":"request_type_is(req::HTTP.Request, request_type::Symbol) :: Bool\n\nChecks if the request content-type is of a certain type.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.request_type","page":"Router","title":"Genie.Router.request_type","text":"request_type(req::HTTP.Request) :: Symbol\n\nGets the request's content type.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.nested_keys","page":"Router","title":"Genie.Router.nested_keys","text":"nested_keys(k::String, v, params::Params) :: Nothing\n\nUtility function to process nested keys and set them up in params.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.setup_base_params","page":"Router","title":"Genie.Router.setup_base_params","text":"setup_base_params(req::Request, res::Response, params::Dict{Symbol,Any}) :: Dict{Symbol,Any}\n\nPopulates params with default environment vars.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.to_response","page":"Router","title":"Genie.Router.to_response","text":"to_response(action_result) :: Response\n\nConverts the result of invoking the controller action to a Response.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.@params","page":"Router","title":"Genie.Router.@params","text":"@params\n\nThe object containing the request variables collection.\n\n\n\n\n\n","category":"macro"},{"location":"API/router.html#Genie.Router._params_","page":"Router","title":"Genie.Router._params_","text":"_params_()\n\nReference to the request variables collection.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.response_type","page":"Router","title":"Genie.Router.response_type","text":"response_type{T}(params::Dict{Symbol,T}) :: Symbol\nresponse_type(params::Params) :: Symbol\n\nReturns the content-type of the current request-response cycle.\n\n\n\n\n\nresponse_type{T}(check::Symbol, params::Dict{Symbol,T}) :: Bool\n\nChecks if the content-type of the current request-response cycle matches check.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.append_to_routes_file","page":"Router","title":"Genie.Router.append_to_routes_file","text":"append_to_routes_file(content::String) :: Nothing\n\nAppends content to the app's route file.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.is_static_file","page":"Router","title":"Genie.Router.is_static_file","text":"is_static_file(resource::String) :: Bool\n\nChecks if the requested resource is a static file.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.to_uri","page":"Router","title":"Genie.Router.to_uri","text":"to_uri(resource::String) :: URI\n\nAttempts to convert resource to URI\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.escape_resource_path","page":"Router","title":"Genie.Router.escape_resource_path","text":"escape_resource_path(resource::String)\n\nCleans up paths to resources.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.serve_static_file","page":"Router","title":"Genie.Router.serve_static_file","text":"serve_static_file(resource::String) :: Response\n\nReads the static file and returns the content as a Response.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.preflight_response","page":"Router","title":"Genie.Router.preflight_response","text":"preflight_response() :: HTTP.Response\n\nSets up the preflight CORS response header.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.response_mime","page":"Router","title":"Genie.Router.response_mime","text":"response_mime()\n\nReturns the MIME type of the response.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.file_path","page":"Router","title":"Genie.Router.file_path","text":"file_path(resource::String; within_doc_root = true) :: String\n\nReturns the path to a resource file. If within_doc_root it will automatically prepend the document root to resource.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.filepath","page":"Router","title":"Genie.Router.filepath","text":"file_path(resource::String; within_doc_root = true) :: String\n\nReturns the path to a resource file. If within_doc_root it will automatically prepend the document root to resource.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.pathify","page":"Router","title":"Genie.Router.pathify","text":"pathify(x) :: String\n\nReturns a proper URI path from a string x.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.file_extension","page":"Router","title":"Genie.Router.file_extension","text":"file_extension(f) :: String\n\nReturns the file extesion of f.\n\n\n\n\n\n","category":"function"},{"location":"API/router.html#Genie.Router.file_headers","page":"Router","title":"Genie.Router.file_headers","text":"file_headers(f) :: Dict{String,String}\n\nReturns the file headers of f.\n\n\n\n\n\n","category":"function"},{"location":"tutorials/6--Working_with_POST_Payloads.html#POSTペイロードの読み込み","page":"POSTペイロードの操作","title":"POSTペイロードの読み込み","text":"","category":"section"},{"location":"tutorials/6--Working_with_POST_Payloads.html","page":"POSTペイロードの操作","title":"POSTペイロードの操作","text":"Genie makes it easy to work with POST payloads. First, we need to register a dedicated route to handle POST requests. Then, once a POST request is received, Genie will automatically extract the payload, making it accessible throughout the Requests.postpayload method – and appending it to the Router.@params(:POST) collection.","category":"page"},{"location":"tutorials/6--Working_with_POST_Payloads.html#form-dataペイロードの処理","page":"POSTペイロードの操作","title":"form-dataペイロードの処理","text":"","category":"section"},{"location":"tutorials/6--Working_with_POST_Payloads.html","page":"POSTペイロードの操作","title":"POSTペイロードの操作","text":"次のスニペットは、アプリのルート(root)に2つのルート(routes)を登録します。1つはGETリクエスト用で、もう1つはPOSTリクエスト用です。GETルートは、POSTを介して他のルートに送信するフォームを表示します。最後に、データを受信するとカスタムメッセージを表示します。","category":"page"},{"location":"tutorials/6--Working_with_POST_Payloads.html#例","page":"POSTペイロードの操作","title":"例","text":"","category":"section"},{"location":"tutorials/6--Working_with_POST_Payloads.html","page":"POSTペイロードの操作","title":"POSTペイロードの操作","text":"using Genie, Genie.Router, Genie.Renderer.Html, Genie.Requests\n\nform = \"\"\"\n<form action=\"/\" method=\"POST\" enctype=\"multipart/form-data\">\n  <input type=\"text\" name=\"name\" value=\"\" placeholder=\"What's your name?\" />\n  <input type=\"submit\" value=\"Greet\" />\n</form>\n\"\"\"\n\nroute(\"/\") do\n  html(form)\nend\n\nroute(\"/\", method = POST) do\n  \"Hello $(postpayload(:name, \"Anon\"))\"\nend\n\nup()","category":"page"},{"location":"tutorials/6--Working_with_POST_Payloads.html","page":"POSTペイロードの操作","title":"POSTペイロードの操作","text":"postpayload関数はいくつかの特殊性があり、そのうちの1つにはキーとデフォルト値を受け入れることが挙げられます。key変数が定義されていない場合、デフォルト値が返されます。APIドキュメントまたはJuliaの help>モードを利用することで、 postpayloadのさまざまな実装を確認できます。","category":"page"},{"location":"API/encryption.html","page":"Encryption","title":"Encryption","text":"CurrentModule = Encryption","category":"page"},{"location":"API/encryption.html","page":"Encryption","title":"Encryption","text":"encrypt\ndecrypt\nencryption_sauce","category":"page"},{"location":"API/encryption.html#Genie.Encryption.encrypt","page":"Encryption","title":"Genie.Encryption.encrypt","text":"encrypt{T}(s::T) :: String\n\nEncrypts s.\n\n\n\n\n\n","category":"function"},{"location":"API/encryption.html#Genie.Encryption.decrypt","page":"Encryption","title":"Genie.Encryption.decrypt","text":"decrypt(s::String) :: String\n\nDecrypts s (a string previously encrypted by Genie).\n\n\n\n\n\n","category":"function"},{"location":"API/encryption.html#Genie.Encryption.encryption_sauce","page":"Encryption","title":"Genie.Encryption.encryption_sauce","text":"encryption_sauce() :: Tuple{Vector{UInt8},Vector{UInt8}}\n\nGenerates a pair of key32 and iv16 with salt for encryption/decryption\n\n\n\n\n\n","category":"function"},{"location":"API/headers.html","page":"Headers","title":"Headers","text":"CurrentModule = Genie.Headers","category":"page"},{"location":"API/headers.html","page":"Headers","title":"Headers","text":"set_headers!\nnormalize_headers\nnormalize_header_key","category":"page"},{"location":"API/headers.html#Genie.Headers.set_headers!","page":"Headers","title":"Genie.Headers.set_headers!","text":"set_headers!(req::HTTP.Request, res::HTTP.Response, app_response::HTTP.Response) :: HTTP.Response\n\nConfigures the response headers.\n\n\n\n\n\n","category":"function"},{"location":"API/headers.html#Genie.Headers.normalize_headers","page":"Headers","title":"Genie.Headers.normalize_headers","text":"normalize_headers(req::HTTP.Request)\n\nMakes request headers case insensitive.\n\n\n\n\n\n","category":"function"},{"location":"API/headers.html#Genie.Headers.normalize_header_key","page":"Headers","title":"Genie.Headers.normalize_header_key","text":"normalize_header_key(key::String) :: String\n\nBrings header keys to standard casing.\n\n\n\n\n\n","category":"function"},{"location":"API/httputils.html","page":"HttpUtils","title":"HttpUtils","text":"CurrentModule = HTTPUtils","category":"page"},{"location":"API/httputils.html","page":"HttpUtils","title":"HttpUtils","text":"HTTPUtils.Dict","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html#WebSocketの利用","page":"WebSocketの利用","title":"WebSocketの利用","text":"","category":"section"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"GenieはWebSocketを介したクライアントサーバ間の通信のための強力なワークフローを提供します。そのシステムはネットワークレベルの複雑さを隠し、GenieのMVCワークフローに似た強力な抽象化を公開します。というのも、クライアントとサーバはchannels(routesに相当)を介してメッセージを交換します。","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html#channelsの登録","page":"WebSocketの利用","title":"channelsの登録","text":"","category":"section"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"メッセージはマッチするチャンネルに紐づけられており、ペイロードを抽出し、指定されたハンドラ(コントローラメソッドまたは関数)を呼び出すGenieのRouterによって処理されます。ほとんどの場合、channelsはroutesと機能的に同等であり、同様の方法で定義されます。","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"using Genie.Router\n\nchannel(\"/foo/bar\") do\n  # process request\nend\n\nchannel(\"/baz/bax\", YourController.your_handler)","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"上記のchannelの定義は、/foo/barと/baz/baxに送信されるWebsocketメッセージを処理します。","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html#クライアントのセットアップ","page":"WebSocketの利用","title":"クライアントのセットアップ","text":"","category":"section"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"ブラウザでWebSocket通信を有効にするには、JavaScriptファイルをロードする必要があります。これはAssetsモジュールを介することでGenieが提供します。Genieは、Assets.channels_support()を提供することで、クライアント側でWebSocketの基盤を非常に簡単に準備できます。例えば、WebアプリのルートページにWebSocketのサポートを追加する場合、必要なのは以下です。","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"using Genie.Router, Genie.Assets\n\nroute(\"/\") do\n  Assets.channels_support()\nend","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"記載通り、クライアントとサーバ間でメッセージをやりとりできるようにするために必要なことはこれだけです。","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html#試してみよう！","page":"WebSocketの利用","title":"試してみよう！","text":"","category":"section"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"Julia REPLで次のJuliaコードを実行することで進んでいきましょう。","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"using Genie, Genie.Router, Genie.Assets\n\nGenie.config.websockets_server = true # enable the websockets server\n\nroute(\"/\") do\n  Assets.channels_support()\nend\n\nup() # start the servers","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"ここで、http://localhost:8000にアクセスすると、空白ページが表示されますが、WebSocket通信に必要なすべての機能は既に含まれています！ブラウザの開発者ツールを利用すると、NetWork部分に、channels.jsファイルがロードされ、WebSocketsリクエストが行われた旨(GETを介したステータス101)が記されています。さらにコンソールを覗くと、Subscription readyメッセージを確認できます。コンソールの出力は次のようになります。","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"Queuing subscription channels.js:107:13\nSubscription ready channels.js:105:13\nOK channels.js:74:11\nOverwrite window.parse_payload to handle messages from the server channels.js:98:11\nOK","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"何が起こったか？","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"この時点で、Assets.channels_support()を呼び出すことで、Genieは以下を実施しました。","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"バンドルされたchannels.jsファイルをロードしました。このファイルにはWebSocketを介した通信をするためのJavaScript APIを提供します\nサブスクライブ用とサブスクライブ解除用の2つのデフォルトチャンネルを作成しました。(/__/subscribe、/__/unsubscribe)\n/__/subscribeを呼び出し、クライアントとサーバ間のWebSocket接続を作成しました。","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html#サーバーからメッセージのプッシュ","page":"WebSocketの利用","title":"サーバーからメッセージのプッシュ","text":"","category":"section"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"クライアントと対話する準備ができました。Webアプリを実行しているJulia REPLに移動して、次の通り実行します。","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"julia> Genie.WebChannels.connected_clients()\n1-element Array{Genie.WebChannels.ChannelClient,1}:\n Genie.WebChannels.ChannelClient(HTTP.WebSockets.WebSocket{HTTP.ConnectionPool.Transaction{Sockets.TCPSocket}}(T0  🔁    0↑🔒    0↓🔒 100s 127.0.0.1:8001:8001 ≣16, 0x01, true, UInt8[0x7b, 0x22, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22  …  0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x3a, 0x7b, 0x7d, 0x7d], UInt8[], false, false), [\"__\"])","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"__チャンネルに接続されたクライアントが1つあります！　メッセージを送ってみます。","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"julia> Genie.WebChannels.broadcast(\"__\", \"Hey!\")\ntrue","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"ブラウザのコンソールを見ると、「Hey!」というメッセージを確認できます。デフォルトでは、クライアント側のハンドラはメッセージを出力するだけです。「Overwrite window.parsepayload to handle messages from the server(window.parsepayloadを上書きしてサーバからのメッセージを処理する)」ことができることも通知もされる。やってみましょう。現在のREPLで実行します。(ルート(root)のルート(routes)ハンドラが上書きされます)","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"route(\"/\") do\n  Assets.channels_support() *\n  \"\"\"\n  <script>\n  window.parse_payload = function(payload) {\n    console.log('Got this payload: ' + payload);\n  }\n  </script>\n  \"\"\"\nend","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"ここで、ページをリロードしてメッセージをブロードキャストすると、カスタムペイロードハンドラによって取得されます。ただし、ブロードキャスト時にエラーが発生する可能性もあります。(エラーがログに出力されるが、それは重大ではなくアプリケーションを破壊することはないので、心配する必要はない)","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"julia> Genie.WebChannels.broadcast(\"__\", \"Hey!\")\n┌ Error: Base.IOError(\"stream is closed or unusable\", 0)\n└ @ Genie.WebChannels ~/.julia/dev/Genie/src/WebChannels.jl:220\ntrue","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"このエラーは、ページをリロードした際、前に接続したWebSocketクライアントが到達不可となるために発生しています。しかし、まだ参照を保持しており、ブロードキャストしようとするとストリームが閉じられていることがわかります。これを修正するには、以下を呼び出します。","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"julia> Genie.WebChannels.unsubscribe_disconnected_clients()","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"unsubscribe_disconnected_clients()の出力は、残りの(接続済みの)クライアントのコレクションです。","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"注意喚起!","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"無害ではありますが、エラーはメモリ内に切断したクライアントが残っていることを示しています。不要なデータであるならば、それらをパージしメモリを開放してください。","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"いつでも、接続されたクライアントはGenie.WebChannels.connected_clients()で、切断されたクライアントは Genie.WebChannels.disconnected_clients()でチェックできます。","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html#クライアントからメッセージのプッシュ","page":"WebSocketの利用","title":"クライアントからメッセージのプッシュ","text":"","category":"section"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"クライアントからサーバにメッセージをプッシュすることもできます。UIを用意していないため、ブラウザのコンソールとGenieのJavaScript APIを利用してメッセージを送信してみましょう。しかし、最初にメッセージを受信するためのchannelを設定する必要があります。アクティブなJulia REPLで以下を実行してください。","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"channel(\"/__/echo\") do\n  \"Received: $(@params(:payload))\"\nend","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"エンドポイントが起動したので、ブラウザのコンソールに移動して以下を実行します。","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"Genie.WebChannels.sendMessageTo('__', 'echo', 'Hello!')","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"コンソールはすぐにサーバからのレスポンス表示します。","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"Received: Hello!  channels.js:74:3\nGot this payload: Received: Hello!","category":"page"},{"location":"tutorials/17--Working_with_Web_Sockets.html#まとめ","page":"WebSocketの利用","title":"まとめ","text":"","category":"section"},{"location":"tutorials/17--Working_with_Web_Sockets.html","page":"WebSocketの利用","title":"WebSocketの利用","text":"これで、GenieでWebSocketを操作するための紹介は終わりです。クライアントとサーバ間の通信を設定し、サーバとクライアントの両方からメッセージを送信し、WebChannels APIを使用して様々なタスクを実行する知識をここまでで得ることができました。","category":"page"},{"location":"API/sessions.html","page":"Sessions","title":"Sessions","text":"CurrentModule = Sessions","category":"page"},{"location":"API/sessions.html","page":"Sessions","title":"Sessions","text":"Session\nid\nstart\nset!\nget\nunset!\nisset\npersist\nload\nsession\ninit","category":"page"},{"location":"API/sessions.html#Genie.Sessions.Session","page":"Sessions","title":"Genie.Sessions.Session","text":"mutable struct Session\n\nRepresents a session object\n\n\n\n\n\n","category":"type"},{"location":"API/sessions.html#Genie.Sessions.id","page":"Sessions","title":"Genie.Sessions.id","text":"id() :: String\n\nGenerates a new session id.\n\n\n\n\n\nid(payload::Union{HTTP.Request,HTTP.Response}) :: String\n\nAttempts to retrieve the session id from the provided payload object. If that is not available, a new session id is created.\n\n\n\n\n\nid(req::HTTP.Request, res::HTTP.Response) :: String\n\nAttempts to retrieve the session id from the provided request and response objects. If that is not available, a new session id is created.\n\n\n\n\n\n","category":"function"},{"location":"API/sessions.html#Genie.Sessions.start","page":"Sessions","title":"Genie.Sessions.start","text":"start(session_id::String, req::HTTP.Request, res::HTTP.Response; options = Dict{String,String}()) :: Tuple{Session,HTTP.Response}\n\nInitiates a new HTTP session with the provided session_id.\n\nArguments\n\nsession_id::String: the id of the session object\nreq::HTTP.Request: the request object\nres::HTTP.Response: the response object\noptions::Dict{String,String}: extra options for setting the session cookie, such as Path and HttpOnly\n\n\n\n\n\nstart(req::HTTP.Request, res::HTTP.Response; options::Dict{String,String} = Dict{String,String}()) :: Session\n\nInitiates a new default session object, generating a new session id.\n\nArguments\n\nreq::HTTP.Request: the request object\nres::HTTP.Response: the response object\noptions::Dict{String,String}: extra options for setting the session cookie, such as Path and HttpOnly\n\n\n\n\n\n","category":"function"},{"location":"API/sessions.html#Genie.Sessions.set!","page":"Sessions","title":"Genie.Sessions.set!","text":"set!(s::Session, key::Symbol, value::Any) :: Session\n\nStores value as key on the Session object s.\n\n\n\n\n\n","category":"function"},{"location":"API/sessions.html#Genie.Sessions.get","page":"Sessions","title":"Genie.Sessions.get","text":"get(s::Session, key::Symbol) :: Union{Nothing,Any}\n\nReturns the value stored on the Session object s as key, wrapped in a Union{Nothing,Any}.\n\n\n\n\n\nget(s::Session, key::Symbol, default::T) :: T where T\n\nAttempts to retrive the value stored on the Session object s as key. If the value is not set, it returns the default.\n\n\n\n\n\n","category":"function"},{"location":"API/sessions.html#Genie.Sessions.unset!","page":"Sessions","title":"Genie.Sessions.unset!","text":"unset!(s::Session, key::Symbol) :: Session\n\nRemoves the value stored on the Session s as key.\n\n\n\n\n\n","category":"function"},{"location":"API/sessions.html#Genie.Sessions.isset","page":"Sessions","title":"Genie.Sessions.isset","text":"isset(s::Session, key::Symbol) :: Bool\n\nChecks wheter or not key exists on the Session s.\n\n\n\n\n\n","category":"function"},{"location":"API/sessions.html#Genie.Sessions.persist","page":"Sessions","title":"Genie.Sessions.persist","text":"persist(s::Session) :: Session\n\nGeneric method for persisting session data - delegates to the underlying SessionAdapter.\n\n\n\n\n\n","category":"function"},{"location":"API/sessions.html#Genie.Sessions.load","page":"Sessions","title":"Genie.Sessions.load","text":"load(session_id::String) :: Session\n\nLoads session data from persistent storage - delegates to the underlying SessionAdapter.\n\n\n\n\n\n","category":"function"},{"location":"API/sessions.html#Genie.Sessions.session","page":"Sessions","title":"Genie.Sessions.session","text":"session(params::Dict{Symbol,Any}) :: Sessions.Session\n\nReturns the Session object associated with the current HTTP request.\n\n\n\n\n\n","category":"function"},{"location":"API/sessions.html#Genie.Sessions.init","page":"Sessions","title":"Genie.Sessions.init","text":"init() :: Nothing\n\nSets up the session functionality, if configured.\n\n\n\n\n\n","category":"function"}]
}
